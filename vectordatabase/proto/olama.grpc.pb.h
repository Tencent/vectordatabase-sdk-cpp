// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: olama.proto
#ifndef GRPC_olama_2eproto__INCLUDED
#define GRPC_olama_2eproto__INCLUDED

#include "olama.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc_impl {
class CompletionQueue;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc_impl

namespace grpc {
namespace experimental {
template <typename RequestT, typename ResponseT>
class MessageAllocator;
}  // namespace experimental
}  // namespace grpc

namespace olama {

class SearchEngine final {
 public:
  static constexpr char const* service_full_name() {
    return "olama.SearchEngine";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // 修改别名指向
    virtual ::grpc::Status setAlias(::grpc::ClientContext* context, const ::olama::AddAliasRequest& request, ::olama::UpdateAliasResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::UpdateAliasResponse>> AsyncsetAlias(::grpc::ClientContext* context, const ::olama::AddAliasRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::UpdateAliasResponse>>(AsyncsetAliasRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::UpdateAliasResponse>> PrepareAsyncsetAlias(::grpc::ClientContext* context, const ::olama::AddAliasRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::UpdateAliasResponse>>(PrepareAsyncsetAliasRaw(context, request, cq));
    }
    // 查询别名指向
    virtual ::grpc::Status getAlias(::grpc::ClientContext* context, const ::olama::GetAliasRequest& request, ::olama::GetAliasResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::GetAliasResponse>> AsyncgetAlias(::grpc::ClientContext* context, const ::olama::GetAliasRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::GetAliasResponse>>(AsyncgetAliasRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::GetAliasResponse>> PrepareAsyncgetAlias(::grpc::ClientContext* context, const ::olama::GetAliasRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::GetAliasResponse>>(PrepareAsyncgetAliasRaw(context, request, cq));
    }
    // 删除别名指向
    virtual ::grpc::Status deleteAlias(::grpc::ClientContext* context, const ::olama::RemoveAliasRequest& request, ::olama::UpdateAliasResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::UpdateAliasResponse>> AsyncdeleteAlias(::grpc::ClientContext* context, const ::olama::RemoveAliasRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::UpdateAliasResponse>>(AsyncdeleteAliasRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::UpdateAliasResponse>> PrepareAsyncdeleteAlias(::grpc::ClientContext* context, const ::olama::RemoveAliasRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::UpdateAliasResponse>>(PrepareAsyncdeleteAliasRaw(context, request, cq));
    }
    // 创建索引
    virtual ::grpc::Status createCollection(::grpc::ClientContext* context, const ::olama::CreateCollectionRequest& request, ::olama::CreateCollectionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::CreateCollectionResponse>> AsynccreateCollection(::grpc::ClientContext* context, const ::olama::CreateCollectionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::CreateCollectionResponse>>(AsynccreateCollectionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::CreateCollectionResponse>> PrepareAsynccreateCollection(::grpc::ClientContext* context, const ::olama::CreateCollectionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::CreateCollectionResponse>>(PrepareAsynccreateCollectionRaw(context, request, cq));
    }
    // 删除索引
    virtual ::grpc::Status dropCollection(::grpc::ClientContext* context, const ::olama::DropCollectionRequest& request, ::olama::DropCollectionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::DropCollectionResponse>> AsyncdropCollection(::grpc::ClientContext* context, const ::olama::DropCollectionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::DropCollectionResponse>>(AsyncdropCollectionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::DropCollectionResponse>> PrepareAsyncdropCollection(::grpc::ClientContext* context, const ::olama::DropCollectionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::DropCollectionResponse>>(PrepareAsyncdropCollectionRaw(context, request, cq));
    }
    // 清空索引
    virtual ::grpc::Status truncateCollection(::grpc::ClientContext* context, const ::olama::TruncateCollectionRequest& request, ::olama::TruncateCollectionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::TruncateCollectionResponse>> AsynctruncateCollection(::grpc::ClientContext* context, const ::olama::TruncateCollectionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::TruncateCollectionResponse>>(AsynctruncateCollectionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::TruncateCollectionResponse>> PrepareAsynctruncateCollection(::grpc::ClientContext* context, const ::olama::TruncateCollectionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::TruncateCollectionResponse>>(PrepareAsynctruncateCollectionRaw(context, request, cq));
    }
    // 显示索引配置
    virtual ::grpc::Status describeCollection(::grpc::ClientContext* context, const ::olama::DescribeCollectionRequest& request, ::olama::DescribeCollectionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::DescribeCollectionResponse>> AsyncdescribeCollection(::grpc::ClientContext* context, const ::olama::DescribeCollectionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::DescribeCollectionResponse>>(AsyncdescribeCollectionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::DescribeCollectionResponse>> PrepareAsyncdescribeCollection(::grpc::ClientContext* context, const ::olama::DescribeCollectionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::DescribeCollectionResponse>>(PrepareAsyncdescribeCollectionRaw(context, request, cq));
    }
    // 显示全部索引
    virtual ::grpc::Status listCollections(::grpc::ClientContext* context, const ::olama::ListCollectionsRequest& request, ::olama::ListCollectionsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::ListCollectionsResponse>> AsynclistCollections(::grpc::ClientContext* context, const ::olama::ListCollectionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::ListCollectionsResponse>>(AsynclistCollectionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::ListCollectionsResponse>> PrepareAsynclistCollections(::grpc::ClientContext* context, const ::olama::ListCollectionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::ListCollectionsResponse>>(PrepareAsynclistCollectionsRaw(context, request, cq));
    }
    // 重建索引
    virtual ::grpc::Status rebuildIndex(::grpc::ClientContext* context, const ::olama::RebuildIndexRequest& request, ::olama::RebuildIndexResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::RebuildIndexResponse>> AsyncrebuildIndex(::grpc::ClientContext* context, const ::olama::RebuildIndexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::RebuildIndexResponse>>(AsyncrebuildIndexRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::RebuildIndexResponse>> PrepareAsyncrebuildIndex(::grpc::ClientContext* context, const ::olama::RebuildIndexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::RebuildIndexResponse>>(PrepareAsyncrebuildIndexRaw(context, request, cq));
    }
    // 写入向量
    virtual ::grpc::Status upsert(::grpc::ClientContext* context, const ::olama::UpsertRequest& request, ::olama::UpsertResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::UpsertResponse>> Asyncupsert(::grpc::ClientContext* context, const ::olama::UpsertRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::UpsertResponse>>(AsyncupsertRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::UpsertResponse>> PrepareAsyncupsert(::grpc::ClientContext* context, const ::olama::UpsertRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::UpsertResponse>>(PrepareAsyncupsertRaw(context, request, cq));
    }
    // 更新向量
    virtual ::grpc::Status update(::grpc::ClientContext* context, const ::olama::UpdateRequest& request, ::olama::UpdateResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::UpdateResponse>> Asyncupdate(::grpc::ClientContext* context, const ::olama::UpdateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::UpdateResponse>>(AsyncupdateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::UpdateResponse>> PrepareAsyncupdate(::grpc::ClientContext* context, const ::olama::UpdateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::UpdateResponse>>(PrepareAsyncupdateRaw(context, request, cq));
    }
    // 查询向量
    virtual ::grpc::Status query(::grpc::ClientContext* context, const ::olama::QueryRequest& request, ::olama::QueryResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::QueryResponse>> Asyncquery(::grpc::ClientContext* context, const ::olama::QueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::QueryResponse>>(AsyncqueryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::QueryResponse>> PrepareAsyncquery(::grpc::ClientContext* context, const ::olama::QueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::QueryResponse>>(PrepareAsyncqueryRaw(context, request, cq));
    }
    // KNN搜索
    virtual ::grpc::Status search(::grpc::ClientContext* context, const ::olama::SearchRequest& request, ::olama::SearchResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::SearchResponse>> Asyncsearch(::grpc::ClientContext* context, const ::olama::SearchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::SearchResponse>>(AsyncsearchRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::SearchResponse>> PrepareAsyncsearch(::grpc::ClientContext* context, const ::olama::SearchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::SearchResponse>>(PrepareAsyncsearchRaw(context, request, cq));
    }
    // 删除向量
    virtual ::grpc::Status dele(::grpc::ClientContext* context, const ::olama::DeleteRequest& request, ::olama::DeleteResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::DeleteResponse>> Asyncdele(::grpc::ClientContext* context, const ::olama::DeleteRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::DeleteResponse>>(AsyncdeleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::DeleteResponse>> PrepareAsyncdele(::grpc::ClientContext* context, const ::olama::DeleteRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::DeleteResponse>>(PrepareAsyncdeleRaw(context, request, cq));
    }
    // 创建 database
    virtual ::grpc::Status createDatabase(::grpc::ClientContext* context, const ::olama::DatabaseRequest& request, ::olama::DatabaseResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::DatabaseResponse>> AsynccreateDatabase(::grpc::ClientContext* context, const ::olama::DatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::DatabaseResponse>>(AsynccreateDatabaseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::DatabaseResponse>> PrepareAsynccreateDatabase(::grpc::ClientContext* context, const ::olama::DatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::DatabaseResponse>>(PrepareAsynccreateDatabaseRaw(context, request, cq));
    }
    // 删除 database
    virtual ::grpc::Status dropDatabase(::grpc::ClientContext* context, const ::olama::DatabaseRequest& request, ::olama::DatabaseResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::DatabaseResponse>> AsyncdropDatabase(::grpc::ClientContext* context, const ::olama::DatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::DatabaseResponse>>(AsyncdropDatabaseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::DatabaseResponse>> PrepareAsyncdropDatabase(::grpc::ClientContext* context, const ::olama::DatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::DatabaseResponse>>(PrepareAsyncdropDatabaseRaw(context, request, cq));
    }
    // 显示全部 database
    virtual ::grpc::Status listDatabases(::grpc::ClientContext* context, const ::olama::DatabaseRequest& request, ::olama::DatabaseResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::DatabaseResponse>> AsynclistDatabases(::grpc::ClientContext* context, const ::olama::DatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::DatabaseResponse>>(AsynclistDatabasesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::DatabaseResponse>> PrepareAsynclistDatabases(::grpc::ClientContext* context, const ::olama::DatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::olama::DatabaseResponse>>(PrepareAsynclistDatabasesRaw(context, request, cq));
    }
    class experimental_async_interface {
     public:
      virtual ~experimental_async_interface() {}
      // 修改别名指向
      virtual void setAlias(::grpc::ClientContext* context, const ::olama::AddAliasRequest* request, ::olama::UpdateAliasResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setAlias(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::UpdateAliasResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setAlias(::grpc::ClientContext* context, const ::olama::AddAliasRequest* request, ::olama::UpdateAliasResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void setAlias(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::UpdateAliasResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      // 查询别名指向
      virtual void getAlias(::grpc::ClientContext* context, const ::olama::GetAliasRequest* request, ::olama::GetAliasResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getAlias(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::GetAliasResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getAlias(::grpc::ClientContext* context, const ::olama::GetAliasRequest* request, ::olama::GetAliasResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void getAlias(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::GetAliasResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      // 删除别名指向
      virtual void deleteAlias(::grpc::ClientContext* context, const ::olama::RemoveAliasRequest* request, ::olama::UpdateAliasResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void deleteAlias(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::UpdateAliasResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void deleteAlias(::grpc::ClientContext* context, const ::olama::RemoveAliasRequest* request, ::olama::UpdateAliasResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void deleteAlias(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::UpdateAliasResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      // 创建索引
      virtual void createCollection(::grpc::ClientContext* context, const ::olama::CreateCollectionRequest* request, ::olama::CreateCollectionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void createCollection(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::CreateCollectionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void createCollection(::grpc::ClientContext* context, const ::olama::CreateCollectionRequest* request, ::olama::CreateCollectionResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void createCollection(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::CreateCollectionResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      // 删除索引
      virtual void dropCollection(::grpc::ClientContext* context, const ::olama::DropCollectionRequest* request, ::olama::DropCollectionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void dropCollection(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::DropCollectionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void dropCollection(::grpc::ClientContext* context, const ::olama::DropCollectionRequest* request, ::olama::DropCollectionResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void dropCollection(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::DropCollectionResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      // 清空索引
      virtual void truncateCollection(::grpc::ClientContext* context, const ::olama::TruncateCollectionRequest* request, ::olama::TruncateCollectionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void truncateCollection(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::TruncateCollectionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void truncateCollection(::grpc::ClientContext* context, const ::olama::TruncateCollectionRequest* request, ::olama::TruncateCollectionResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void truncateCollection(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::TruncateCollectionResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      // 显示索引配置
      virtual void describeCollection(::grpc::ClientContext* context, const ::olama::DescribeCollectionRequest* request, ::olama::DescribeCollectionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void describeCollection(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::DescribeCollectionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void describeCollection(::grpc::ClientContext* context, const ::olama::DescribeCollectionRequest* request, ::olama::DescribeCollectionResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void describeCollection(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::DescribeCollectionResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      // 显示全部索引
      virtual void listCollections(::grpc::ClientContext* context, const ::olama::ListCollectionsRequest* request, ::olama::ListCollectionsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void listCollections(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::ListCollectionsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void listCollections(::grpc::ClientContext* context, const ::olama::ListCollectionsRequest* request, ::olama::ListCollectionsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void listCollections(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::ListCollectionsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      // 重建索引
      virtual void rebuildIndex(::grpc::ClientContext* context, const ::olama::RebuildIndexRequest* request, ::olama::RebuildIndexResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void rebuildIndex(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::RebuildIndexResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void rebuildIndex(::grpc::ClientContext* context, const ::olama::RebuildIndexRequest* request, ::olama::RebuildIndexResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void rebuildIndex(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::RebuildIndexResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      // 写入向量
      virtual void upsert(::grpc::ClientContext* context, const ::olama::UpsertRequest* request, ::olama::UpsertResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void upsert(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::UpsertResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void upsert(::grpc::ClientContext* context, const ::olama::UpsertRequest* request, ::olama::UpsertResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void upsert(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::UpsertResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      // 更新向量
      virtual void update(::grpc::ClientContext* context, const ::olama::UpdateRequest* request, ::olama::UpdateResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void update(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::UpdateResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void update(::grpc::ClientContext* context, const ::olama::UpdateRequest* request, ::olama::UpdateResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void update(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::UpdateResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      // 查询向量
      virtual void query(::grpc::ClientContext* context, const ::olama::QueryRequest* request, ::olama::QueryResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void query(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::QueryResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void query(::grpc::ClientContext* context, const ::olama::QueryRequest* request, ::olama::QueryResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void query(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::QueryResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      // KNN搜索
      virtual void search(::grpc::ClientContext* context, const ::olama::SearchRequest* request, ::olama::SearchResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void search(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::SearchResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void search(::grpc::ClientContext* context, const ::olama::SearchRequest* request, ::olama::SearchResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void search(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::SearchResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      // 删除向量
      virtual void dele(::grpc::ClientContext* context, const ::olama::DeleteRequest* request, ::olama::DeleteResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void dele(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::DeleteResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void dele(::grpc::ClientContext* context, const ::olama::DeleteRequest* request, ::olama::DeleteResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void dele(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::DeleteResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      // 创建 database
      virtual void createDatabase(::grpc::ClientContext* context, const ::olama::DatabaseRequest* request, ::olama::DatabaseResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void createDatabase(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::DatabaseResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void createDatabase(::grpc::ClientContext* context, const ::olama::DatabaseRequest* request, ::olama::DatabaseResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void createDatabase(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::DatabaseResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      // 删除 database
      virtual void dropDatabase(::grpc::ClientContext* context, const ::olama::DatabaseRequest* request, ::olama::DatabaseResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void dropDatabase(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::DatabaseResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void dropDatabase(::grpc::ClientContext* context, const ::olama::DatabaseRequest* request, ::olama::DatabaseResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void dropDatabase(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::DatabaseResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      // 显示全部 database
      virtual void listDatabases(::grpc::ClientContext* context, const ::olama::DatabaseRequest* request, ::olama::DatabaseResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void listDatabases(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::DatabaseResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void listDatabases(::grpc::ClientContext* context, const ::olama::DatabaseRequest* request, ::olama::DatabaseResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void listDatabases(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::DatabaseResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
    };
    virtual class experimental_async_interface* experimental_async() { return nullptr; }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::UpdateAliasResponse>* AsyncsetAliasRaw(::grpc::ClientContext* context, const ::olama::AddAliasRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::UpdateAliasResponse>* PrepareAsyncsetAliasRaw(::grpc::ClientContext* context, const ::olama::AddAliasRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::GetAliasResponse>* AsyncgetAliasRaw(::grpc::ClientContext* context, const ::olama::GetAliasRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::GetAliasResponse>* PrepareAsyncgetAliasRaw(::grpc::ClientContext* context, const ::olama::GetAliasRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::UpdateAliasResponse>* AsyncdeleteAliasRaw(::grpc::ClientContext* context, const ::olama::RemoveAliasRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::UpdateAliasResponse>* PrepareAsyncdeleteAliasRaw(::grpc::ClientContext* context, const ::olama::RemoveAliasRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::CreateCollectionResponse>* AsynccreateCollectionRaw(::grpc::ClientContext* context, const ::olama::CreateCollectionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::CreateCollectionResponse>* PrepareAsynccreateCollectionRaw(::grpc::ClientContext* context, const ::olama::CreateCollectionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::DropCollectionResponse>* AsyncdropCollectionRaw(::grpc::ClientContext* context, const ::olama::DropCollectionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::DropCollectionResponse>* PrepareAsyncdropCollectionRaw(::grpc::ClientContext* context, const ::olama::DropCollectionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::TruncateCollectionResponse>* AsynctruncateCollectionRaw(::grpc::ClientContext* context, const ::olama::TruncateCollectionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::TruncateCollectionResponse>* PrepareAsynctruncateCollectionRaw(::grpc::ClientContext* context, const ::olama::TruncateCollectionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::DescribeCollectionResponse>* AsyncdescribeCollectionRaw(::grpc::ClientContext* context, const ::olama::DescribeCollectionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::DescribeCollectionResponse>* PrepareAsyncdescribeCollectionRaw(::grpc::ClientContext* context, const ::olama::DescribeCollectionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::ListCollectionsResponse>* AsynclistCollectionsRaw(::grpc::ClientContext* context, const ::olama::ListCollectionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::ListCollectionsResponse>* PrepareAsynclistCollectionsRaw(::grpc::ClientContext* context, const ::olama::ListCollectionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::RebuildIndexResponse>* AsyncrebuildIndexRaw(::grpc::ClientContext* context, const ::olama::RebuildIndexRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::RebuildIndexResponse>* PrepareAsyncrebuildIndexRaw(::grpc::ClientContext* context, const ::olama::RebuildIndexRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::UpsertResponse>* AsyncupsertRaw(::grpc::ClientContext* context, const ::olama::UpsertRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::UpsertResponse>* PrepareAsyncupsertRaw(::grpc::ClientContext* context, const ::olama::UpsertRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::UpdateResponse>* AsyncupdateRaw(::grpc::ClientContext* context, const ::olama::UpdateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::UpdateResponse>* PrepareAsyncupdateRaw(::grpc::ClientContext* context, const ::olama::UpdateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::QueryResponse>* AsyncqueryRaw(::grpc::ClientContext* context, const ::olama::QueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::QueryResponse>* PrepareAsyncqueryRaw(::grpc::ClientContext* context, const ::olama::QueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::SearchResponse>* AsyncsearchRaw(::grpc::ClientContext* context, const ::olama::SearchRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::SearchResponse>* PrepareAsyncsearchRaw(::grpc::ClientContext* context, const ::olama::SearchRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::DeleteResponse>* AsyncdeleRaw(::grpc::ClientContext* context, const ::olama::DeleteRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::DeleteResponse>* PrepareAsyncdeleRaw(::grpc::ClientContext* context, const ::olama::DeleteRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::DatabaseResponse>* AsynccreateDatabaseRaw(::grpc::ClientContext* context, const ::olama::DatabaseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::DatabaseResponse>* PrepareAsynccreateDatabaseRaw(::grpc::ClientContext* context, const ::olama::DatabaseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::DatabaseResponse>* AsyncdropDatabaseRaw(::grpc::ClientContext* context, const ::olama::DatabaseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::DatabaseResponse>* PrepareAsyncdropDatabaseRaw(::grpc::ClientContext* context, const ::olama::DatabaseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::DatabaseResponse>* AsynclistDatabasesRaw(::grpc::ClientContext* context, const ::olama::DatabaseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::olama::DatabaseResponse>* PrepareAsynclistDatabasesRaw(::grpc::ClientContext* context, const ::olama::DatabaseRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status setAlias(::grpc::ClientContext* context, const ::olama::AddAliasRequest& request, ::olama::UpdateAliasResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::UpdateAliasResponse>> AsyncsetAlias(::grpc::ClientContext* context, const ::olama::AddAliasRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::UpdateAliasResponse>>(AsyncsetAliasRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::UpdateAliasResponse>> PrepareAsyncsetAlias(::grpc::ClientContext* context, const ::olama::AddAliasRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::UpdateAliasResponse>>(PrepareAsyncsetAliasRaw(context, request, cq));
    }
    ::grpc::Status getAlias(::grpc::ClientContext* context, const ::olama::GetAliasRequest& request, ::olama::GetAliasResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::GetAliasResponse>> AsyncgetAlias(::grpc::ClientContext* context, const ::olama::GetAliasRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::GetAliasResponse>>(AsyncgetAliasRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::GetAliasResponse>> PrepareAsyncgetAlias(::grpc::ClientContext* context, const ::olama::GetAliasRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::GetAliasResponse>>(PrepareAsyncgetAliasRaw(context, request, cq));
    }
    ::grpc::Status deleteAlias(::grpc::ClientContext* context, const ::olama::RemoveAliasRequest& request, ::olama::UpdateAliasResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::UpdateAliasResponse>> AsyncdeleteAlias(::grpc::ClientContext* context, const ::olama::RemoveAliasRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::UpdateAliasResponse>>(AsyncdeleteAliasRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::UpdateAliasResponse>> PrepareAsyncdeleteAlias(::grpc::ClientContext* context, const ::olama::RemoveAliasRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::UpdateAliasResponse>>(PrepareAsyncdeleteAliasRaw(context, request, cq));
    }
    ::grpc::Status createCollection(::grpc::ClientContext* context, const ::olama::CreateCollectionRequest& request, ::olama::CreateCollectionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::CreateCollectionResponse>> AsynccreateCollection(::grpc::ClientContext* context, const ::olama::CreateCollectionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::CreateCollectionResponse>>(AsynccreateCollectionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::CreateCollectionResponse>> PrepareAsynccreateCollection(::grpc::ClientContext* context, const ::olama::CreateCollectionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::CreateCollectionResponse>>(PrepareAsynccreateCollectionRaw(context, request, cq));
    }
    ::grpc::Status dropCollection(::grpc::ClientContext* context, const ::olama::DropCollectionRequest& request, ::olama::DropCollectionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::DropCollectionResponse>> AsyncdropCollection(::grpc::ClientContext* context, const ::olama::DropCollectionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::DropCollectionResponse>>(AsyncdropCollectionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::DropCollectionResponse>> PrepareAsyncdropCollection(::grpc::ClientContext* context, const ::olama::DropCollectionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::DropCollectionResponse>>(PrepareAsyncdropCollectionRaw(context, request, cq));
    }
    ::grpc::Status truncateCollection(::grpc::ClientContext* context, const ::olama::TruncateCollectionRequest& request, ::olama::TruncateCollectionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::TruncateCollectionResponse>> AsynctruncateCollection(::grpc::ClientContext* context, const ::olama::TruncateCollectionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::TruncateCollectionResponse>>(AsynctruncateCollectionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::TruncateCollectionResponse>> PrepareAsynctruncateCollection(::grpc::ClientContext* context, const ::olama::TruncateCollectionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::TruncateCollectionResponse>>(PrepareAsynctruncateCollectionRaw(context, request, cq));
    }
    ::grpc::Status describeCollection(::grpc::ClientContext* context, const ::olama::DescribeCollectionRequest& request, ::olama::DescribeCollectionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::DescribeCollectionResponse>> AsyncdescribeCollection(::grpc::ClientContext* context, const ::olama::DescribeCollectionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::DescribeCollectionResponse>>(AsyncdescribeCollectionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::DescribeCollectionResponse>> PrepareAsyncdescribeCollection(::grpc::ClientContext* context, const ::olama::DescribeCollectionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::DescribeCollectionResponse>>(PrepareAsyncdescribeCollectionRaw(context, request, cq));
    }
    ::grpc::Status listCollections(::grpc::ClientContext* context, const ::olama::ListCollectionsRequest& request, ::olama::ListCollectionsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::ListCollectionsResponse>> AsynclistCollections(::grpc::ClientContext* context, const ::olama::ListCollectionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::ListCollectionsResponse>>(AsynclistCollectionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::ListCollectionsResponse>> PrepareAsynclistCollections(::grpc::ClientContext* context, const ::olama::ListCollectionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::ListCollectionsResponse>>(PrepareAsynclistCollectionsRaw(context, request, cq));
    }
    ::grpc::Status rebuildIndex(::grpc::ClientContext* context, const ::olama::RebuildIndexRequest& request, ::olama::RebuildIndexResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::RebuildIndexResponse>> AsyncrebuildIndex(::grpc::ClientContext* context, const ::olama::RebuildIndexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::RebuildIndexResponse>>(AsyncrebuildIndexRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::RebuildIndexResponse>> PrepareAsyncrebuildIndex(::grpc::ClientContext* context, const ::olama::RebuildIndexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::RebuildIndexResponse>>(PrepareAsyncrebuildIndexRaw(context, request, cq));
    }
    ::grpc::Status upsert(::grpc::ClientContext* context, const ::olama::UpsertRequest& request, ::olama::UpsertResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::UpsertResponse>> Asyncupsert(::grpc::ClientContext* context, const ::olama::UpsertRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::UpsertResponse>>(AsyncupsertRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::UpsertResponse>> PrepareAsyncupsert(::grpc::ClientContext* context, const ::olama::UpsertRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::UpsertResponse>>(PrepareAsyncupsertRaw(context, request, cq));
    }
    ::grpc::Status update(::grpc::ClientContext* context, const ::olama::UpdateRequest& request, ::olama::UpdateResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::UpdateResponse>> Asyncupdate(::grpc::ClientContext* context, const ::olama::UpdateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::UpdateResponse>>(AsyncupdateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::UpdateResponse>> PrepareAsyncupdate(::grpc::ClientContext* context, const ::olama::UpdateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::UpdateResponse>>(PrepareAsyncupdateRaw(context, request, cq));
    }
    ::grpc::Status query(::grpc::ClientContext* context, const ::olama::QueryRequest& request, ::olama::QueryResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::QueryResponse>> Asyncquery(::grpc::ClientContext* context, const ::olama::QueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::QueryResponse>>(AsyncqueryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::QueryResponse>> PrepareAsyncquery(::grpc::ClientContext* context, const ::olama::QueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::QueryResponse>>(PrepareAsyncqueryRaw(context, request, cq));
    }
    ::grpc::Status search(::grpc::ClientContext* context, const ::olama::SearchRequest& request, ::olama::SearchResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::SearchResponse>> Asyncsearch(::grpc::ClientContext* context, const ::olama::SearchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::SearchResponse>>(AsyncsearchRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::SearchResponse>> PrepareAsyncsearch(::grpc::ClientContext* context, const ::olama::SearchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::SearchResponse>>(PrepareAsyncsearchRaw(context, request, cq));
    }
    ::grpc::Status dele(::grpc::ClientContext* context, const ::olama::DeleteRequest& request, ::olama::DeleteResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::DeleteResponse>> Asyncdele(::grpc::ClientContext* context, const ::olama::DeleteRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::DeleteResponse>>(AsyncdeleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::DeleteResponse>> PrepareAsyncdele(::grpc::ClientContext* context, const ::olama::DeleteRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::DeleteResponse>>(PrepareAsyncdeleRaw(context, request, cq));
    }
    ::grpc::Status createDatabase(::grpc::ClientContext* context, const ::olama::DatabaseRequest& request, ::olama::DatabaseResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::DatabaseResponse>> AsynccreateDatabase(::grpc::ClientContext* context, const ::olama::DatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::DatabaseResponse>>(AsynccreateDatabaseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::DatabaseResponse>> PrepareAsynccreateDatabase(::grpc::ClientContext* context, const ::olama::DatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::DatabaseResponse>>(PrepareAsynccreateDatabaseRaw(context, request, cq));
    }
    ::grpc::Status dropDatabase(::grpc::ClientContext* context, const ::olama::DatabaseRequest& request, ::olama::DatabaseResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::DatabaseResponse>> AsyncdropDatabase(::grpc::ClientContext* context, const ::olama::DatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::DatabaseResponse>>(AsyncdropDatabaseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::DatabaseResponse>> PrepareAsyncdropDatabase(::grpc::ClientContext* context, const ::olama::DatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::DatabaseResponse>>(PrepareAsyncdropDatabaseRaw(context, request, cq));
    }
    ::grpc::Status listDatabases(::grpc::ClientContext* context, const ::olama::DatabaseRequest& request, ::olama::DatabaseResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::DatabaseResponse>> AsynclistDatabases(::grpc::ClientContext* context, const ::olama::DatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::DatabaseResponse>>(AsynclistDatabasesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::DatabaseResponse>> PrepareAsynclistDatabases(::grpc::ClientContext* context, const ::olama::DatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::olama::DatabaseResponse>>(PrepareAsynclistDatabasesRaw(context, request, cq));
    }
    class experimental_async final :
      public StubInterface::experimental_async_interface {
     public:
      void setAlias(::grpc::ClientContext* context, const ::olama::AddAliasRequest* request, ::olama::UpdateAliasResponse* response, std::function<void(::grpc::Status)>) override;
      void setAlias(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::UpdateAliasResponse* response, std::function<void(::grpc::Status)>) override;
      void setAlias(::grpc::ClientContext* context, const ::olama::AddAliasRequest* request, ::olama::UpdateAliasResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void setAlias(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::UpdateAliasResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void getAlias(::grpc::ClientContext* context, const ::olama::GetAliasRequest* request, ::olama::GetAliasResponse* response, std::function<void(::grpc::Status)>) override;
      void getAlias(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::GetAliasResponse* response, std::function<void(::grpc::Status)>) override;
      void getAlias(::grpc::ClientContext* context, const ::olama::GetAliasRequest* request, ::olama::GetAliasResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void getAlias(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::GetAliasResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void deleteAlias(::grpc::ClientContext* context, const ::olama::RemoveAliasRequest* request, ::olama::UpdateAliasResponse* response, std::function<void(::grpc::Status)>) override;
      void deleteAlias(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::UpdateAliasResponse* response, std::function<void(::grpc::Status)>) override;
      void deleteAlias(::grpc::ClientContext* context, const ::olama::RemoveAliasRequest* request, ::olama::UpdateAliasResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void deleteAlias(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::UpdateAliasResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void createCollection(::grpc::ClientContext* context, const ::olama::CreateCollectionRequest* request, ::olama::CreateCollectionResponse* response, std::function<void(::grpc::Status)>) override;
      void createCollection(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::CreateCollectionResponse* response, std::function<void(::grpc::Status)>) override;
      void createCollection(::grpc::ClientContext* context, const ::olama::CreateCollectionRequest* request, ::olama::CreateCollectionResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void createCollection(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::CreateCollectionResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void dropCollection(::grpc::ClientContext* context, const ::olama::DropCollectionRequest* request, ::olama::DropCollectionResponse* response, std::function<void(::grpc::Status)>) override;
      void dropCollection(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::DropCollectionResponse* response, std::function<void(::grpc::Status)>) override;
      void dropCollection(::grpc::ClientContext* context, const ::olama::DropCollectionRequest* request, ::olama::DropCollectionResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void dropCollection(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::DropCollectionResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void truncateCollection(::grpc::ClientContext* context, const ::olama::TruncateCollectionRequest* request, ::olama::TruncateCollectionResponse* response, std::function<void(::grpc::Status)>) override;
      void truncateCollection(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::TruncateCollectionResponse* response, std::function<void(::grpc::Status)>) override;
      void truncateCollection(::grpc::ClientContext* context, const ::olama::TruncateCollectionRequest* request, ::olama::TruncateCollectionResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void truncateCollection(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::TruncateCollectionResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void describeCollection(::grpc::ClientContext* context, const ::olama::DescribeCollectionRequest* request, ::olama::DescribeCollectionResponse* response, std::function<void(::grpc::Status)>) override;
      void describeCollection(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::DescribeCollectionResponse* response, std::function<void(::grpc::Status)>) override;
      void describeCollection(::grpc::ClientContext* context, const ::olama::DescribeCollectionRequest* request, ::olama::DescribeCollectionResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void describeCollection(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::DescribeCollectionResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void listCollections(::grpc::ClientContext* context, const ::olama::ListCollectionsRequest* request, ::olama::ListCollectionsResponse* response, std::function<void(::grpc::Status)>) override;
      void listCollections(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::ListCollectionsResponse* response, std::function<void(::grpc::Status)>) override;
      void listCollections(::grpc::ClientContext* context, const ::olama::ListCollectionsRequest* request, ::olama::ListCollectionsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void listCollections(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::ListCollectionsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void rebuildIndex(::grpc::ClientContext* context, const ::olama::RebuildIndexRequest* request, ::olama::RebuildIndexResponse* response, std::function<void(::grpc::Status)>) override;
      void rebuildIndex(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::RebuildIndexResponse* response, std::function<void(::grpc::Status)>) override;
      void rebuildIndex(::grpc::ClientContext* context, const ::olama::RebuildIndexRequest* request, ::olama::RebuildIndexResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void rebuildIndex(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::RebuildIndexResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void upsert(::grpc::ClientContext* context, const ::olama::UpsertRequest* request, ::olama::UpsertResponse* response, std::function<void(::grpc::Status)>) override;
      void upsert(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::UpsertResponse* response, std::function<void(::grpc::Status)>) override;
      void upsert(::grpc::ClientContext* context, const ::olama::UpsertRequest* request, ::olama::UpsertResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void upsert(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::UpsertResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void update(::grpc::ClientContext* context, const ::olama::UpdateRequest* request, ::olama::UpdateResponse* response, std::function<void(::grpc::Status)>) override;
      void update(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::UpdateResponse* response, std::function<void(::grpc::Status)>) override;
      void update(::grpc::ClientContext* context, const ::olama::UpdateRequest* request, ::olama::UpdateResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void update(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::UpdateResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void query(::grpc::ClientContext* context, const ::olama::QueryRequest* request, ::olama::QueryResponse* response, std::function<void(::grpc::Status)>) override;
      void query(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::QueryResponse* response, std::function<void(::grpc::Status)>) override;
      void query(::grpc::ClientContext* context, const ::olama::QueryRequest* request, ::olama::QueryResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void query(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::QueryResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void search(::grpc::ClientContext* context, const ::olama::SearchRequest* request, ::olama::SearchResponse* response, std::function<void(::grpc::Status)>) override;
      void search(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::SearchResponse* response, std::function<void(::grpc::Status)>) override;
      void search(::grpc::ClientContext* context, const ::olama::SearchRequest* request, ::olama::SearchResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void search(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::SearchResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void dele(::grpc::ClientContext* context, const ::olama::DeleteRequest* request, ::olama::DeleteResponse* response, std::function<void(::grpc::Status)>) override;
      void dele(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::DeleteResponse* response, std::function<void(::grpc::Status)>) override;
      void dele(::grpc::ClientContext* context, const ::olama::DeleteRequest* request, ::olama::DeleteResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void dele(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::DeleteResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void createDatabase(::grpc::ClientContext* context, const ::olama::DatabaseRequest* request, ::olama::DatabaseResponse* response, std::function<void(::grpc::Status)>) override;
      void createDatabase(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::DatabaseResponse* response, std::function<void(::grpc::Status)>) override;
      void createDatabase(::grpc::ClientContext* context, const ::olama::DatabaseRequest* request, ::olama::DatabaseResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void createDatabase(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::DatabaseResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void dropDatabase(::grpc::ClientContext* context, const ::olama::DatabaseRequest* request, ::olama::DatabaseResponse* response, std::function<void(::grpc::Status)>) override;
      void dropDatabase(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::DatabaseResponse* response, std::function<void(::grpc::Status)>) override;
      void dropDatabase(::grpc::ClientContext* context, const ::olama::DatabaseRequest* request, ::olama::DatabaseResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void dropDatabase(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::DatabaseResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void listDatabases(::grpc::ClientContext* context, const ::olama::DatabaseRequest* request, ::olama::DatabaseResponse* response, std::function<void(::grpc::Status)>) override;
      void listDatabases(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::DatabaseResponse* response, std::function<void(::grpc::Status)>) override;
      void listDatabases(::grpc::ClientContext* context, const ::olama::DatabaseRequest* request, ::olama::DatabaseResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void listDatabases(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::olama::DatabaseResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit experimental_async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class experimental_async_interface* experimental_async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class experimental_async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::olama::UpdateAliasResponse>* AsyncsetAliasRaw(::grpc::ClientContext* context, const ::olama::AddAliasRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::UpdateAliasResponse>* PrepareAsyncsetAliasRaw(::grpc::ClientContext* context, const ::olama::AddAliasRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::GetAliasResponse>* AsyncgetAliasRaw(::grpc::ClientContext* context, const ::olama::GetAliasRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::GetAliasResponse>* PrepareAsyncgetAliasRaw(::grpc::ClientContext* context, const ::olama::GetAliasRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::UpdateAliasResponse>* AsyncdeleteAliasRaw(::grpc::ClientContext* context, const ::olama::RemoveAliasRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::UpdateAliasResponse>* PrepareAsyncdeleteAliasRaw(::grpc::ClientContext* context, const ::olama::RemoveAliasRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::CreateCollectionResponse>* AsynccreateCollectionRaw(::grpc::ClientContext* context, const ::olama::CreateCollectionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::CreateCollectionResponse>* PrepareAsynccreateCollectionRaw(::grpc::ClientContext* context, const ::olama::CreateCollectionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::DropCollectionResponse>* AsyncdropCollectionRaw(::grpc::ClientContext* context, const ::olama::DropCollectionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::DropCollectionResponse>* PrepareAsyncdropCollectionRaw(::grpc::ClientContext* context, const ::olama::DropCollectionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::TruncateCollectionResponse>* AsynctruncateCollectionRaw(::grpc::ClientContext* context, const ::olama::TruncateCollectionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::TruncateCollectionResponse>* PrepareAsynctruncateCollectionRaw(::grpc::ClientContext* context, const ::olama::TruncateCollectionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::DescribeCollectionResponse>* AsyncdescribeCollectionRaw(::grpc::ClientContext* context, const ::olama::DescribeCollectionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::DescribeCollectionResponse>* PrepareAsyncdescribeCollectionRaw(::grpc::ClientContext* context, const ::olama::DescribeCollectionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::ListCollectionsResponse>* AsynclistCollectionsRaw(::grpc::ClientContext* context, const ::olama::ListCollectionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::ListCollectionsResponse>* PrepareAsynclistCollectionsRaw(::grpc::ClientContext* context, const ::olama::ListCollectionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::RebuildIndexResponse>* AsyncrebuildIndexRaw(::grpc::ClientContext* context, const ::olama::RebuildIndexRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::RebuildIndexResponse>* PrepareAsyncrebuildIndexRaw(::grpc::ClientContext* context, const ::olama::RebuildIndexRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::UpsertResponse>* AsyncupsertRaw(::grpc::ClientContext* context, const ::olama::UpsertRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::UpsertResponse>* PrepareAsyncupsertRaw(::grpc::ClientContext* context, const ::olama::UpsertRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::UpdateResponse>* AsyncupdateRaw(::grpc::ClientContext* context, const ::olama::UpdateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::UpdateResponse>* PrepareAsyncupdateRaw(::grpc::ClientContext* context, const ::olama::UpdateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::QueryResponse>* AsyncqueryRaw(::grpc::ClientContext* context, const ::olama::QueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::QueryResponse>* PrepareAsyncqueryRaw(::grpc::ClientContext* context, const ::olama::QueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::SearchResponse>* AsyncsearchRaw(::grpc::ClientContext* context, const ::olama::SearchRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::SearchResponse>* PrepareAsyncsearchRaw(::grpc::ClientContext* context, const ::olama::SearchRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::DeleteResponse>* AsyncdeleRaw(::grpc::ClientContext* context, const ::olama::DeleteRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::DeleteResponse>* PrepareAsyncdeleRaw(::grpc::ClientContext* context, const ::olama::DeleteRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::DatabaseResponse>* AsynccreateDatabaseRaw(::grpc::ClientContext* context, const ::olama::DatabaseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::DatabaseResponse>* PrepareAsynccreateDatabaseRaw(::grpc::ClientContext* context, const ::olama::DatabaseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::DatabaseResponse>* AsyncdropDatabaseRaw(::grpc::ClientContext* context, const ::olama::DatabaseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::DatabaseResponse>* PrepareAsyncdropDatabaseRaw(::grpc::ClientContext* context, const ::olama::DatabaseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::DatabaseResponse>* AsynclistDatabasesRaw(::grpc::ClientContext* context, const ::olama::DatabaseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::olama::DatabaseResponse>* PrepareAsynclistDatabasesRaw(::grpc::ClientContext* context, const ::olama::DatabaseRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_setAlias_;
    const ::grpc::internal::RpcMethod rpcmethod_getAlias_;
    const ::grpc::internal::RpcMethod rpcmethod_deleteAlias_;
    const ::grpc::internal::RpcMethod rpcmethod_createCollection_;
    const ::grpc::internal::RpcMethod rpcmethod_dropCollection_;
    const ::grpc::internal::RpcMethod rpcmethod_truncateCollection_;
    const ::grpc::internal::RpcMethod rpcmethod_describeCollection_;
    const ::grpc::internal::RpcMethod rpcmethod_listCollections_;
    const ::grpc::internal::RpcMethod rpcmethod_rebuildIndex_;
    const ::grpc::internal::RpcMethod rpcmethod_upsert_;
    const ::grpc::internal::RpcMethod rpcmethod_update_;
    const ::grpc::internal::RpcMethod rpcmethod_query_;
    const ::grpc::internal::RpcMethod rpcmethod_search_;
    const ::grpc::internal::RpcMethod rpcmethod_dele_;
    const ::grpc::internal::RpcMethod rpcmethod_createDatabase_;
    const ::grpc::internal::RpcMethod rpcmethod_dropDatabase_;
    const ::grpc::internal::RpcMethod rpcmethod_listDatabases_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // 修改别名指向
    virtual ::grpc::Status setAlias(::grpc::ServerContext* context, const ::olama::AddAliasRequest* request, ::olama::UpdateAliasResponse* response);
    // 查询别名指向
    virtual ::grpc::Status getAlias(::grpc::ServerContext* context, const ::olama::GetAliasRequest* request, ::olama::GetAliasResponse* response);
    // 删除别名指向
    virtual ::grpc::Status deleteAlias(::grpc::ServerContext* context, const ::olama::RemoveAliasRequest* request, ::olama::UpdateAliasResponse* response);
    // 创建索引
    virtual ::grpc::Status createCollection(::grpc::ServerContext* context, const ::olama::CreateCollectionRequest* request, ::olama::CreateCollectionResponse* response);
    // 删除索引
    virtual ::grpc::Status dropCollection(::grpc::ServerContext* context, const ::olama::DropCollectionRequest* request, ::olama::DropCollectionResponse* response);
    // 清空索引
    virtual ::grpc::Status truncateCollection(::grpc::ServerContext* context, const ::olama::TruncateCollectionRequest* request, ::olama::TruncateCollectionResponse* response);
    // 显示索引配置
    virtual ::grpc::Status describeCollection(::grpc::ServerContext* context, const ::olama::DescribeCollectionRequest* request, ::olama::DescribeCollectionResponse* response);
    // 显示全部索引
    virtual ::grpc::Status listCollections(::grpc::ServerContext* context, const ::olama::ListCollectionsRequest* request, ::olama::ListCollectionsResponse* response);
    // 重建索引
    virtual ::grpc::Status rebuildIndex(::grpc::ServerContext* context, const ::olama::RebuildIndexRequest* request, ::olama::RebuildIndexResponse* response);
    // 写入向量
    virtual ::grpc::Status upsert(::grpc::ServerContext* context, const ::olama::UpsertRequest* request, ::olama::UpsertResponse* response);
    // 更新向量
    virtual ::grpc::Status update(::grpc::ServerContext* context, const ::olama::UpdateRequest* request, ::olama::UpdateResponse* response);
    // 查询向量
    virtual ::grpc::Status query(::grpc::ServerContext* context, const ::olama::QueryRequest* request, ::olama::QueryResponse* response);
    // KNN搜索
    virtual ::grpc::Status search(::grpc::ServerContext* context, const ::olama::SearchRequest* request, ::olama::SearchResponse* response);
    // 删除向量
    virtual ::grpc::Status dele(::grpc::ServerContext* context, const ::olama::DeleteRequest* request, ::olama::DeleteResponse* response);
    // 创建 database
    virtual ::grpc::Status createDatabase(::grpc::ServerContext* context, const ::olama::DatabaseRequest* request, ::olama::DatabaseResponse* response);
    // 删除 database
    virtual ::grpc::Status dropDatabase(::grpc::ServerContext* context, const ::olama::DatabaseRequest* request, ::olama::DatabaseResponse* response);
    // 显示全部 database
    virtual ::grpc::Status listDatabases(::grpc::ServerContext* context, const ::olama::DatabaseRequest* request, ::olama::DatabaseResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_setAlias : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_setAlias() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_setAlias() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setAlias(::grpc::ServerContext* /*context*/, const ::olama::AddAliasRequest* /*request*/, ::olama::UpdateAliasResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetAlias(::grpc::ServerContext* context, ::olama::AddAliasRequest* request, ::grpc::ServerAsyncResponseWriter< ::olama::UpdateAliasResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getAlias : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getAlias() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_getAlias() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getAlias(::grpc::ServerContext* /*context*/, const ::olama::GetAliasRequest* /*request*/, ::olama::GetAliasResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetAlias(::grpc::ServerContext* context, ::olama::GetAliasRequest* request, ::grpc::ServerAsyncResponseWriter< ::olama::GetAliasResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_deleteAlias : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_deleteAlias() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_deleteAlias() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status deleteAlias(::grpc::ServerContext* /*context*/, const ::olama::RemoveAliasRequest* /*request*/, ::olama::UpdateAliasResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdeleteAlias(::grpc::ServerContext* context, ::olama::RemoveAliasRequest* request, ::grpc::ServerAsyncResponseWriter< ::olama::UpdateAliasResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_createCollection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_createCollection() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_createCollection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status createCollection(::grpc::ServerContext* /*context*/, const ::olama::CreateCollectionRequest* /*request*/, ::olama::CreateCollectionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcreateCollection(::grpc::ServerContext* context, ::olama::CreateCollectionRequest* request, ::grpc::ServerAsyncResponseWriter< ::olama::CreateCollectionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_dropCollection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_dropCollection() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_dropCollection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status dropCollection(::grpc::ServerContext* /*context*/, const ::olama::DropCollectionRequest* /*request*/, ::olama::DropCollectionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdropCollection(::grpc::ServerContext* context, ::olama::DropCollectionRequest* request, ::grpc::ServerAsyncResponseWriter< ::olama::DropCollectionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_truncateCollection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_truncateCollection() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_truncateCollection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status truncateCollection(::grpc::ServerContext* /*context*/, const ::olama::TruncateCollectionRequest* /*request*/, ::olama::TruncateCollectionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequesttruncateCollection(::grpc::ServerContext* context, ::olama::TruncateCollectionRequest* request, ::grpc::ServerAsyncResponseWriter< ::olama::TruncateCollectionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_describeCollection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_describeCollection() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_describeCollection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status describeCollection(::grpc::ServerContext* /*context*/, const ::olama::DescribeCollectionRequest* /*request*/, ::olama::DescribeCollectionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdescribeCollection(::grpc::ServerContext* context, ::olama::DescribeCollectionRequest* request, ::grpc::ServerAsyncResponseWriter< ::olama::DescribeCollectionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_listCollections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_listCollections() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_listCollections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status listCollections(::grpc::ServerContext* /*context*/, const ::olama::ListCollectionsRequest* /*request*/, ::olama::ListCollectionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestlistCollections(::grpc::ServerContext* context, ::olama::ListCollectionsRequest* request, ::grpc::ServerAsyncResponseWriter< ::olama::ListCollectionsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_rebuildIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_rebuildIndex() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_rebuildIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status rebuildIndex(::grpc::ServerContext* /*context*/, const ::olama::RebuildIndexRequest* /*request*/, ::olama::RebuildIndexResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestrebuildIndex(::grpc::ServerContext* context, ::olama::RebuildIndexRequest* request, ::grpc::ServerAsyncResponseWriter< ::olama::RebuildIndexResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_upsert : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_upsert() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_upsert() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status upsert(::grpc::ServerContext* /*context*/, const ::olama::UpsertRequest* /*request*/, ::olama::UpsertResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestupsert(::grpc::ServerContext* context, ::olama::UpsertRequest* request, ::grpc::ServerAsyncResponseWriter< ::olama::UpsertResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_update : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_update() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_update() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status update(::grpc::ServerContext* /*context*/, const ::olama::UpdateRequest* /*request*/, ::olama::UpdateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestupdate(::grpc::ServerContext* context, ::olama::UpdateRequest* request, ::grpc::ServerAsyncResponseWriter< ::olama::UpdateResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_query : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_query() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_query() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status query(::grpc::ServerContext* /*context*/, const ::olama::QueryRequest* /*request*/, ::olama::QueryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestquery(::grpc::ServerContext* context, ::olama::QueryRequest* request, ::grpc::ServerAsyncResponseWriter< ::olama::QueryResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_search : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_search() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_search() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status search(::grpc::ServerContext* /*context*/, const ::olama::SearchRequest* /*request*/, ::olama::SearchResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestsearch(::grpc::ServerContext* context, ::olama::SearchRequest* request, ::grpc::ServerAsyncResponseWriter< ::olama::SearchResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_dele : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_dele() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_dele() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status dele(::grpc::ServerContext* /*context*/, const ::olama::DeleteRequest* /*request*/, ::olama::DeleteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestdele(::grpc::ServerContext* context, ::olama::DeleteRequest* request, ::grpc::ServerAsyncResponseWriter< ::olama::DeleteResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_createDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_createDatabase() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_createDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status createDatabase(::grpc::ServerContext* /*context*/, const ::olama::DatabaseRequest* /*request*/, ::olama::DatabaseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcreateDatabase(::grpc::ServerContext* context, ::olama::DatabaseRequest* request, ::grpc::ServerAsyncResponseWriter< ::olama::DatabaseResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_dropDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_dropDatabase() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_dropDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status dropDatabase(::grpc::ServerContext* /*context*/, const ::olama::DatabaseRequest* /*request*/, ::olama::DatabaseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdropDatabase(::grpc::ServerContext* context, ::olama::DatabaseRequest* request, ::grpc::ServerAsyncResponseWriter< ::olama::DatabaseResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_listDatabases : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_listDatabases() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_listDatabases() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status listDatabases(::grpc::ServerContext* /*context*/, const ::olama::DatabaseRequest* /*request*/, ::olama::DatabaseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestlistDatabases(::grpc::ServerContext* context, ::olama::DatabaseRequest* request, ::grpc::ServerAsyncResponseWriter< ::olama::DatabaseResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_setAlias<WithAsyncMethod_getAlias<WithAsyncMethod_deleteAlias<WithAsyncMethod_createCollection<WithAsyncMethod_dropCollection<WithAsyncMethod_truncateCollection<WithAsyncMethod_describeCollection<WithAsyncMethod_listCollections<WithAsyncMethod_rebuildIndex<WithAsyncMethod_upsert<WithAsyncMethod_update<WithAsyncMethod_query<WithAsyncMethod_search<WithAsyncMethod_dele<WithAsyncMethod_createDatabase<WithAsyncMethod_dropDatabase<WithAsyncMethod_listDatabases<Service > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_setAlias : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_setAlias() {
      ::grpc::Service::experimental().MarkMethodCallback(0,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::olama::AddAliasRequest, ::olama::UpdateAliasResponse>(
          [this](::grpc::ServerContext* context,
                 const ::olama::AddAliasRequest* request,
                 ::olama::UpdateAliasResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->setAlias(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_setAlias(
        ::grpc::experimental::MessageAllocator< ::olama::AddAliasRequest, ::olama::UpdateAliasResponse>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::olama::AddAliasRequest, ::olama::UpdateAliasResponse>*>(
          ::grpc::Service::experimental().GetHandler(0))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_setAlias() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setAlias(::grpc::ServerContext* /*context*/, const ::olama::AddAliasRequest* /*request*/, ::olama::UpdateAliasResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void setAlias(::grpc::ServerContext* /*context*/, const ::olama::AddAliasRequest* /*request*/, ::olama::UpdateAliasResponse* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_getAlias : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_getAlias() {
      ::grpc::Service::experimental().MarkMethodCallback(1,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::olama::GetAliasRequest, ::olama::GetAliasResponse>(
          [this](::grpc::ServerContext* context,
                 const ::olama::GetAliasRequest* request,
                 ::olama::GetAliasResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->getAlias(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_getAlias(
        ::grpc::experimental::MessageAllocator< ::olama::GetAliasRequest, ::olama::GetAliasResponse>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::olama::GetAliasRequest, ::olama::GetAliasResponse>*>(
          ::grpc::Service::experimental().GetHandler(1))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_getAlias() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getAlias(::grpc::ServerContext* /*context*/, const ::olama::GetAliasRequest* /*request*/, ::olama::GetAliasResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void getAlias(::grpc::ServerContext* /*context*/, const ::olama::GetAliasRequest* /*request*/, ::olama::GetAliasResponse* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_deleteAlias : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_deleteAlias() {
      ::grpc::Service::experimental().MarkMethodCallback(2,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::olama::RemoveAliasRequest, ::olama::UpdateAliasResponse>(
          [this](::grpc::ServerContext* context,
                 const ::olama::RemoveAliasRequest* request,
                 ::olama::UpdateAliasResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->deleteAlias(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_deleteAlias(
        ::grpc::experimental::MessageAllocator< ::olama::RemoveAliasRequest, ::olama::UpdateAliasResponse>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::olama::RemoveAliasRequest, ::olama::UpdateAliasResponse>*>(
          ::grpc::Service::experimental().GetHandler(2))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_deleteAlias() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status deleteAlias(::grpc::ServerContext* /*context*/, const ::olama::RemoveAliasRequest* /*request*/, ::olama::UpdateAliasResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void deleteAlias(::grpc::ServerContext* /*context*/, const ::olama::RemoveAliasRequest* /*request*/, ::olama::UpdateAliasResponse* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_createCollection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_createCollection() {
      ::grpc::Service::experimental().MarkMethodCallback(3,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::olama::CreateCollectionRequest, ::olama::CreateCollectionResponse>(
          [this](::grpc::ServerContext* context,
                 const ::olama::CreateCollectionRequest* request,
                 ::olama::CreateCollectionResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->createCollection(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_createCollection(
        ::grpc::experimental::MessageAllocator< ::olama::CreateCollectionRequest, ::olama::CreateCollectionResponse>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::olama::CreateCollectionRequest, ::olama::CreateCollectionResponse>*>(
          ::grpc::Service::experimental().GetHandler(3))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_createCollection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status createCollection(::grpc::ServerContext* /*context*/, const ::olama::CreateCollectionRequest* /*request*/, ::olama::CreateCollectionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void createCollection(::grpc::ServerContext* /*context*/, const ::olama::CreateCollectionRequest* /*request*/, ::olama::CreateCollectionResponse* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_dropCollection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_dropCollection() {
      ::grpc::Service::experimental().MarkMethodCallback(4,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::olama::DropCollectionRequest, ::olama::DropCollectionResponse>(
          [this](::grpc::ServerContext* context,
                 const ::olama::DropCollectionRequest* request,
                 ::olama::DropCollectionResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->dropCollection(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_dropCollection(
        ::grpc::experimental::MessageAllocator< ::olama::DropCollectionRequest, ::olama::DropCollectionResponse>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::olama::DropCollectionRequest, ::olama::DropCollectionResponse>*>(
          ::grpc::Service::experimental().GetHandler(4))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_dropCollection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status dropCollection(::grpc::ServerContext* /*context*/, const ::olama::DropCollectionRequest* /*request*/, ::olama::DropCollectionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void dropCollection(::grpc::ServerContext* /*context*/, const ::olama::DropCollectionRequest* /*request*/, ::olama::DropCollectionResponse* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_truncateCollection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_truncateCollection() {
      ::grpc::Service::experimental().MarkMethodCallback(5,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::olama::TruncateCollectionRequest, ::olama::TruncateCollectionResponse>(
          [this](::grpc::ServerContext* context,
                 const ::olama::TruncateCollectionRequest* request,
                 ::olama::TruncateCollectionResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->truncateCollection(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_truncateCollection(
        ::grpc::experimental::MessageAllocator< ::olama::TruncateCollectionRequest, ::olama::TruncateCollectionResponse>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::olama::TruncateCollectionRequest, ::olama::TruncateCollectionResponse>*>(
          ::grpc::Service::experimental().GetHandler(5))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_truncateCollection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status truncateCollection(::grpc::ServerContext* /*context*/, const ::olama::TruncateCollectionRequest* /*request*/, ::olama::TruncateCollectionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void truncateCollection(::grpc::ServerContext* /*context*/, const ::olama::TruncateCollectionRequest* /*request*/, ::olama::TruncateCollectionResponse* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_describeCollection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_describeCollection() {
      ::grpc::Service::experimental().MarkMethodCallback(6,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::olama::DescribeCollectionRequest, ::olama::DescribeCollectionResponse>(
          [this](::grpc::ServerContext* context,
                 const ::olama::DescribeCollectionRequest* request,
                 ::olama::DescribeCollectionResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->describeCollection(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_describeCollection(
        ::grpc::experimental::MessageAllocator< ::olama::DescribeCollectionRequest, ::olama::DescribeCollectionResponse>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::olama::DescribeCollectionRequest, ::olama::DescribeCollectionResponse>*>(
          ::grpc::Service::experimental().GetHandler(6))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_describeCollection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status describeCollection(::grpc::ServerContext* /*context*/, const ::olama::DescribeCollectionRequest* /*request*/, ::olama::DescribeCollectionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void describeCollection(::grpc::ServerContext* /*context*/, const ::olama::DescribeCollectionRequest* /*request*/, ::olama::DescribeCollectionResponse* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_listCollections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_listCollections() {
      ::grpc::Service::experimental().MarkMethodCallback(7,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::olama::ListCollectionsRequest, ::olama::ListCollectionsResponse>(
          [this](::grpc::ServerContext* context,
                 const ::olama::ListCollectionsRequest* request,
                 ::olama::ListCollectionsResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->listCollections(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_listCollections(
        ::grpc::experimental::MessageAllocator< ::olama::ListCollectionsRequest, ::olama::ListCollectionsResponse>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::olama::ListCollectionsRequest, ::olama::ListCollectionsResponse>*>(
          ::grpc::Service::experimental().GetHandler(7))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_listCollections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status listCollections(::grpc::ServerContext* /*context*/, const ::olama::ListCollectionsRequest* /*request*/, ::olama::ListCollectionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void listCollections(::grpc::ServerContext* /*context*/, const ::olama::ListCollectionsRequest* /*request*/, ::olama::ListCollectionsResponse* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_rebuildIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_rebuildIndex() {
      ::grpc::Service::experimental().MarkMethodCallback(8,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::olama::RebuildIndexRequest, ::olama::RebuildIndexResponse>(
          [this](::grpc::ServerContext* context,
                 const ::olama::RebuildIndexRequest* request,
                 ::olama::RebuildIndexResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->rebuildIndex(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_rebuildIndex(
        ::grpc::experimental::MessageAllocator< ::olama::RebuildIndexRequest, ::olama::RebuildIndexResponse>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::olama::RebuildIndexRequest, ::olama::RebuildIndexResponse>*>(
          ::grpc::Service::experimental().GetHandler(8))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_rebuildIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status rebuildIndex(::grpc::ServerContext* /*context*/, const ::olama::RebuildIndexRequest* /*request*/, ::olama::RebuildIndexResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void rebuildIndex(::grpc::ServerContext* /*context*/, const ::olama::RebuildIndexRequest* /*request*/, ::olama::RebuildIndexResponse* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_upsert : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_upsert() {
      ::grpc::Service::experimental().MarkMethodCallback(9,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::olama::UpsertRequest, ::olama::UpsertResponse>(
          [this](::grpc::ServerContext* context,
                 const ::olama::UpsertRequest* request,
                 ::olama::UpsertResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->upsert(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_upsert(
        ::grpc::experimental::MessageAllocator< ::olama::UpsertRequest, ::olama::UpsertResponse>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::olama::UpsertRequest, ::olama::UpsertResponse>*>(
          ::grpc::Service::experimental().GetHandler(9))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_upsert() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status upsert(::grpc::ServerContext* /*context*/, const ::olama::UpsertRequest* /*request*/, ::olama::UpsertResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void upsert(::grpc::ServerContext* /*context*/, const ::olama::UpsertRequest* /*request*/, ::olama::UpsertResponse* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_update : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_update() {
      ::grpc::Service::experimental().MarkMethodCallback(10,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::olama::UpdateRequest, ::olama::UpdateResponse>(
          [this](::grpc::ServerContext* context,
                 const ::olama::UpdateRequest* request,
                 ::olama::UpdateResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->update(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_update(
        ::grpc::experimental::MessageAllocator< ::olama::UpdateRequest, ::olama::UpdateResponse>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::olama::UpdateRequest, ::olama::UpdateResponse>*>(
          ::grpc::Service::experimental().GetHandler(10))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_update() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status update(::grpc::ServerContext* /*context*/, const ::olama::UpdateRequest* /*request*/, ::olama::UpdateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void update(::grpc::ServerContext* /*context*/, const ::olama::UpdateRequest* /*request*/, ::olama::UpdateResponse* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_query : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_query() {
      ::grpc::Service::experimental().MarkMethodCallback(11,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::olama::QueryRequest, ::olama::QueryResponse>(
          [this](::grpc::ServerContext* context,
                 const ::olama::QueryRequest* request,
                 ::olama::QueryResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->query(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_query(
        ::grpc::experimental::MessageAllocator< ::olama::QueryRequest, ::olama::QueryResponse>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::olama::QueryRequest, ::olama::QueryResponse>*>(
          ::grpc::Service::experimental().GetHandler(11))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_query() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status query(::grpc::ServerContext* /*context*/, const ::olama::QueryRequest* /*request*/, ::olama::QueryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void query(::grpc::ServerContext* /*context*/, const ::olama::QueryRequest* /*request*/, ::olama::QueryResponse* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_search : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_search() {
      ::grpc::Service::experimental().MarkMethodCallback(12,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::olama::SearchRequest, ::olama::SearchResponse>(
          [this](::grpc::ServerContext* context,
                 const ::olama::SearchRequest* request,
                 ::olama::SearchResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->search(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_search(
        ::grpc::experimental::MessageAllocator< ::olama::SearchRequest, ::olama::SearchResponse>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::olama::SearchRequest, ::olama::SearchResponse>*>(
          ::grpc::Service::experimental().GetHandler(12))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_search() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status search(::grpc::ServerContext* /*context*/, const ::olama::SearchRequest* /*request*/, ::olama::SearchResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void search(::grpc::ServerContext* /*context*/, const ::olama::SearchRequest* /*request*/, ::olama::SearchResponse* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_dele : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_dele() {
      ::grpc::Service::experimental().MarkMethodCallback(13,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::olama::DeleteRequest, ::olama::DeleteResponse>(
          [this](::grpc::ServerContext* context,
                 const ::olama::DeleteRequest* request,
                 ::olama::DeleteResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->dele(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_dele(
        ::grpc::experimental::MessageAllocator< ::olama::DeleteRequest, ::olama::DeleteResponse>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::olama::DeleteRequest, ::olama::DeleteResponse>*>(
          ::grpc::Service::experimental().GetHandler(13))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_dele() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status dele(::grpc::ServerContext* /*context*/, const ::olama::DeleteRequest* /*request*/, ::olama::DeleteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void dele(::grpc::ServerContext* /*context*/, const ::olama::DeleteRequest* /*request*/, ::olama::DeleteResponse* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_createDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_createDatabase() {
      ::grpc::Service::experimental().MarkMethodCallback(14,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::olama::DatabaseRequest, ::olama::DatabaseResponse>(
          [this](::grpc::ServerContext* context,
                 const ::olama::DatabaseRequest* request,
                 ::olama::DatabaseResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->createDatabase(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_createDatabase(
        ::grpc::experimental::MessageAllocator< ::olama::DatabaseRequest, ::olama::DatabaseResponse>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::olama::DatabaseRequest, ::olama::DatabaseResponse>*>(
          ::grpc::Service::experimental().GetHandler(14))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_createDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status createDatabase(::grpc::ServerContext* /*context*/, const ::olama::DatabaseRequest* /*request*/, ::olama::DatabaseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void createDatabase(::grpc::ServerContext* /*context*/, const ::olama::DatabaseRequest* /*request*/, ::olama::DatabaseResponse* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_dropDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_dropDatabase() {
      ::grpc::Service::experimental().MarkMethodCallback(15,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::olama::DatabaseRequest, ::olama::DatabaseResponse>(
          [this](::grpc::ServerContext* context,
                 const ::olama::DatabaseRequest* request,
                 ::olama::DatabaseResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->dropDatabase(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_dropDatabase(
        ::grpc::experimental::MessageAllocator< ::olama::DatabaseRequest, ::olama::DatabaseResponse>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::olama::DatabaseRequest, ::olama::DatabaseResponse>*>(
          ::grpc::Service::experimental().GetHandler(15))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_dropDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status dropDatabase(::grpc::ServerContext* /*context*/, const ::olama::DatabaseRequest* /*request*/, ::olama::DatabaseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void dropDatabase(::grpc::ServerContext* /*context*/, const ::olama::DatabaseRequest* /*request*/, ::olama::DatabaseResponse* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_listDatabases : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_listDatabases() {
      ::grpc::Service::experimental().MarkMethodCallback(16,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::olama::DatabaseRequest, ::olama::DatabaseResponse>(
          [this](::grpc::ServerContext* context,
                 const ::olama::DatabaseRequest* request,
                 ::olama::DatabaseResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->listDatabases(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_listDatabases(
        ::grpc::experimental::MessageAllocator< ::olama::DatabaseRequest, ::olama::DatabaseResponse>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::olama::DatabaseRequest, ::olama::DatabaseResponse>*>(
          ::grpc::Service::experimental().GetHandler(16))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_listDatabases() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status listDatabases(::grpc::ServerContext* /*context*/, const ::olama::DatabaseRequest* /*request*/, ::olama::DatabaseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void listDatabases(::grpc::ServerContext* /*context*/, const ::olama::DatabaseRequest* /*request*/, ::olama::DatabaseResponse* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  typedef ExperimentalWithCallbackMethod_setAlias<ExperimentalWithCallbackMethod_getAlias<ExperimentalWithCallbackMethod_deleteAlias<ExperimentalWithCallbackMethod_createCollection<ExperimentalWithCallbackMethod_dropCollection<ExperimentalWithCallbackMethod_truncateCollection<ExperimentalWithCallbackMethod_describeCollection<ExperimentalWithCallbackMethod_listCollections<ExperimentalWithCallbackMethod_rebuildIndex<ExperimentalWithCallbackMethod_upsert<ExperimentalWithCallbackMethod_update<ExperimentalWithCallbackMethod_query<ExperimentalWithCallbackMethod_search<ExperimentalWithCallbackMethod_dele<ExperimentalWithCallbackMethod_createDatabase<ExperimentalWithCallbackMethod_dropDatabase<ExperimentalWithCallbackMethod_listDatabases<Service > > > > > > > > > > > > > > > > > ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_setAlias : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_setAlias() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_setAlias() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setAlias(::grpc::ServerContext* /*context*/, const ::olama::AddAliasRequest* /*request*/, ::olama::UpdateAliasResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getAlias : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getAlias() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_getAlias() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getAlias(::grpc::ServerContext* /*context*/, const ::olama::GetAliasRequest* /*request*/, ::olama::GetAliasResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_deleteAlias : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_deleteAlias() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_deleteAlias() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status deleteAlias(::grpc::ServerContext* /*context*/, const ::olama::RemoveAliasRequest* /*request*/, ::olama::UpdateAliasResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_createCollection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_createCollection() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_createCollection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status createCollection(::grpc::ServerContext* /*context*/, const ::olama::CreateCollectionRequest* /*request*/, ::olama::CreateCollectionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_dropCollection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_dropCollection() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_dropCollection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status dropCollection(::grpc::ServerContext* /*context*/, const ::olama::DropCollectionRequest* /*request*/, ::olama::DropCollectionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_truncateCollection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_truncateCollection() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_truncateCollection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status truncateCollection(::grpc::ServerContext* /*context*/, const ::olama::TruncateCollectionRequest* /*request*/, ::olama::TruncateCollectionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_describeCollection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_describeCollection() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_describeCollection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status describeCollection(::grpc::ServerContext* /*context*/, const ::olama::DescribeCollectionRequest* /*request*/, ::olama::DescribeCollectionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_listCollections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_listCollections() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_listCollections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status listCollections(::grpc::ServerContext* /*context*/, const ::olama::ListCollectionsRequest* /*request*/, ::olama::ListCollectionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_rebuildIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_rebuildIndex() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_rebuildIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status rebuildIndex(::grpc::ServerContext* /*context*/, const ::olama::RebuildIndexRequest* /*request*/, ::olama::RebuildIndexResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_upsert : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_upsert() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_upsert() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status upsert(::grpc::ServerContext* /*context*/, const ::olama::UpsertRequest* /*request*/, ::olama::UpsertResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_update : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_update() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_update() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status update(::grpc::ServerContext* /*context*/, const ::olama::UpdateRequest* /*request*/, ::olama::UpdateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_query : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_query() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_query() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status query(::grpc::ServerContext* /*context*/, const ::olama::QueryRequest* /*request*/, ::olama::QueryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_search : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_search() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_search() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status search(::grpc::ServerContext* /*context*/, const ::olama::SearchRequest* /*request*/, ::olama::SearchResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_dele : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_dele() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_dele() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status dele(::grpc::ServerContext* /*context*/, const ::olama::DeleteRequest* /*request*/, ::olama::DeleteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_createDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_createDatabase() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_createDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status createDatabase(::grpc::ServerContext* /*context*/, const ::olama::DatabaseRequest* /*request*/, ::olama::DatabaseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_dropDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_dropDatabase() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_dropDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status dropDatabase(::grpc::ServerContext* /*context*/, const ::olama::DatabaseRequest* /*request*/, ::olama::DatabaseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_listDatabases : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_listDatabases() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_listDatabases() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status listDatabases(::grpc::ServerContext* /*context*/, const ::olama::DatabaseRequest* /*request*/, ::olama::DatabaseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_setAlias : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_setAlias() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_setAlias() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setAlias(::grpc::ServerContext* /*context*/, const ::olama::AddAliasRequest* /*request*/, ::olama::UpdateAliasResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetAlias(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getAlias : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getAlias() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_getAlias() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getAlias(::grpc::ServerContext* /*context*/, const ::olama::GetAliasRequest* /*request*/, ::olama::GetAliasResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetAlias(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_deleteAlias : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_deleteAlias() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_deleteAlias() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status deleteAlias(::grpc::ServerContext* /*context*/, const ::olama::RemoveAliasRequest* /*request*/, ::olama::UpdateAliasResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdeleteAlias(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_createCollection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_createCollection() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_createCollection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status createCollection(::grpc::ServerContext* /*context*/, const ::olama::CreateCollectionRequest* /*request*/, ::olama::CreateCollectionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcreateCollection(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_dropCollection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_dropCollection() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_dropCollection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status dropCollection(::grpc::ServerContext* /*context*/, const ::olama::DropCollectionRequest* /*request*/, ::olama::DropCollectionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdropCollection(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_truncateCollection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_truncateCollection() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_truncateCollection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status truncateCollection(::grpc::ServerContext* /*context*/, const ::olama::TruncateCollectionRequest* /*request*/, ::olama::TruncateCollectionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequesttruncateCollection(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_describeCollection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_describeCollection() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_describeCollection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status describeCollection(::grpc::ServerContext* /*context*/, const ::olama::DescribeCollectionRequest* /*request*/, ::olama::DescribeCollectionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdescribeCollection(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_listCollections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_listCollections() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_listCollections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status listCollections(::grpc::ServerContext* /*context*/, const ::olama::ListCollectionsRequest* /*request*/, ::olama::ListCollectionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestlistCollections(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_rebuildIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_rebuildIndex() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_rebuildIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status rebuildIndex(::grpc::ServerContext* /*context*/, const ::olama::RebuildIndexRequest* /*request*/, ::olama::RebuildIndexResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestrebuildIndex(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_upsert : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_upsert() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_upsert() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status upsert(::grpc::ServerContext* /*context*/, const ::olama::UpsertRequest* /*request*/, ::olama::UpsertResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestupsert(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_update : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_update() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_update() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status update(::grpc::ServerContext* /*context*/, const ::olama::UpdateRequest* /*request*/, ::olama::UpdateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestupdate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_query : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_query() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_query() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status query(::grpc::ServerContext* /*context*/, const ::olama::QueryRequest* /*request*/, ::olama::QueryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestquery(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_search : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_search() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_search() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status search(::grpc::ServerContext* /*context*/, const ::olama::SearchRequest* /*request*/, ::olama::SearchResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestsearch(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_dele : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_dele() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_dele() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status dele(::grpc::ServerContext* /*context*/, const ::olama::DeleteRequest* /*request*/, ::olama::DeleteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestdele(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_createDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_createDatabase() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_createDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status createDatabase(::grpc::ServerContext* /*context*/, const ::olama::DatabaseRequest* /*request*/, ::olama::DatabaseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcreateDatabase(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_dropDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_dropDatabase() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_dropDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status dropDatabase(::grpc::ServerContext* /*context*/, const ::olama::DatabaseRequest* /*request*/, ::olama::DatabaseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdropDatabase(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_listDatabases : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_listDatabases() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_listDatabases() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status listDatabases(::grpc::ServerContext* /*context*/, const ::olama::DatabaseRequest* /*request*/, ::olama::DatabaseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestlistDatabases(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_setAlias : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_setAlias() {
      ::grpc::Service::experimental().MarkMethodRawCallback(0,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->setAlias(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_setAlias() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setAlias(::grpc::ServerContext* /*context*/, const ::olama::AddAliasRequest* /*request*/, ::olama::UpdateAliasResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void setAlias(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_getAlias : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_getAlias() {
      ::grpc::Service::experimental().MarkMethodRawCallback(1,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->getAlias(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_getAlias() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getAlias(::grpc::ServerContext* /*context*/, const ::olama::GetAliasRequest* /*request*/, ::olama::GetAliasResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void getAlias(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_deleteAlias : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_deleteAlias() {
      ::grpc::Service::experimental().MarkMethodRawCallback(2,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->deleteAlias(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_deleteAlias() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status deleteAlias(::grpc::ServerContext* /*context*/, const ::olama::RemoveAliasRequest* /*request*/, ::olama::UpdateAliasResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void deleteAlias(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_createCollection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_createCollection() {
      ::grpc::Service::experimental().MarkMethodRawCallback(3,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->createCollection(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_createCollection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status createCollection(::grpc::ServerContext* /*context*/, const ::olama::CreateCollectionRequest* /*request*/, ::olama::CreateCollectionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void createCollection(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_dropCollection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_dropCollection() {
      ::grpc::Service::experimental().MarkMethodRawCallback(4,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->dropCollection(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_dropCollection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status dropCollection(::grpc::ServerContext* /*context*/, const ::olama::DropCollectionRequest* /*request*/, ::olama::DropCollectionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void dropCollection(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_truncateCollection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_truncateCollection() {
      ::grpc::Service::experimental().MarkMethodRawCallback(5,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->truncateCollection(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_truncateCollection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status truncateCollection(::grpc::ServerContext* /*context*/, const ::olama::TruncateCollectionRequest* /*request*/, ::olama::TruncateCollectionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void truncateCollection(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_describeCollection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_describeCollection() {
      ::grpc::Service::experimental().MarkMethodRawCallback(6,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->describeCollection(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_describeCollection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status describeCollection(::grpc::ServerContext* /*context*/, const ::olama::DescribeCollectionRequest* /*request*/, ::olama::DescribeCollectionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void describeCollection(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_listCollections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_listCollections() {
      ::grpc::Service::experimental().MarkMethodRawCallback(7,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->listCollections(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_listCollections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status listCollections(::grpc::ServerContext* /*context*/, const ::olama::ListCollectionsRequest* /*request*/, ::olama::ListCollectionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void listCollections(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_rebuildIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_rebuildIndex() {
      ::grpc::Service::experimental().MarkMethodRawCallback(8,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->rebuildIndex(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_rebuildIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status rebuildIndex(::grpc::ServerContext* /*context*/, const ::olama::RebuildIndexRequest* /*request*/, ::olama::RebuildIndexResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void rebuildIndex(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_upsert : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_upsert() {
      ::grpc::Service::experimental().MarkMethodRawCallback(9,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->upsert(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_upsert() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status upsert(::grpc::ServerContext* /*context*/, const ::olama::UpsertRequest* /*request*/, ::olama::UpsertResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void upsert(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_update : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_update() {
      ::grpc::Service::experimental().MarkMethodRawCallback(10,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->update(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_update() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status update(::grpc::ServerContext* /*context*/, const ::olama::UpdateRequest* /*request*/, ::olama::UpdateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void update(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_query : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_query() {
      ::grpc::Service::experimental().MarkMethodRawCallback(11,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->query(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_query() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status query(::grpc::ServerContext* /*context*/, const ::olama::QueryRequest* /*request*/, ::olama::QueryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void query(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_search : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_search() {
      ::grpc::Service::experimental().MarkMethodRawCallback(12,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->search(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_search() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status search(::grpc::ServerContext* /*context*/, const ::olama::SearchRequest* /*request*/, ::olama::SearchResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void search(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_dele : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_dele() {
      ::grpc::Service::experimental().MarkMethodRawCallback(13,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->dele(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_dele() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status dele(::grpc::ServerContext* /*context*/, const ::olama::DeleteRequest* /*request*/, ::olama::DeleteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void dele(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_createDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_createDatabase() {
      ::grpc::Service::experimental().MarkMethodRawCallback(14,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->createDatabase(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_createDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status createDatabase(::grpc::ServerContext* /*context*/, const ::olama::DatabaseRequest* /*request*/, ::olama::DatabaseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void createDatabase(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_dropDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_dropDatabase() {
      ::grpc::Service::experimental().MarkMethodRawCallback(15,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->dropDatabase(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_dropDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status dropDatabase(::grpc::ServerContext* /*context*/, const ::olama::DatabaseRequest* /*request*/, ::olama::DatabaseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void dropDatabase(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_listDatabases : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_listDatabases() {
      ::grpc::Service::experimental().MarkMethodRawCallback(16,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->listDatabases(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_listDatabases() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status listDatabases(::grpc::ServerContext* /*context*/, const ::olama::DatabaseRequest* /*request*/, ::olama::DatabaseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void listDatabases(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_setAlias : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_setAlias() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::olama::AddAliasRequest, ::olama::UpdateAliasResponse>(std::bind(&WithStreamedUnaryMethod_setAlias<BaseClass>::StreamedsetAlias, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_setAlias() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status setAlias(::grpc::ServerContext* /*context*/, const ::olama::AddAliasRequest* /*request*/, ::olama::UpdateAliasResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsetAlias(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::olama::AddAliasRequest,::olama::UpdateAliasResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getAlias : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getAlias() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::olama::GetAliasRequest, ::olama::GetAliasResponse>(std::bind(&WithStreamedUnaryMethod_getAlias<BaseClass>::StreamedgetAlias, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_getAlias() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getAlias(::grpc::ServerContext* /*context*/, const ::olama::GetAliasRequest* /*request*/, ::olama::GetAliasResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetAlias(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::olama::GetAliasRequest,::olama::GetAliasResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_deleteAlias : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_deleteAlias() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::olama::RemoveAliasRequest, ::olama::UpdateAliasResponse>(std::bind(&WithStreamedUnaryMethod_deleteAlias<BaseClass>::StreameddeleteAlias, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_deleteAlias() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status deleteAlias(::grpc::ServerContext* /*context*/, const ::olama::RemoveAliasRequest* /*request*/, ::olama::UpdateAliasResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreameddeleteAlias(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::olama::RemoveAliasRequest,::olama::UpdateAliasResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_createCollection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_createCollection() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::olama::CreateCollectionRequest, ::olama::CreateCollectionResponse>(std::bind(&WithStreamedUnaryMethod_createCollection<BaseClass>::StreamedcreateCollection, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_createCollection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status createCollection(::grpc::ServerContext* /*context*/, const ::olama::CreateCollectionRequest* /*request*/, ::olama::CreateCollectionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedcreateCollection(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::olama::CreateCollectionRequest,::olama::CreateCollectionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_dropCollection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_dropCollection() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler< ::olama::DropCollectionRequest, ::olama::DropCollectionResponse>(std::bind(&WithStreamedUnaryMethod_dropCollection<BaseClass>::StreameddropCollection, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_dropCollection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status dropCollection(::grpc::ServerContext* /*context*/, const ::olama::DropCollectionRequest* /*request*/, ::olama::DropCollectionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreameddropCollection(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::olama::DropCollectionRequest,::olama::DropCollectionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_truncateCollection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_truncateCollection() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler< ::olama::TruncateCollectionRequest, ::olama::TruncateCollectionResponse>(std::bind(&WithStreamedUnaryMethod_truncateCollection<BaseClass>::StreamedtruncateCollection, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_truncateCollection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status truncateCollection(::grpc::ServerContext* /*context*/, const ::olama::TruncateCollectionRequest* /*request*/, ::olama::TruncateCollectionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedtruncateCollection(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::olama::TruncateCollectionRequest,::olama::TruncateCollectionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_describeCollection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_describeCollection() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler< ::olama::DescribeCollectionRequest, ::olama::DescribeCollectionResponse>(std::bind(&WithStreamedUnaryMethod_describeCollection<BaseClass>::StreameddescribeCollection, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_describeCollection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status describeCollection(::grpc::ServerContext* /*context*/, const ::olama::DescribeCollectionRequest* /*request*/, ::olama::DescribeCollectionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreameddescribeCollection(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::olama::DescribeCollectionRequest,::olama::DescribeCollectionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_listCollections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_listCollections() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler< ::olama::ListCollectionsRequest, ::olama::ListCollectionsResponse>(std::bind(&WithStreamedUnaryMethod_listCollections<BaseClass>::StreamedlistCollections, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_listCollections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status listCollections(::grpc::ServerContext* /*context*/, const ::olama::ListCollectionsRequest* /*request*/, ::olama::ListCollectionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedlistCollections(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::olama::ListCollectionsRequest,::olama::ListCollectionsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_rebuildIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_rebuildIndex() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler< ::olama::RebuildIndexRequest, ::olama::RebuildIndexResponse>(std::bind(&WithStreamedUnaryMethod_rebuildIndex<BaseClass>::StreamedrebuildIndex, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_rebuildIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status rebuildIndex(::grpc::ServerContext* /*context*/, const ::olama::RebuildIndexRequest* /*request*/, ::olama::RebuildIndexResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedrebuildIndex(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::olama::RebuildIndexRequest,::olama::RebuildIndexResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_upsert : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_upsert() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler< ::olama::UpsertRequest, ::olama::UpsertResponse>(std::bind(&WithStreamedUnaryMethod_upsert<BaseClass>::Streamedupsert, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_upsert() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status upsert(::grpc::ServerContext* /*context*/, const ::olama::UpsertRequest* /*request*/, ::olama::UpsertResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedupsert(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::olama::UpsertRequest,::olama::UpsertResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_update : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_update() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler< ::olama::UpdateRequest, ::olama::UpdateResponse>(std::bind(&WithStreamedUnaryMethod_update<BaseClass>::Streamedupdate, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_update() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status update(::grpc::ServerContext* /*context*/, const ::olama::UpdateRequest* /*request*/, ::olama::UpdateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedupdate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::olama::UpdateRequest,::olama::UpdateResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_query : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_query() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler< ::olama::QueryRequest, ::olama::QueryResponse>(std::bind(&WithStreamedUnaryMethod_query<BaseClass>::Streamedquery, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_query() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status query(::grpc::ServerContext* /*context*/, const ::olama::QueryRequest* /*request*/, ::olama::QueryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedquery(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::olama::QueryRequest,::olama::QueryResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_search : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_search() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler< ::olama::SearchRequest, ::olama::SearchResponse>(std::bind(&WithStreamedUnaryMethod_search<BaseClass>::Streamedsearch, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_search() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status search(::grpc::ServerContext* /*context*/, const ::olama::SearchRequest* /*request*/, ::olama::SearchResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedsearch(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::olama::SearchRequest,::olama::SearchResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_dele : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_dele() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler< ::olama::DeleteRequest, ::olama::DeleteResponse>(std::bind(&WithStreamedUnaryMethod_dele<BaseClass>::Streameddele, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_dele() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status dele(::grpc::ServerContext* /*context*/, const ::olama::DeleteRequest* /*request*/, ::olama::DeleteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streameddele(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::olama::DeleteRequest,::olama::DeleteResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_createDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_createDatabase() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler< ::olama::DatabaseRequest, ::olama::DatabaseResponse>(std::bind(&WithStreamedUnaryMethod_createDatabase<BaseClass>::StreamedcreateDatabase, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_createDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status createDatabase(::grpc::ServerContext* /*context*/, const ::olama::DatabaseRequest* /*request*/, ::olama::DatabaseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedcreateDatabase(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::olama::DatabaseRequest,::olama::DatabaseResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_dropDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_dropDatabase() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler< ::olama::DatabaseRequest, ::olama::DatabaseResponse>(std::bind(&WithStreamedUnaryMethod_dropDatabase<BaseClass>::StreameddropDatabase, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_dropDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status dropDatabase(::grpc::ServerContext* /*context*/, const ::olama::DatabaseRequest* /*request*/, ::olama::DatabaseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreameddropDatabase(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::olama::DatabaseRequest,::olama::DatabaseResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_listDatabases : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_listDatabases() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler< ::olama::DatabaseRequest, ::olama::DatabaseResponse>(std::bind(&WithStreamedUnaryMethod_listDatabases<BaseClass>::StreamedlistDatabases, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_listDatabases() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status listDatabases(::grpc::ServerContext* /*context*/, const ::olama::DatabaseRequest* /*request*/, ::olama::DatabaseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedlistDatabases(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::olama::DatabaseRequest,::olama::DatabaseResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_setAlias<WithStreamedUnaryMethod_getAlias<WithStreamedUnaryMethod_deleteAlias<WithStreamedUnaryMethod_createCollection<WithStreamedUnaryMethod_dropCollection<WithStreamedUnaryMethod_truncateCollection<WithStreamedUnaryMethod_describeCollection<WithStreamedUnaryMethod_listCollections<WithStreamedUnaryMethod_rebuildIndex<WithStreamedUnaryMethod_upsert<WithStreamedUnaryMethod_update<WithStreamedUnaryMethod_query<WithStreamedUnaryMethod_search<WithStreamedUnaryMethod_dele<WithStreamedUnaryMethod_createDatabase<WithStreamedUnaryMethod_dropDatabase<WithStreamedUnaryMethod_listDatabases<Service > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_setAlias<WithStreamedUnaryMethod_getAlias<WithStreamedUnaryMethod_deleteAlias<WithStreamedUnaryMethod_createCollection<WithStreamedUnaryMethod_dropCollection<WithStreamedUnaryMethod_truncateCollection<WithStreamedUnaryMethod_describeCollection<WithStreamedUnaryMethod_listCollections<WithStreamedUnaryMethod_rebuildIndex<WithStreamedUnaryMethod_upsert<WithStreamedUnaryMethod_update<WithStreamedUnaryMethod_query<WithStreamedUnaryMethod_search<WithStreamedUnaryMethod_dele<WithStreamedUnaryMethod_createDatabase<WithStreamedUnaryMethod_dropDatabase<WithStreamedUnaryMethod_listDatabases<Service > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace olama


#endif  // GRPC_olama_2eproto__INCLUDED
