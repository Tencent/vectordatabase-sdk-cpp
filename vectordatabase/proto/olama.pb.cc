// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: olama.proto

#include "olama.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_olama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AliasItem_olama_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_olama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_CollectionConf_olama_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_olama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CollectionConf_FieldMetasEntry_DoNotUse_olama_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_olama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CollectionConf_OptionsEntry_DoNotUse_olama_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_olama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_CollectionState_olama_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_olama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_CreateCollectionRequest_olama_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_olama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateCollectionRequest_IndexesEntry_DoNotUse_olama_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_olama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DatabaseItem_olama_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_olama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DatabaseResponse_InfoEntry_DoNotUse_olama_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_olama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Document_olama_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_olama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Document_FieldsEntry_DoNotUse_olama_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_olama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EmbeddingExtraInfo_olama_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_olama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EmbeddingParams_olama_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_olama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Field_olama_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_olama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Field_StringArray_olama_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_olama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FieldMeta_olama_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_olama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_IndexColumn_olama_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_olama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IndexParams_olama_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_olama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IndexStatus_olama_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_olama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_QueryCond_olama_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_olama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SearchCond_olama_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_olama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SearchParams_olama_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_olama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SearchResult_olama_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_olama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Shard_olama_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_olama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ShardCollectionState_olama_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_olama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ShardState_olama_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_olama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TTLConfig_olama_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_olama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VectorArray_olama_2eproto;
namespace olama {
class Document_FieldsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Document_FieldsEntry_DoNotUse> _instance;
} _Document_FieldsEntry_DoNotUse_default_instance_;
class DocumentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Document> _instance;
} _Document_default_instance_;
class Field_StringArrayDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Field_StringArray> _instance;
} _Field_StringArray_default_instance_;
class FieldDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Field> _instance;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr val_str_;
  ::PROTOBUF_NAMESPACE_ID::uint64 val_u64_;
  double val_double_;
  const ::olama::Field_StringArray* val_str_arr_;
} _Field_default_instance_;
class ShardStateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ShardState> _instance;
} _ShardState_default_instance_;
class ShardDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Shard> _instance;
} _Shard_default_instance_;
class AliasItemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AliasItem> _instance;
} _AliasItem_default_instance_;
class DatabaseItemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DatabaseItem> _instance;
} _DatabaseItem_default_instance_;
class EmbeddingParamsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EmbeddingParams> _instance;
} _EmbeddingParams_default_instance_;
class CollectionConf_FieldMetasEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CollectionConf_FieldMetasEntry_DoNotUse> _instance;
} _CollectionConf_FieldMetasEntry_DoNotUse_default_instance_;
class CollectionConf_OptionsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CollectionConf_OptionsEntry_DoNotUse> _instance;
} _CollectionConf_OptionsEntry_DoNotUse_default_instance_;
class CollectionConfDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CollectionConf> _instance;
} _CollectionConf_default_instance_;
class FieldMetaDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FieldMeta> _instance;
} _FieldMeta_default_instance_;
class ShardConfDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ShardConf> _instance;
} _ShardConf_default_instance_;
class TTLConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TTLConfig> _instance;
} _TTLConfig_default_instance_;
class ShardCollectionStateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ShardCollectionState> _instance;
} _ShardCollectionState_default_instance_;
class CollectionStateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CollectionState> _instance;
} _CollectionState_default_instance_;
class AddAliasRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddAliasRequest> _instance;
} _AddAliasRequest_default_instance_;
class RemoveAliasRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveAliasRequest> _instance;
} _RemoveAliasRequest_default_instance_;
class UpdateAliasResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateAliasResponse> _instance;
} _UpdateAliasResponse_default_instance_;
class GetAliasRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAliasRequest> _instance;
} _GetAliasRequest_default_instance_;
class GetAliasResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAliasResponse> _instance;
} _GetAliasResponse_default_instance_;
class DescribeCollectionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DescribeCollectionRequest> _instance;
} _DescribeCollectionRequest_default_instance_;
class DescribeCollectionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DescribeCollectionResponse> _instance;
} _DescribeCollectionResponse_default_instance_;
class ListCollectionsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListCollectionsRequest> _instance;
} _ListCollectionsRequest_default_instance_;
class ListCollectionsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListCollectionsResponse> _instance;
} _ListCollectionsResponse_default_instance_;
class IndexParamsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IndexParams> _instance;
} _IndexParams_default_instance_;
class IndexColumnDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IndexColumn> _instance;
} _IndexColumn_default_instance_;
class IndexStatusDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IndexStatus> _instance;
} _IndexStatus_default_instance_;
class CreateCollectionRequest_IndexesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateCollectionRequest_IndexesEntry_DoNotUse> _instance;
} _CreateCollectionRequest_IndexesEntry_DoNotUse_default_instance_;
class CreateCollectionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateCollectionRequest> _instance;
} _CreateCollectionRequest_default_instance_;
class CreateCollectionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateCollectionResponse> _instance;
} _CreateCollectionResponse_default_instance_;
class DropCollectionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DropCollectionRequest> _instance;
} _DropCollectionRequest_default_instance_;
class DropCollectionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DropCollectionResponse> _instance;
} _DropCollectionResponse_default_instance_;
class TruncateCollectionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TruncateCollectionRequest> _instance;
} _TruncateCollectionRequest_default_instance_;
class TruncateCollectionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TruncateCollectionResponse> _instance;
} _TruncateCollectionResponse_default_instance_;
class RebuildIndexRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RebuildIndexRequest> _instance;
} _RebuildIndexRequest_default_instance_;
class RebuildIndexResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RebuildIndexResponse> _instance;
} _RebuildIndexResponse_default_instance_;
class UpsertRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpsertRequest> _instance;
} _UpsertRequest_default_instance_;
class EmbeddingExtraInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EmbeddingExtraInfo> _instance;
} _EmbeddingExtraInfo_default_instance_;
class UpsertResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpsertResponse> _instance;
} _UpsertResponse_default_instance_;
class UpdateRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateRequest> _instance;
} _UpdateRequest_default_instance_;
class UpdateResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateResponse> _instance;
} _UpdateResponse_default_instance_;
class DeleteRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteRequest> _instance;
} _DeleteRequest_default_instance_;
class DeleteResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteResponse> _instance;
} _DeleteResponse_default_instance_;
class QueryCondDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<QueryCond> _instance;
} _QueryCond_default_instance_;
class QueryRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<QueryRequest> _instance;
} _QueryRequest_default_instance_;
class QueryResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<QueryResponse> _instance;
} _QueryResponse_default_instance_;
class SearchResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SearchResult> _instance;
} _SearchResult_default_instance_;
class SearchParamsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SearchParams> _instance;
} _SearchParams_default_instance_;
class VectorArrayDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VectorArray> _instance;
} _VectorArray_default_instance_;
class SearchCondDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SearchCond> _instance;
} _SearchCond_default_instance_;
class SearchRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SearchRequest> _instance;
} _SearchRequest_default_instance_;
class FilterDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Filter> _instance;
} _Filter_default_instance_;
class SearchResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SearchResponse> _instance;
} _SearchResponse_default_instance_;
class DatabaseRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DatabaseRequest> _instance;
} _DatabaseRequest_default_instance_;
class DatabaseResponse_InfoEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DatabaseResponse_InfoEntry_DoNotUse> _instance;
} _DatabaseResponse_InfoEntry_DoNotUse_default_instance_;
class DatabaseResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DatabaseResponse> _instance;
} _DatabaseResponse_default_instance_;
}  // namespace olama
static void InitDefaultsscc_info_AddAliasRequest_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_AddAliasRequest_default_instance_;
    new (ptr) ::olama::AddAliasRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::AddAliasRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddAliasRequest_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddAliasRequest_olama_2eproto}, {}};

static void InitDefaultsscc_info_AliasItem_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_AliasItem_default_instance_;
    new (ptr) ::olama::AliasItem();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::AliasItem::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AliasItem_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AliasItem_olama_2eproto}, {}};

static void InitDefaultsscc_info_CollectionConf_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_CollectionConf_default_instance_;
    new (ptr) ::olama::CollectionConf();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::CollectionConf::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_CollectionConf_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_CollectionConf_olama_2eproto}, {
      &scc_info_CollectionConf_FieldMetasEntry_DoNotUse_olama_2eproto.base,
      &scc_info_CollectionConf_OptionsEntry_DoNotUse_olama_2eproto.base,
      &scc_info_EmbeddingParams_olama_2eproto.base,
      &scc_info_TTLConfig_olama_2eproto.base,}};

static void InitDefaultsscc_info_CollectionConf_FieldMetasEntry_DoNotUse_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_CollectionConf_FieldMetasEntry_DoNotUse_default_instance_;
    new (ptr) ::olama::CollectionConf_FieldMetasEntry_DoNotUse();
  }
  ::olama::CollectionConf_FieldMetasEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CollectionConf_FieldMetasEntry_DoNotUse_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CollectionConf_FieldMetasEntry_DoNotUse_olama_2eproto}, {
      &scc_info_FieldMeta_olama_2eproto.base,}};

static void InitDefaultsscc_info_CollectionConf_OptionsEntry_DoNotUse_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_CollectionConf_OptionsEntry_DoNotUse_default_instance_;
    new (ptr) ::olama::CollectionConf_OptionsEntry_DoNotUse();
  }
  ::olama::CollectionConf_OptionsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CollectionConf_OptionsEntry_DoNotUse_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CollectionConf_OptionsEntry_DoNotUse_olama_2eproto}, {}};

static void InitDefaultsscc_info_CollectionState_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_CollectionState_default_instance_;
    new (ptr) ::olama::CollectionState();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::CollectionState::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_CollectionState_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_CollectionState_olama_2eproto}, {
      &scc_info_CollectionConf_olama_2eproto.base,
      &scc_info_ShardCollectionState_olama_2eproto.base,
      &scc_info_CreateCollectionRequest_olama_2eproto.base,}};

static void InitDefaultsscc_info_CreateCollectionRequest_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_CreateCollectionRequest_default_instance_;
    new (ptr) ::olama::CreateCollectionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::CreateCollectionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_CreateCollectionRequest_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_CreateCollectionRequest_olama_2eproto}, {
      &scc_info_CreateCollectionRequest_IndexesEntry_DoNotUse_olama_2eproto.base,
      &scc_info_IndexStatus_olama_2eproto.base,
      &scc_info_EmbeddingParams_olama_2eproto.base,
      &scc_info_TTLConfig_olama_2eproto.base,}};

static void InitDefaultsscc_info_CreateCollectionRequest_IndexesEntry_DoNotUse_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_CreateCollectionRequest_IndexesEntry_DoNotUse_default_instance_;
    new (ptr) ::olama::CreateCollectionRequest_IndexesEntry_DoNotUse();
  }
  ::olama::CreateCollectionRequest_IndexesEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateCollectionRequest_IndexesEntry_DoNotUse_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateCollectionRequest_IndexesEntry_DoNotUse_olama_2eproto}, {
      &scc_info_IndexColumn_olama_2eproto.base,}};

static void InitDefaultsscc_info_CreateCollectionResponse_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_CreateCollectionResponse_default_instance_;
    new (ptr) ::olama::CreateCollectionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::CreateCollectionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateCollectionResponse_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateCollectionResponse_olama_2eproto}, {}};

static void InitDefaultsscc_info_DatabaseItem_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_DatabaseItem_default_instance_;
    new (ptr) ::olama::DatabaseItem();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::DatabaseItem::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DatabaseItem_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DatabaseItem_olama_2eproto}, {}};

static void InitDefaultsscc_info_DatabaseRequest_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_DatabaseRequest_default_instance_;
    new (ptr) ::olama::DatabaseRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::DatabaseRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DatabaseRequest_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DatabaseRequest_olama_2eproto}, {}};

static void InitDefaultsscc_info_DatabaseResponse_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_DatabaseResponse_default_instance_;
    new (ptr) ::olama::DatabaseResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::DatabaseResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DatabaseResponse_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DatabaseResponse_olama_2eproto}, {
      &scc_info_DatabaseResponse_InfoEntry_DoNotUse_olama_2eproto.base,}};

static void InitDefaultsscc_info_DatabaseResponse_InfoEntry_DoNotUse_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_DatabaseResponse_InfoEntry_DoNotUse_default_instance_;
    new (ptr) ::olama::DatabaseResponse_InfoEntry_DoNotUse();
  }
  ::olama::DatabaseResponse_InfoEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DatabaseResponse_InfoEntry_DoNotUse_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DatabaseResponse_InfoEntry_DoNotUse_olama_2eproto}, {
      &scc_info_DatabaseItem_olama_2eproto.base,}};

static void InitDefaultsscc_info_DeleteRequest_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_DeleteRequest_default_instance_;
    new (ptr) ::olama::DeleteRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::DeleteRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DeleteRequest_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DeleteRequest_olama_2eproto}, {
      &scc_info_QueryCond_olama_2eproto.base,}};

static void InitDefaultsscc_info_DeleteResponse_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_DeleteResponse_default_instance_;
    new (ptr) ::olama::DeleteResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::DeleteResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteResponse_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteResponse_olama_2eproto}, {}};

static void InitDefaultsscc_info_DescribeCollectionRequest_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_DescribeCollectionRequest_default_instance_;
    new (ptr) ::olama::DescribeCollectionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::DescribeCollectionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DescribeCollectionRequest_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DescribeCollectionRequest_olama_2eproto}, {}};

static void InitDefaultsscc_info_DescribeCollectionResponse_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_DescribeCollectionResponse_default_instance_;
    new (ptr) ::olama::DescribeCollectionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::DescribeCollectionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_DescribeCollectionResponse_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_DescribeCollectionResponse_olama_2eproto}, {
      &scc_info_CreateCollectionRequest_olama_2eproto.base,
      &scc_info_CollectionState_olama_2eproto.base,}};

static void InitDefaultsscc_info_Document_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_Document_default_instance_;
    new (ptr) ::olama::Document();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::Document::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Document_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Document_olama_2eproto}, {
      &scc_info_Document_FieldsEntry_DoNotUse_olama_2eproto.base,}};

static void InitDefaultsscc_info_Document_FieldsEntry_DoNotUse_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_Document_FieldsEntry_DoNotUse_default_instance_;
    new (ptr) ::olama::Document_FieldsEntry_DoNotUse();
  }
  ::olama::Document_FieldsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Document_FieldsEntry_DoNotUse_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Document_FieldsEntry_DoNotUse_olama_2eproto}, {
      &scc_info_Field_olama_2eproto.base,}};

static void InitDefaultsscc_info_DropCollectionRequest_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_DropCollectionRequest_default_instance_;
    new (ptr) ::olama::DropCollectionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::DropCollectionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DropCollectionRequest_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DropCollectionRequest_olama_2eproto}, {}};

static void InitDefaultsscc_info_DropCollectionResponse_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_DropCollectionResponse_default_instance_;
    new (ptr) ::olama::DropCollectionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::DropCollectionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DropCollectionResponse_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DropCollectionResponse_olama_2eproto}, {}};

static void InitDefaultsscc_info_EmbeddingExtraInfo_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_EmbeddingExtraInfo_default_instance_;
    new (ptr) ::olama::EmbeddingExtraInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::EmbeddingExtraInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EmbeddingExtraInfo_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EmbeddingExtraInfo_olama_2eproto}, {}};

static void InitDefaultsscc_info_EmbeddingParams_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_EmbeddingParams_default_instance_;
    new (ptr) ::olama::EmbeddingParams();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::EmbeddingParams::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EmbeddingParams_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EmbeddingParams_olama_2eproto}, {}};

static void InitDefaultsscc_info_Field_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_Field_default_instance_;
    new (ptr) ::olama::Field();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::Field::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Field_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Field_olama_2eproto}, {
      &scc_info_Field_StringArray_olama_2eproto.base,}};

static void InitDefaultsscc_info_Field_StringArray_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_Field_StringArray_default_instance_;
    new (ptr) ::olama::Field_StringArray();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::Field_StringArray::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Field_StringArray_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Field_StringArray_olama_2eproto}, {}};

static void InitDefaultsscc_info_FieldMeta_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_FieldMeta_default_instance_;
    new (ptr) ::olama::FieldMeta();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::FieldMeta::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FieldMeta_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FieldMeta_olama_2eproto}, {}};

static void InitDefaultsscc_info_Filter_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_Filter_default_instance_;
    new (ptr) ::olama::Filter();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::Filter::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Filter_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Filter_olama_2eproto}, {}};

static void InitDefaultsscc_info_GetAliasRequest_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_GetAliasRequest_default_instance_;
    new (ptr) ::olama::GetAliasRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::GetAliasRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetAliasRequest_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetAliasRequest_olama_2eproto}, {}};

static void InitDefaultsscc_info_GetAliasResponse_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_GetAliasResponse_default_instance_;
    new (ptr) ::olama::GetAliasResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::GetAliasResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetAliasResponse_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetAliasResponse_olama_2eproto}, {
      &scc_info_AliasItem_olama_2eproto.base,}};

static void InitDefaultsscc_info_IndexColumn_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_IndexColumn_default_instance_;
    new (ptr) ::olama::IndexColumn();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::IndexColumn::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_IndexColumn_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_IndexColumn_olama_2eproto}, {
      &scc_info_IndexParams_olama_2eproto.base,}};

static void InitDefaultsscc_info_IndexParams_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_IndexParams_default_instance_;
    new (ptr) ::olama::IndexParams();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::IndexParams::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IndexParams_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IndexParams_olama_2eproto}, {}};

static void InitDefaultsscc_info_IndexStatus_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_IndexStatus_default_instance_;
    new (ptr) ::olama::IndexStatus();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::IndexStatus::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IndexStatus_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IndexStatus_olama_2eproto}, {}};

static void InitDefaultsscc_info_ListCollectionsRequest_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_ListCollectionsRequest_default_instance_;
    new (ptr) ::olama::ListCollectionsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::ListCollectionsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListCollectionsRequest_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListCollectionsRequest_olama_2eproto}, {}};

static void InitDefaultsscc_info_ListCollectionsResponse_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_ListCollectionsResponse_default_instance_;
    new (ptr) ::olama::ListCollectionsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::ListCollectionsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ListCollectionsResponse_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ListCollectionsResponse_olama_2eproto}, {
      &scc_info_CreateCollectionRequest_olama_2eproto.base,
      &scc_info_CollectionState_olama_2eproto.base,}};

static void InitDefaultsscc_info_QueryCond_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_QueryCond_default_instance_;
    new (ptr) ::olama::QueryCond();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::QueryCond::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_QueryCond_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_QueryCond_olama_2eproto}, {}};

static void InitDefaultsscc_info_QueryRequest_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_QueryRequest_default_instance_;
    new (ptr) ::olama::QueryRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::QueryRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_QueryRequest_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_QueryRequest_olama_2eproto}, {
      &scc_info_QueryCond_olama_2eproto.base,}};

static void InitDefaultsscc_info_QueryResponse_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_QueryResponse_default_instance_;
    new (ptr) ::olama::QueryResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::QueryResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_QueryResponse_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_QueryResponse_olama_2eproto}, {
      &scc_info_Document_olama_2eproto.base,}};

static void InitDefaultsscc_info_RebuildIndexRequest_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_RebuildIndexRequest_default_instance_;
    new (ptr) ::olama::RebuildIndexRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::RebuildIndexRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RebuildIndexRequest_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RebuildIndexRequest_olama_2eproto}, {}};

static void InitDefaultsscc_info_RebuildIndexResponse_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_RebuildIndexResponse_default_instance_;
    new (ptr) ::olama::RebuildIndexResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::RebuildIndexResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RebuildIndexResponse_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RebuildIndexResponse_olama_2eproto}, {}};

static void InitDefaultsscc_info_RemoveAliasRequest_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_RemoveAliasRequest_default_instance_;
    new (ptr) ::olama::RemoveAliasRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::RemoveAliasRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveAliasRequest_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveAliasRequest_olama_2eproto}, {}};

static void InitDefaultsscc_info_SearchCond_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_SearchCond_default_instance_;
    new (ptr) ::olama::SearchCond();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::SearchCond::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SearchCond_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_SearchCond_olama_2eproto}, {
      &scc_info_VectorArray_olama_2eproto.base,
      &scc_info_SearchParams_olama_2eproto.base,}};

static void InitDefaultsscc_info_SearchParams_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_SearchParams_default_instance_;
    new (ptr) ::olama::SearchParams();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::SearchParams::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SearchParams_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SearchParams_olama_2eproto}, {}};

static void InitDefaultsscc_info_SearchRequest_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_SearchRequest_default_instance_;
    new (ptr) ::olama::SearchRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::SearchRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SearchRequest_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SearchRequest_olama_2eproto}, {
      &scc_info_SearchCond_olama_2eproto.base,}};

static void InitDefaultsscc_info_SearchResponse_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_SearchResponse_default_instance_;
    new (ptr) ::olama::SearchResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::SearchResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SearchResponse_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_SearchResponse_olama_2eproto}, {
      &scc_info_SearchResult_olama_2eproto.base,
      &scc_info_EmbeddingExtraInfo_olama_2eproto.base,}};

static void InitDefaultsscc_info_SearchResult_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_SearchResult_default_instance_;
    new (ptr) ::olama::SearchResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::SearchResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SearchResult_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SearchResult_olama_2eproto}, {
      &scc_info_Document_olama_2eproto.base,}};

static void InitDefaultsscc_info_Shard_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_Shard_default_instance_;
    new (ptr) ::olama::Shard();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::Shard::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Shard_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Shard_olama_2eproto}, {
      &scc_info_ShardState_olama_2eproto.base,}};

static void InitDefaultsscc_info_ShardCollectionState_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_ShardCollectionState_default_instance_;
    new (ptr) ::olama::ShardCollectionState();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::ShardCollectionState::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ShardCollectionState_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ShardCollectionState_olama_2eproto}, {
      &scc_info_Shard_olama_2eproto.base,}};

static void InitDefaultsscc_info_ShardConf_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_ShardConf_default_instance_;
    new (ptr) ::olama::ShardConf();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::ShardConf::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ShardConf_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ShardConf_olama_2eproto}, {
      &scc_info_CollectionConf_olama_2eproto.base,}};

static void InitDefaultsscc_info_ShardState_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_ShardState_default_instance_;
    new (ptr) ::olama::ShardState();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::ShardState::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ShardState_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ShardState_olama_2eproto}, {}};

static void InitDefaultsscc_info_TTLConfig_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_TTLConfig_default_instance_;
    new (ptr) ::olama::TTLConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::TTLConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TTLConfig_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TTLConfig_olama_2eproto}, {}};

static void InitDefaultsscc_info_TruncateCollectionRequest_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_TruncateCollectionRequest_default_instance_;
    new (ptr) ::olama::TruncateCollectionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::TruncateCollectionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TruncateCollectionRequest_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TruncateCollectionRequest_olama_2eproto}, {}};

static void InitDefaultsscc_info_TruncateCollectionResponse_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_TruncateCollectionResponse_default_instance_;
    new (ptr) ::olama::TruncateCollectionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::TruncateCollectionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TruncateCollectionResponse_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TruncateCollectionResponse_olama_2eproto}, {}};

static void InitDefaultsscc_info_UpdateAliasResponse_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_UpdateAliasResponse_default_instance_;
    new (ptr) ::olama::UpdateAliasResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::UpdateAliasResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateAliasResponse_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateAliasResponse_olama_2eproto}, {}};

static void InitDefaultsscc_info_UpdateRequest_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_UpdateRequest_default_instance_;
    new (ptr) ::olama::UpdateRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::UpdateRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_UpdateRequest_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_UpdateRequest_olama_2eproto}, {
      &scc_info_QueryCond_olama_2eproto.base,
      &scc_info_Document_olama_2eproto.base,}};

static void InitDefaultsscc_info_UpdateResponse_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_UpdateResponse_default_instance_;
    new (ptr) ::olama::UpdateResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::UpdateResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateResponse_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateResponse_olama_2eproto}, {
      &scc_info_EmbeddingExtraInfo_olama_2eproto.base,}};

static void InitDefaultsscc_info_UpsertRequest_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_UpsertRequest_default_instance_;
    new (ptr) ::olama::UpsertRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::UpsertRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpsertRequest_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpsertRequest_olama_2eproto}, {
      &scc_info_Document_olama_2eproto.base,}};

static void InitDefaultsscc_info_UpsertResponse_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_UpsertResponse_default_instance_;
    new (ptr) ::olama::UpsertResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::UpsertResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpsertResponse_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpsertResponse_olama_2eproto}, {
      &scc_info_EmbeddingExtraInfo_olama_2eproto.base,}};

static void InitDefaultsscc_info_VectorArray_olama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::olama::_VectorArray_default_instance_;
    new (ptr) ::olama::VectorArray();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::olama::VectorArray::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VectorArray_olama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_VectorArray_olama_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_olama_2eproto[58];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_olama_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_olama_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_olama_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::olama::Document_FieldsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::olama::Document_FieldsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::Document_FieldsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::olama::Document_FieldsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::Document, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::Document, id_),
  PROTOBUF_FIELD_OFFSET(::olama::Document, vector_),
  PROTOBUF_FIELD_OFFSET(::olama::Document, score_),
  PROTOBUF_FIELD_OFFSET(::olama::Document, fields_),
  PROTOBUF_FIELD_OFFSET(::olama::Document, index_id_),
  PROTOBUF_FIELD_OFFSET(::olama::Document, from_peer_),
  PROTOBUF_FIELD_OFFSET(::olama::Document, shard_idx_),
  PROTOBUF_FIELD_OFFSET(::olama::Document, vector_offset_),
  PROTOBUF_FIELD_OFFSET(::olama::Document, doc_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::Field_StringArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::Field_StringArray, str_arr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::Field, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::olama::Field, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::olama::FieldDefaultTypeInternal, val_str_),
  offsetof(::olama::FieldDefaultTypeInternal, val_u64_),
  offsetof(::olama::FieldDefaultTypeInternal, val_double_),
  offsetof(::olama::FieldDefaultTypeInternal, val_str_arr_),
  PROTOBUF_FIELD_OFFSET(::olama::Field, oneof_val_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::ShardState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::ShardState, data_state_),
  PROTOBUF_FIELD_OFFSET(::olama::ShardState, estimate_index_mem_size_),
  PROTOBUF_FIELD_OFFSET(::olama::ShardState, snapshoting_),
  PROTOBUF_FIELD_OFFSET(::olama::ShardState, last_applied_index_),
  PROTOBUF_FIELD_OFFSET(::olama::ShardState, last_applied_term_),
  PROTOBUF_FIELD_OFFSET(::olama::ShardState, id_seed_),
  PROTOBUF_FIELD_OFFSET(::olama::ShardState, added_items_),
  PROTOBUF_FIELD_OFFSET(::olama::ShardState, data_state_change_time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::Shard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::Shard, collection_),
  PROTOBUF_FIELD_OFFSET(::olama::Shard, shard_idx_),
  PROTOBUF_FIELD_OFFSET(::olama::Shard, is_leader_),
  PROTOBUF_FIELD_OFFSET(::olama::Shard, following_),
  PROTOBUF_FIELD_OFFSET(::olama::Shard, state_),
  PROTOBUF_FIELD_OFFSET(::olama::Shard, nodes_),
  PROTOBUF_FIELD_OFFSET(::olama::Shard, from_node_),
  PROTOBUF_FIELD_OFFSET(::olama::Shard, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::AliasItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::AliasItem, alias_),
  PROTOBUF_FIELD_OFFSET(::olama::AliasItem, collection_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::DatabaseItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::DatabaseItem, create_time_),
  PROTOBUF_FIELD_OFFSET(::olama::DatabaseItem, db_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::EmbeddingParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::EmbeddingParams, field_),
  PROTOBUF_FIELD_OFFSET(::olama::EmbeddingParams, vector_field_),
  PROTOBUF_FIELD_OFFSET(::olama::EmbeddingParams, model_name_),
  PROTOBUF_FIELD_OFFSET(::olama::CollectionConf_FieldMetasEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::olama::CollectionConf_FieldMetasEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::CollectionConf_FieldMetasEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::olama::CollectionConf_FieldMetasEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::olama::CollectionConf_OptionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::olama::CollectionConf_OptionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::CollectionConf_OptionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::olama::CollectionConf_OptionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::CollectionConf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::CollectionConf, database_),
  PROTOBUF_FIELD_OFFSET(::olama::CollectionConf, collection_),
  PROTOBUF_FIELD_OFFSET(::olama::CollectionConf, description_),
  PROTOBUF_FIELD_OFFSET(::olama::CollectionConf, number_of_shards_),
  PROTOBUF_FIELD_OFFSET(::olama::CollectionConf, number_of_replicas_),
  PROTOBUF_FIELD_OFFSET(::olama::CollectionConf, dimension_),
  PROTOBUF_FIELD_OFFSET(::olama::CollectionConf, metric_),
  PROTOBUF_FIELD_OFFSET(::olama::CollectionConf, nprobe_),
  PROTOBUF_FIELD_OFFSET(::olama::CollectionConf, engine_),
  PROTOBUF_FIELD_OFFSET(::olama::CollectionConf, model_desc_),
  PROTOBUF_FIELD_OFFSET(::olama::CollectionConf, field_metas_),
  PROTOBUF_FIELD_OFFSET(::olama::CollectionConf, options_),
  PROTOBUF_FIELD_OFFSET(::olama::CollectionConf, nlist_),
  PROTOBUF_FIELD_OFFSET(::olama::CollectionConf, embedding_params_),
  PROTOBUF_FIELD_OFFSET(::olama::CollectionConf, data_type_),
  PROTOBUF_FIELD_OFFSET(::olama::CollectionConf, version_),
  PROTOBUF_FIELD_OFFSET(::olama::CollectionConf, ttlconfig_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::FieldMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::FieldMeta, field_type_),
  PROTOBUF_FIELD_OFFSET(::olama::FieldMeta, field_element_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::ShardConf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::ShardConf, collection_),
  PROTOBUF_FIELD_OFFSET(::olama::ShardConf, shard_idx_),
  PROTOBUF_FIELD_OFFSET(::olama::ShardConf, conf_),
  PROTOBUF_FIELD_OFFSET(::olama::ShardConf, nodes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::TTLConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::TTLConfig, enable_),
  PROTOBUF_FIELD_OFFSET(::olama::TTLConfig, timefield_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::ShardCollectionState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::ShardCollectionState, shard_idx_),
  PROTOBUF_FIELD_OFFSET(::olama::ShardCollectionState, leader_),
  PROTOBUF_FIELD_OFFSET(::olama::ShardCollectionState, node_peers_),
  PROTOBUF_FIELD_OFFSET(::olama::ShardCollectionState, allocate_start_ms_),
  PROTOBUF_FIELD_OFFSET(::olama::ShardCollectionState, allocate_stop_ms_),
  PROTOBUF_FIELD_OFFSET(::olama::ShardCollectionState, leader_ms_),
  PROTOBUF_FIELD_OFFSET(::olama::ShardCollectionState, allocating_),
  PROTOBUF_FIELD_OFFSET(::olama::ShardCollectionState, shards_),
  PROTOBUF_FIELD_OFFSET(::olama::ShardCollectionState, creating_),
  PROTOBUF_FIELD_OFFSET(::olama::ShardCollectionState, removing_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::CollectionState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::CollectionState, collection_),
  PROTOBUF_FIELD_OFFSET(::olama::CollectionState, conf_),
  PROTOBUF_FIELD_OFFSET(::olama::CollectionState, shards_),
  PROTOBUF_FIELD_OFFSET(::olama::CollectionState, size_),
  PROTOBUF_FIELD_OFFSET(::olama::CollectionState, create_time_),
  PROTOBUF_FIELD_OFFSET(::olama::CollectionState, req_),
  PROTOBUF_FIELD_OFFSET(::olama::CollectionState, index_state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::AddAliasRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::AddAliasRequest, database_),
  PROTOBUF_FIELD_OFFSET(::olama::AddAliasRequest, collection_),
  PROTOBUF_FIELD_OFFSET(::olama::AddAliasRequest, alias_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::RemoveAliasRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::RemoveAliasRequest, database_),
  PROTOBUF_FIELD_OFFSET(::olama::RemoveAliasRequest, alias_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::UpdateAliasResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::UpdateAliasResponse, code_),
  PROTOBUF_FIELD_OFFSET(::olama::UpdateAliasResponse, msg_),
  PROTOBUF_FIELD_OFFSET(::olama::UpdateAliasResponse, redirect_),
  PROTOBUF_FIELD_OFFSET(::olama::UpdateAliasResponse, affectedcount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::GetAliasRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::GetAliasRequest, database_),
  PROTOBUF_FIELD_OFFSET(::olama::GetAliasRequest, alias_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::GetAliasResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::GetAliasResponse, code_),
  PROTOBUF_FIELD_OFFSET(::olama::GetAliasResponse, msg_),
  PROTOBUF_FIELD_OFFSET(::olama::GetAliasResponse, redirect_),
  PROTOBUF_FIELD_OFFSET(::olama::GetAliasResponse, aliases_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::DescribeCollectionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::DescribeCollectionRequest, database_),
  PROTOBUF_FIELD_OFFSET(::olama::DescribeCollectionRequest, collection_),
  PROTOBUF_FIELD_OFFSET(::olama::DescribeCollectionRequest, transfer_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::DescribeCollectionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::DescribeCollectionResponse, code_),
  PROTOBUF_FIELD_OFFSET(::olama::DescribeCollectionResponse, msg_),
  PROTOBUF_FIELD_OFFSET(::olama::DescribeCollectionResponse, redirect_),
  PROTOBUF_FIELD_OFFSET(::olama::DescribeCollectionResponse, collection_),
  PROTOBUF_FIELD_OFFSET(::olama::DescribeCollectionResponse, state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::ListCollectionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::ListCollectionsRequest, database_),
  PROTOBUF_FIELD_OFFSET(::olama::ListCollectionsRequest, transfer_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::ListCollectionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::ListCollectionsResponse, code_),
  PROTOBUF_FIELD_OFFSET(::olama::ListCollectionsResponse, msg_),
  PROTOBUF_FIELD_OFFSET(::olama::ListCollectionsResponse, redirect_),
  PROTOBUF_FIELD_OFFSET(::olama::ListCollectionsResponse, collections_),
  PROTOBUF_FIELD_OFFSET(::olama::ListCollectionsResponse, states_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::IndexParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::IndexParams, m_),
  PROTOBUF_FIELD_OFFSET(::olama::IndexParams, efconstruction_),
  PROTOBUF_FIELD_OFFSET(::olama::IndexParams, nprobe_),
  PROTOBUF_FIELD_OFFSET(::olama::IndexParams, nlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::IndexColumn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::IndexColumn, fieldname_),
  PROTOBUF_FIELD_OFFSET(::olama::IndexColumn, fieldtype_),
  PROTOBUF_FIELD_OFFSET(::olama::IndexColumn, indextype_),
  PROTOBUF_FIELD_OFFSET(::olama::IndexColumn, dimension_),
  PROTOBUF_FIELD_OFFSET(::olama::IndexColumn, metrictype_),
  PROTOBUF_FIELD_OFFSET(::olama::IndexColumn, params_),
  PROTOBUF_FIELD_OFFSET(::olama::IndexColumn, fieldelementtype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::IndexStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::IndexStatus, status_),
  PROTOBUF_FIELD_OFFSET(::olama::IndexStatus, progress_),
  PROTOBUF_FIELD_OFFSET(::olama::IndexStatus, starttime_),
  PROTOBUF_FIELD_OFFSET(::olama::CreateCollectionRequest_IndexesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::olama::CreateCollectionRequest_IndexesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::CreateCollectionRequest_IndexesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::olama::CreateCollectionRequest_IndexesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::CreateCollectionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::CreateCollectionRequest, database_),
  PROTOBUF_FIELD_OFFSET(::olama::CreateCollectionRequest, collection_),
  PROTOBUF_FIELD_OFFSET(::olama::CreateCollectionRequest, replicanum_),
  PROTOBUF_FIELD_OFFSET(::olama::CreateCollectionRequest, shardnum_),
  PROTOBUF_FIELD_OFFSET(::olama::CreateCollectionRequest, size_),
  PROTOBUF_FIELD_OFFSET(::olama::CreateCollectionRequest, createtime_),
  PROTOBUF_FIELD_OFFSET(::olama::CreateCollectionRequest, description_),
  PROTOBUF_FIELD_OFFSET(::olama::CreateCollectionRequest, indexes_),
  PROTOBUF_FIELD_OFFSET(::olama::CreateCollectionRequest, indexstatus_),
  PROTOBUF_FIELD_OFFSET(::olama::CreateCollectionRequest, alias_list_),
  PROTOBUF_FIELD_OFFSET(::olama::CreateCollectionRequest, embeddingparams_),
  PROTOBUF_FIELD_OFFSET(::olama::CreateCollectionRequest, version_),
  PROTOBUF_FIELD_OFFSET(::olama::CreateCollectionRequest, ttlconfig_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::CreateCollectionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::CreateCollectionResponse, code_),
  PROTOBUF_FIELD_OFFSET(::olama::CreateCollectionResponse, msg_),
  PROTOBUF_FIELD_OFFSET(::olama::CreateCollectionResponse, redirect_),
  PROTOBUF_FIELD_OFFSET(::olama::CreateCollectionResponse, affectedcount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::DropCollectionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::DropCollectionRequest, database_),
  PROTOBUF_FIELD_OFFSET(::olama::DropCollectionRequest, collection_),
  PROTOBUF_FIELD_OFFSET(::olama::DropCollectionRequest, force_),
  PROTOBUF_FIELD_OFFSET(::olama::DropCollectionRequest, without_alias_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::DropCollectionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::DropCollectionResponse, code_),
  PROTOBUF_FIELD_OFFSET(::olama::DropCollectionResponse, msg_),
  PROTOBUF_FIELD_OFFSET(::olama::DropCollectionResponse, redirect_),
  PROTOBUF_FIELD_OFFSET(::olama::DropCollectionResponse, affectedcount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::TruncateCollectionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::TruncateCollectionRequest, database_),
  PROTOBUF_FIELD_OFFSET(::olama::TruncateCollectionRequest, collection_),
  PROTOBUF_FIELD_OFFSET(::olama::TruncateCollectionRequest, only_truncate_ann_index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::TruncateCollectionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::TruncateCollectionResponse, code_),
  PROTOBUF_FIELD_OFFSET(::olama::TruncateCollectionResponse, msg_),
  PROTOBUF_FIELD_OFFSET(::olama::TruncateCollectionResponse, redirect_),
  PROTOBUF_FIELD_OFFSET(::olama::TruncateCollectionResponse, affectedcount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::RebuildIndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::RebuildIndexRequest, database_),
  PROTOBUF_FIELD_OFFSET(::olama::RebuildIndexRequest, collection_),
  PROTOBUF_FIELD_OFFSET(::olama::RebuildIndexRequest, dropbeforerebuild_),
  PROTOBUF_FIELD_OFFSET(::olama::RebuildIndexRequest, throttle_),
  PROTOBUF_FIELD_OFFSET(::olama::RebuildIndexRequest, disable_train_),
  PROTOBUF_FIELD_OFFSET(::olama::RebuildIndexRequest, force_rebuild_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::RebuildIndexResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::RebuildIndexResponse, code_),
  PROTOBUF_FIELD_OFFSET(::olama::RebuildIndexResponse, msg_),
  PROTOBUF_FIELD_OFFSET(::olama::RebuildIndexResponse, redirect_),
  PROTOBUF_FIELD_OFFSET(::olama::RebuildIndexResponse, task_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::UpsertRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::UpsertRequest, database_),
  PROTOBUF_FIELD_OFFSET(::olama::UpsertRequest, collection_),
  PROTOBUF_FIELD_OFFSET(::olama::UpsertRequest, buildindex_),
  PROTOBUF_FIELD_OFFSET(::olama::UpsertRequest, documents_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::EmbeddingExtraInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::EmbeddingExtraInfo, token_used_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::UpsertResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::UpsertResponse, code_),
  PROTOBUF_FIELD_OFFSET(::olama::UpsertResponse, msg_),
  PROTOBUF_FIELD_OFFSET(::olama::UpsertResponse, redirect_),
  PROTOBUF_FIELD_OFFSET(::olama::UpsertResponse, affectedcount_),
  PROTOBUF_FIELD_OFFSET(::olama::UpsertResponse, warning_),
  PROTOBUF_FIELD_OFFSET(::olama::UpsertResponse, embedding_extra_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::UpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::UpdateRequest, database_),
  PROTOBUF_FIELD_OFFSET(::olama::UpdateRequest, collection_),
  PROTOBUF_FIELD_OFFSET(::olama::UpdateRequest, query_),
  PROTOBUF_FIELD_OFFSET(::olama::UpdateRequest, update_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::UpdateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::UpdateResponse, code_),
  PROTOBUF_FIELD_OFFSET(::olama::UpdateResponse, msg_),
  PROTOBUF_FIELD_OFFSET(::olama::UpdateResponse, redirect_),
  PROTOBUF_FIELD_OFFSET(::olama::UpdateResponse, affectedcount_),
  PROTOBUF_FIELD_OFFSET(::olama::UpdateResponse, warning_),
  PROTOBUF_FIELD_OFFSET(::olama::UpdateResponse, embedding_extra_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::DeleteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::DeleteRequest, database_),
  PROTOBUF_FIELD_OFFSET(::olama::DeleteRequest, collection_),
  PROTOBUF_FIELD_OFFSET(::olama::DeleteRequest, query_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::DeleteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::DeleteResponse, code_),
  PROTOBUF_FIELD_OFFSET(::olama::DeleteResponse, msg_),
  PROTOBUF_FIELD_OFFSET(::olama::DeleteResponse, redirect_),
  PROTOBUF_FIELD_OFFSET(::olama::DeleteResponse, affectedcount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::QueryCond, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::QueryCond, documentids_),
  PROTOBUF_FIELD_OFFSET(::olama::QueryCond, indexids_),
  PROTOBUF_FIELD_OFFSET(::olama::QueryCond, retrievevector_),
  PROTOBUF_FIELD_OFFSET(::olama::QueryCond, filter_),
  PROTOBUF_FIELD_OFFSET(::olama::QueryCond, limit_),
  PROTOBUF_FIELD_OFFSET(::olama::QueryCond, offset_),
  PROTOBUF_FIELD_OFFSET(::olama::QueryCond, outputfields_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::QueryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::QueryRequest, database_),
  PROTOBUF_FIELD_OFFSET(::olama::QueryRequest, collection_),
  PROTOBUF_FIELD_OFFSET(::olama::QueryRequest, query_),
  PROTOBUF_FIELD_OFFSET(::olama::QueryRequest, readconsistency_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::QueryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::QueryResponse, code_),
  PROTOBUF_FIELD_OFFSET(::olama::QueryResponse, msg_),
  PROTOBUF_FIELD_OFFSET(::olama::QueryResponse, redirect_),
  PROTOBUF_FIELD_OFFSET(::olama::QueryResponse, documents_),
  PROTOBUF_FIELD_OFFSET(::olama::QueryResponse, count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::SearchResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::SearchResult, documents_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::SearchParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::SearchParams, nprobe_),
  PROTOBUF_FIELD_OFFSET(::olama::SearchParams, ef_),
  PROTOBUF_FIELD_OFFSET(::olama::SearchParams, radius_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::VectorArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::VectorArray, vector_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::SearchCond, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::SearchCond, vectors_),
  PROTOBUF_FIELD_OFFSET(::olama::SearchCond, documentids_),
  PROTOBUF_FIELD_OFFSET(::olama::SearchCond, params_),
  PROTOBUF_FIELD_OFFSET(::olama::SearchCond, filter_),
  PROTOBUF_FIELD_OFFSET(::olama::SearchCond, retrievevector_),
  PROTOBUF_FIELD_OFFSET(::olama::SearchCond, limit_),
  PROTOBUF_FIELD_OFFSET(::olama::SearchCond, outputfields_),
  PROTOBUF_FIELD_OFFSET(::olama::SearchCond, embeddingitems_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::SearchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::SearchRequest, database_),
  PROTOBUF_FIELD_OFFSET(::olama::SearchRequest, collection_),
  PROTOBUF_FIELD_OFFSET(::olama::SearchRequest, search_),
  PROTOBUF_FIELD_OFFSET(::olama::SearchRequest, readconsistency_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::Filter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::Filter, expr_),
  PROTOBUF_FIELD_OFFSET(::olama::Filter, radius_),
  PROTOBUF_FIELD_OFFSET(::olama::Filter, size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::SearchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::SearchResponse, code_),
  PROTOBUF_FIELD_OFFSET(::olama::SearchResponse, msg_),
  PROTOBUF_FIELD_OFFSET(::olama::SearchResponse, redirect_),
  PROTOBUF_FIELD_OFFSET(::olama::SearchResponse, results_),
  PROTOBUF_FIELD_OFFSET(::olama::SearchResponse, warning_),
  PROTOBUF_FIELD_OFFSET(::olama::SearchResponse, embedding_extra_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::DatabaseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::DatabaseRequest, database_),
  PROTOBUF_FIELD_OFFSET(::olama::DatabaseRequest, dbtype_),
  PROTOBUF_FIELD_OFFSET(::olama::DatabaseResponse_InfoEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::olama::DatabaseResponse_InfoEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::DatabaseResponse_InfoEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::olama::DatabaseResponse_InfoEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::olama::DatabaseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::olama::DatabaseResponse, code_),
  PROTOBUF_FIELD_OFFSET(::olama::DatabaseResponse, msg_),
  PROTOBUF_FIELD_OFFSET(::olama::DatabaseResponse, redirect_),
  PROTOBUF_FIELD_OFFSET(::olama::DatabaseResponse, databases_),
  PROTOBUF_FIELD_OFFSET(::olama::DatabaseResponse, affectedcount_),
  PROTOBUF_FIELD_OFFSET(::olama::DatabaseResponse, info_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::olama::Document_FieldsEntry_DoNotUse)},
  { 9, -1, sizeof(::olama::Document)},
  { 23, -1, sizeof(::olama::Field_StringArray)},
  { 29, -1, sizeof(::olama::Field)},
  { 39, -1, sizeof(::olama::ShardState)},
  { 52, -1, sizeof(::olama::Shard)},
  { 65, -1, sizeof(::olama::AliasItem)},
  { 72, -1, sizeof(::olama::DatabaseItem)},
  { 79, -1, sizeof(::olama::EmbeddingParams)},
  { 87, 94, sizeof(::olama::CollectionConf_FieldMetasEntry_DoNotUse)},
  { 96, 103, sizeof(::olama::CollectionConf_OptionsEntry_DoNotUse)},
  { 105, -1, sizeof(::olama::CollectionConf)},
  { 127, -1, sizeof(::olama::FieldMeta)},
  { 134, -1, sizeof(::olama::ShardConf)},
  { 143, -1, sizeof(::olama::TTLConfig)},
  { 150, -1, sizeof(::olama::ShardCollectionState)},
  { 165, -1, sizeof(::olama::CollectionState)},
  { 177, -1, sizeof(::olama::AddAliasRequest)},
  { 185, -1, sizeof(::olama::RemoveAliasRequest)},
  { 192, -1, sizeof(::olama::UpdateAliasResponse)},
  { 201, -1, sizeof(::olama::GetAliasRequest)},
  { 208, -1, sizeof(::olama::GetAliasResponse)},
  { 217, -1, sizeof(::olama::DescribeCollectionRequest)},
  { 225, -1, sizeof(::olama::DescribeCollectionResponse)},
  { 235, -1, sizeof(::olama::ListCollectionsRequest)},
  { 242, -1, sizeof(::olama::ListCollectionsResponse)},
  { 252, -1, sizeof(::olama::IndexParams)},
  { 261, -1, sizeof(::olama::IndexColumn)},
  { 273, -1, sizeof(::olama::IndexStatus)},
  { 281, 288, sizeof(::olama::CreateCollectionRequest_IndexesEntry_DoNotUse)},
  { 290, -1, sizeof(::olama::CreateCollectionRequest)},
  { 308, -1, sizeof(::olama::CreateCollectionResponse)},
  { 317, -1, sizeof(::olama::DropCollectionRequest)},
  { 326, -1, sizeof(::olama::DropCollectionResponse)},
  { 335, -1, sizeof(::olama::TruncateCollectionRequest)},
  { 343, -1, sizeof(::olama::TruncateCollectionResponse)},
  { 352, -1, sizeof(::olama::RebuildIndexRequest)},
  { 363, -1, sizeof(::olama::RebuildIndexResponse)},
  { 372, -1, sizeof(::olama::UpsertRequest)},
  { 381, -1, sizeof(::olama::EmbeddingExtraInfo)},
  { 387, -1, sizeof(::olama::UpsertResponse)},
  { 398, -1, sizeof(::olama::UpdateRequest)},
  { 407, -1, sizeof(::olama::UpdateResponse)},
  { 418, -1, sizeof(::olama::DeleteRequest)},
  { 426, -1, sizeof(::olama::DeleteResponse)},
  { 435, -1, sizeof(::olama::QueryCond)},
  { 447, -1, sizeof(::olama::QueryRequest)},
  { 456, -1, sizeof(::olama::QueryResponse)},
  { 466, -1, sizeof(::olama::SearchResult)},
  { 472, -1, sizeof(::olama::SearchParams)},
  { 480, -1, sizeof(::olama::VectorArray)},
  { 486, -1, sizeof(::olama::SearchCond)},
  { 499, -1, sizeof(::olama::SearchRequest)},
  { 508, -1, sizeof(::olama::Filter)},
  { 516, -1, sizeof(::olama::SearchResponse)},
  { 527, -1, sizeof(::olama::DatabaseRequest)},
  { 534, 541, sizeof(::olama::DatabaseResponse_InfoEntry_DoNotUse)},
  { 543, -1, sizeof(::olama::DatabaseResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_Document_FieldsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_Document_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_Field_StringArray_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_Field_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_ShardState_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_Shard_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_AliasItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_DatabaseItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_EmbeddingParams_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_CollectionConf_FieldMetasEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_CollectionConf_OptionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_CollectionConf_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_FieldMeta_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_ShardConf_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_TTLConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_ShardCollectionState_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_CollectionState_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_AddAliasRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_RemoveAliasRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_UpdateAliasResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_GetAliasRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_GetAliasResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_DescribeCollectionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_DescribeCollectionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_ListCollectionsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_ListCollectionsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_IndexParams_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_IndexColumn_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_IndexStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_CreateCollectionRequest_IndexesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_CreateCollectionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_CreateCollectionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_DropCollectionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_DropCollectionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_TruncateCollectionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_TruncateCollectionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_RebuildIndexRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_RebuildIndexResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_UpsertRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_EmbeddingExtraInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_UpsertResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_UpdateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_UpdateResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_DeleteRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_DeleteResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_QueryCond_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_QueryRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_QueryResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_SearchResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_SearchParams_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_VectorArray_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_SearchCond_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_SearchRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_Filter_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_SearchResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_DatabaseRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_DatabaseResponse_InfoEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::olama::_DatabaseResponse_default_instance_),
};

const char descriptor_table_protodef_olama_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013olama.proto\022\005olama\"\200\002\n\010Document\022\n\n\002id\030"
  "\001 \001(\t\022\016\n\006vector\030\002 \003(\002\022\r\n\005score\030\003 \001(\002\022+\n\006"
  "fields\030\004 \003(\0132\033.olama.Document.FieldsEntr"
  "y\022\020\n\010index_id\030\005 \001(\004\022\021\n\tfrom_peer\030\006 \001(\t\022\021"
  "\n\tshard_idx\030\007 \001(\005\022\025\n\rvector_offset\030\010 \001(\004"
  "\022\020\n\010doc_info\030\t \001(\014\032;\n\013FieldsEntry\022\013\n\003key"
  "\030\001 \001(\t\022\033\n\005value\030\002 \001(\0132\014.olama.Field:\0028\001\""
  "\241\001\n\005Field\022\021\n\007val_str\030\001 \001(\014H\000\022\021\n\007val_u64\030"
  "\002 \001(\004H\000\022\024\n\nval_double\030\003 \001(\001H\000\022/\n\013val_str"
  "_arr\030\004 \001(\0132\030.olama.Field.StringArrayH\000\032\036"
  "\n\013StringArray\022\017\n\007str_arr\030\001 \003(\014B\013\n\toneof_"
  "val\"\352\001\n\nShardState\022)\n\ndata_state\030\001 \001(\0162\025"
  ".olama.ShardDataState\022\037\n\027estimate_index_"
  "mem_size\030\002 \001(\004\022\023\n\013snapshoting\030\003 \001(\010\022\032\n\022l"
  "ast_applied_index\030\004 \001(\003\022\031\n\021last_applied_"
  "term\030\005 \001(\003\022\017\n\007id_seed\030\006 \001(\003\022\023\n\013added_ite"
  "ms\030\007 \001(\004\022\036\n\026data_state_change_time\030\010 \001(\003"
  "\"\251\001\n\005Shard\022\022\n\ncollection\030\001 \001(\t\022\021\n\tshard_"
  "idx\030\002 \001(\005\022\021\n\tis_leader\030\003 \001(\010\022\021\n\tfollowin"
  "g\030\004 \001(\010\022 \n\005state\030\005 \001(\0132\021.olama.ShardStat"
  "e\022\r\n\005nodes\030\006 \003(\t\022\021\n\tfrom_node\030\007 \001(\t\022\017\n\007v"
  "ersion\030\010 \001(\003\".\n\tAliasItem\022\r\n\005alias\030\001 \001(\t"
  "\022\022\n\ncollection\030\002 \001(\t\"E\n\014DatabaseItem\022\023\n\013"
  "create_time\030\001 \001(\003\022 \n\007db_type\030\002 \001(\0162\017.ola"
  "ma.DataType\"J\n\017EmbeddingParams\022\r\n\005field\030"
  "\001 \001(\t\022\024\n\014vector_field\030\002 \001(\t\022\022\n\nmodel_nam"
  "e\030\003 \001(\t\"\211\005\n\016CollectionConf\022\020\n\010database\030\001"
  " \001(\t\022\022\n\ncollection\030\002 \001(\t\022\023\n\013description\030"
  "\003 \001(\t\022\030\n\020number_of_shards\030\004 \001(\r\022\032\n\022numbe"
  "r_of_replicas\030\005 \001(\r\022\021\n\tdimension\030\006 \001(\r\022&"
  "\n\006metric\030\007 \001(\0162\026.olama.IndexMetricType\022\016"
  "\n\006nprobe\030\010 \001(\r\022&\n\006engine\030\013 \001(\0162\026.olama.I"
  "ndexEngineType\022\022\n\nmodel_desc\030\014 \001(\t\022:\n\013fi"
  "eld_metas\030\017 \003(\0132%.olama.CollectionConf.F"
  "ieldMetasEntry\0223\n\007options\030\020 \003(\0132\".olama."
  "CollectionConf.OptionsEntry\022\r\n\005nlist\030\021 \001"
  "(\r\0220\n\020embedding_params\030\022 \001(\0132\026.olama.Emb"
  "eddingParams\022\"\n\tdata_type\030\023 \001(\0162\017.olama."
  "DataType\022\017\n\007version\030\024 \001(\003\022#\n\tttlConfig\030\025"
  " \001(\0132\020.olama.TTLConfig\032C\n\017FieldMetasEntr"
  "y\022\013\n\003key\030\001 \001(\t\022\037\n\005value\030\002 \001(\0132\020.olama.Fi"
  "eldMeta:\0028\001\032.\n\014OptionsEntry\022\013\n\003key\030\001 \001(\t"
  "\022\r\n\005value\030\002 \001(\t:\0028\001\"f\n\tFieldMeta\022$\n\nfiel"
  "d_type\030\001 \001(\0162\020.olama.FieldType\0223\n\022field_"
  "element_type\030\002 \001(\0162\027.olama.FieldElementT"
  "ype\"f\n\tShardConf\022\022\n\ncollection\030\001 \001(\t\022\021\n\t"
  "shard_idx\030\002 \001(\005\022#\n\004conf\030\003 \001(\0132\025.olama.Co"
  "llectionConf\022\r\n\005nodes\030\004 \003(\t\".\n\tTTLConfig"
  "\022\016\n\006enable\030\001 \001(\010\022\021\n\ttimeField\030\002 \001(\t\"\353\001\n\024"
  "ShardCollectionState\022\021\n\tshard_idx\030\001 \001(\005\022"
  "\016\n\006leader\030\002 \001(\t\022\022\n\nnode_peers\030\003 \003(\t\022\031\n\021a"
  "llocate_start_ms\030\004 \001(\003\022\030\n\020allocate_stop_"
  "ms\030\005 \001(\003\022\021\n\tleader_ms\030\006 \001(\003\022\022\n\nallocatin"
  "g\030\007 \001(\010\022\034\n\006shards\030\010 \003(\0132\014.olama.Shard\022\020\n"
  "\010creating\030\t \001(\010\022\020\n\010removing\030\n \001(\010\"\363\001\n\017Co"
  "llectionState\022\022\n\ncollection\030\001 \001(\t\022#\n\004con"
  "f\030\002 \001(\0132\025.olama.CollectionConf\022+\n\006shards"
  "\030\003 \003(\0132\033.olama.ShardCollectionState\022\014\n\004s"
  "ize\030\004 \001(\004\022\023\n\013create_time\030\005 \001(\003\022+\n\003req\030\006 "
  "\001(\0132\036.olama.CreateCollectionRequest\022*\n\013i"
  "ndex_state\030\010 \001(\0162\025.olama.ShardDataState\""
  "F\n\017AddAliasRequest\022\020\n\010database\030\001 \001(\t\022\022\n\n"
  "collection\030\002 \001(\t\022\r\n\005alias\030\003 \001(\t\"5\n\022Remov"
  "eAliasRequest\022\020\n\010database\030\001 \001(\t\022\r\n\005alias"
  "\030\002 \001(\t\"Y\n\023UpdateAliasResponse\022\014\n\004code\030\001 "
  "\001(\005\022\013\n\003msg\030\002 \001(\t\022\020\n\010redirect\030\003 \001(\t\022\025\n\raf"
  "fectedCount\030\004 \001(\004\"2\n\017GetAliasRequest\022\020\n\010"
  "database\030\001 \001(\t\022\r\n\005alias\030\002 \001(\t\"b\n\020GetAlia"
  "sResponse\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\022\020\n\010"
  "redirect\030\003 \001(\t\022!\n\007aliases\030\004 \003(\0132\020.olama."
  "AliasItem\"S\n\031DescribeCollectionRequest\022\020"
  "\n\010database\030\001 \001(\t\022\022\n\ncollection\030\002 \001(\t\022\020\n\010"
  "transfer\030\003 \001(\010\"\244\001\n\032DescribeCollectionRes"
  "ponse\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\022\020\n\010redi"
  "rect\030\003 \001(\t\0222\n\ncollection\030\004 \001(\0132\036.olama.C"
  "reateCollectionRequest\022%\n\005state\030\005 \001(\0132\026."
  "olama.CollectionState\"<\n\026ListCollections"
  "Request\022\020\n\010database\030\001 \001(\t\022\020\n\010transfer\030\002 "
  "\001(\010\"\243\001\n\027ListCollectionsResponse\022\014\n\004code\030"
  "\001 \001(\005\022\013\n\003msg\030\002 \001(\t\022\020\n\010redirect\030\003 \001(\t\0223\n\013"
  "collections\030\004 \003(\0132\036.olama.CreateCollecti"
  "onRequest\022&\n\006states\030\005 \003(\0132\026.olama.Collec"
  "tionState\"O\n\013IndexParams\022\t\n\001M\030\001 \001(\r\022\026\n\016e"
  "fConstruction\030\002 \001(\r\022\016\n\006nprobe\030\003 \001(\r\022\r\n\005n"
  "list\030\004 \001(\r\"\253\001\n\013IndexColumn\022\021\n\tfieldName\030"
  "\001 \001(\t\022\021\n\tfieldType\030\002 \001(\t\022\021\n\tindexType\030\003 "
  "\001(\t\022\021\n\tdimension\030\004 \001(\r\022\022\n\nmetricType\030\005 \001"
  "(\t\022\"\n\006params\030\010 \001(\0132\022.olama.IndexParams\022\030"
  "\n\020fieldElementType\030\t \001(\t\"B\n\013IndexStatus\022"
  "\016\n\006status\030\001 \001(\t\022\020\n\010progress\030\002 \001(\t\022\021\n\tsta"
  "rtTime\030\003 \001(\t\"\302\003\n\027CreateCollectionRequest"
  "\022\020\n\010database\030\001 \001(\t\022\022\n\ncollection\030\002 \001(\t\022\022"
  "\n\nreplicaNum\030\003 \001(\r\022\020\n\010shardNum\030\004 \001(\r\022\014\n\004"
  "size\030\005 \001(\004\022\022\n\ncreateTime\030\006 \001(\t\022\023\n\013descri"
  "ption\030\007 \001(\t\022<\n\007indexes\030\010 \003(\0132+.olama.Cre"
  "ateCollectionRequest.IndexesEntry\022\'\n\013ind"
  "exStatus\030\t \001(\0132\022.olama.IndexStatus\022\022\n\nal"
  "ias_list\030\n \003(\t\022/\n\017embeddingParams\030\013 \001(\0132"
  "\026.olama.EmbeddingParams\022\017\n\007version\030\014 \001(\003"
  "\022#\n\tttlConfig\030\r \001(\0132\020.olama.TTLConfig\032B\n"
  "\014IndexesEntry\022\013\n\003key\030\001 \001(\t\022!\n\005value\030\002 \001("
  "\0132\022.olama.IndexColumn:\0028\001\"^\n\030CreateColle"
  "ctionResponse\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t"
  "\022\020\n\010redirect\030\003 \001(\t\022\025\n\raffectedCount\030\004 \001("
  "\004\"c\n\025DropCollectionRequest\022\020\n\010database\030\001"
  " \001(\t\022\022\n\ncollection\030\002 \001(\t\022\r\n\005force\030\003 \001(\010\022"
  "\025\n\rwithout_alias\030\004 \001(\010\"\\\n\026DropCollection"
  "Response\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\022\020\n\010r"
  "edirect\030\003 \001(\t\022\025\n\raffectedCount\030\004 \001(\004\"b\n\031"
  "TruncateCollectionRequest\022\020\n\010database\030\001 "
  "\001(\t\022\022\n\ncollection\030\002 \001(\t\022\037\n\027only_truncate"
  "_ann_index\030\003 \001(\010\"`\n\032TruncateCollectionRe"
  "sponse\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\022\020\n\010red"
  "irect\030\003 \001(\t\022\025\n\raffectedCount\030\004 \001(\004\"\226\001\n\023R"
  "ebuildIndexRequest\022\020\n\010database\030\001 \001(\t\022\022\n\n"
  "collection\030\002 \001(\t\022\031\n\021dropBeforeRebuild\030\003 "
  "\001(\010\022\020\n\010throttle\030\004 \001(\005\022\025\n\rdisable_train\030\005"
  " \001(\010\022\025\n\rforce_rebuild\030\006 \001(\010\"U\n\024RebuildIn"
  "dexResponse\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\022\020"
  "\n\010redirect\030\003 \001(\t\022\020\n\010task_ids\030\004 \003(\t\"m\n\rUp"
  "sertRequest\022\020\n\010database\030\001 \001(\t\022\022\n\ncollect"
  "ion\030\002 \001(\t\022\022\n\nbuildIndex\030\003 \001(\010\022\"\n\tdocumen"
  "ts\030\004 \003(\0132\017.olama.Document\"(\n\022EmbeddingEx"
  "traInfo\022\022\n\ntoken_used\030\001 \001(\004\"\236\001\n\016UpsertRe"
  "sponse\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\022\020\n\010red"
  "irect\030\003 \001(\t\022\025\n\raffectedCount\030\004 \001(\004\022\017\n\007wa"
  "rning\030\005 \001(\t\0227\n\024embedding_extra_info\030\006 \001("
  "\0132\031.olama.EmbeddingExtraInfo\"w\n\rUpdateRe"
  "quest\022\020\n\010database\030\001 \001(\t\022\022\n\ncollection\030\002 "
  "\001(\t\022\037\n\005query\030\003 \001(\0132\020.olama.QueryCond\022\037\n\006"
  "update\030\004 \001(\0132\017.olama.Document\"\236\001\n\016Update"
  "Response\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\022\020\n\010r"
  "edirect\030\003 \001(\t\022\025\n\raffectedCount\030\004 \001(\004\022\017\n\007"
  "warning\030\005 \001(\t\0227\n\024embedding_extra_info\030\006 "
  "\001(\0132\031.olama.EmbeddingExtraInfo\"V\n\rDelete"
  "Request\022\020\n\010database\030\001 \001(\t\022\022\n\ncollection\030"
  "\002 \001(\t\022\037\n\005query\030\003 \001(\0132\020.olama.QueryCond\"T"
  "\n\016DeleteResponse\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 "
  "\001(\t\022\020\n\010redirect\030\003 \001(\t\022\025\n\raffectedCount\030\004"
  " \001(\004\"\217\001\n\tQueryCond\022\023\n\013documentIds\030\001 \003(\t\022"
  "\020\n\010indexIds\030\002 \003(\004\022\026\n\016retrieveVector\030\003 \001("
  "\010\022\016\n\006filter\030\004 \001(\t\022\r\n\005limit\030\005 \001(\003\022\016\n\006offs"
  "et\030\006 \001(\003\022\024\n\014outputFields\030\007 \003(\t\"n\n\014QueryR"
  "equest\022\020\n\010database\030\001 \001(\t\022\022\n\ncollection\030\002"
  " \001(\t\022\037\n\005query\030\003 \001(\0132\020.olama.QueryCond\022\027\n"
  "\017readConsistency\030\004 \001(\t\"o\n\rQueryResponse\022"
  "\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\022\020\n\010redirect\030\003"
  " \001(\t\022\"\n\tdocuments\030\004 \003(\0132\017.olama.Document"
  "\022\r\n\005count\030\005 \001(\004\"2\n\014SearchResult\022\"\n\tdocum"
  "ents\030\001 \003(\0132\017.olama.Document\":\n\014SearchPar"
  "ams\022\016\n\006nprobe\030\001 \001(\r\022\n\n\002ef\030\002 \001(\r\022\016\n\006radiu"
  "s\030\003 \001(\002\"\035\n\013VectorArray\022\016\n\006vector\030\001 \003(\002\"\320"
  "\001\n\nSearchCond\022#\n\007vectors\030\001 \003(\0132\022.olama.V"
  "ectorArray\022\023\n\013documentIds\030\002 \003(\t\022#\n\006param"
  "s\030\003 \001(\0132\023.olama.SearchParams\022\016\n\006filter\030\004"
  " \001(\t\022\026\n\016retrieveVector\030\005 \001(\010\022\r\n\005limit\030\006 "
  "\001(\r\022\024\n\014outputfields\030\007 \003(\t\022\026\n\016embeddingIt"
  "ems\030\010 \003(\t\"q\n\rSearchRequest\022\020\n\010database\030\001"
  " \001(\t\022\022\n\ncollection\030\002 \001(\t\022!\n\006search\030\003 \001(\013"
  "2\021.olama.SearchCond\022\027\n\017readConsistency\030\004"
  " \001(\t\"4\n\006Filter\022\014\n\004expr\030\001 \001(\t\022\016\n\006radius\030\002"
  " \001(\002\022\014\n\004size\030\003 \001(\r\"\255\001\n\016SearchResponse\022\014\n"
  "\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\022\020\n\010redirect\030\003 \001"
  "(\t\022$\n\007results\030\004 \003(\0132\023.olama.SearchResult"
  "\022\017\n\007warning\030\005 \001(\t\0227\n\024embedding_extra_inf"
  "o\030\006 \001(\0132\031.olama.EmbeddingExtraInfo\"D\n\017Da"
  "tabaseRequest\022\020\n\010database\030\001 \001(\t\022\037\n\006dbTyp"
  "e\030\002 \001(\0162\017.olama.DataType\"\334\001\n\020DatabaseRes"
  "ponse\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\022\020\n\010redi"
  "rect\030\003 \001(\t\022\021\n\tdatabases\030\004 \003(\t\022\025\n\raffecte"
  "dCount\030\005 \001(\004\022/\n\004info\030\006 \003(\0132!.olama.Datab"
  "aseResponse.InfoEntry\032@\n\tInfoEntry\022\013\n\003ke"
  "y\030\001 \001(\t\022\"\n\005value\030\002 \001(\0132\023.olama.DatabaseI"
  "tem:\0028\001*s\n\016ShardDataState\022\025\n\021SHARD_INDEX"
  "_READY\020\000\022\030\n\024SHARD_INDEX_TRAINING\020\001\022\030\n\024SH"
  "ARD_INDEX_BUILDING\020\002\022\026\n\022SHARD_INDEX_FAIL"
  "ED\020\003* \n\010DataType\022\010\n\004BASE\020\000\022\n\n\006AI_DOC\020\001*y"
  "\n\017IndexMetricType\022\036\n\032INDEX_METRIC_INNER_"
  "PRODUCT\020\000\022\023\n\017INDEX_METRIC_L2\020\001\022\027\n\023INDEX_"
  "METRIC_COSINE\020\002\022\030\n\024INDEX_METRIC_HAMMING\020"
  "\003*W\n\017IndexEngineType\022\027\n\023ENGINE_FAISS_VEC"
  "TOR\020\000\022\027\n\023ENGINE_FAISS_BINARY\020\001\022\022\n\016ENGINE"
  "_HNSWLIB\020\003*=\n\tFieldType\022\017\n\013TYPE_STRING\020\000"
  "\022\016\n\nTYPE_ARRAY\020\001\022\017\n\013TYPE_UINT64\020\002*+\n\020Fie"
  "ldElementType\022\027\n\023ELEMENT_TYPE_STRING\020\0002\232"
  "\t\n\014SearchEngine\022>\n\010setAlias\022\026.olama.AddA"
  "liasRequest\032\032.olama.UpdateAliasResponse\022"
  ";\n\010getAlias\022\026.olama.GetAliasRequest\032\027.ol"
  "ama.GetAliasResponse\022D\n\013deleteAlias\022\031.ol"
  "ama.RemoveAliasRequest\032\032.olama.UpdateAli"
  "asResponse\022S\n\020createCollection\022\036.olama.C"
  "reateCollectionRequest\032\037.olama.CreateCol"
  "lectionResponse\022M\n\016dropCollection\022\034.olam"
  "a.DropCollectionRequest\032\035.olama.DropColl"
  "ectionResponse\022Y\n\022truncateCollection\022 .o"
  "lama.TruncateCollectionRequest\032!.olama.T"
  "runcateCollectionResponse\022Y\n\022describeCol"
  "lection\022 .olama.DescribeCollectionReques"
  "t\032!.olama.DescribeCollectionResponse\022P\n\017"
  "listCollections\022\035.olama.ListCollectionsR"
  "equest\032\036.olama.ListCollectionsResponse\022G"
  "\n\014rebuildIndex\022\032.olama.RebuildIndexReque"
  "st\032\033.olama.RebuildIndexResponse\0225\n\006upser"
  "t\022\024.olama.UpsertRequest\032\025.olama.UpsertRe"
  "sponse\0225\n\006update\022\024.olama.UpdateRequest\032\025"
  ".olama.UpdateResponse\0222\n\005query\022\023.olama.Q"
  "ueryRequest\032\024.olama.QueryResponse\0225\n\006sea"
  "rch\022\024.olama.SearchRequest\032\025.olama.Search"
  "Response\0223\n\004dele\022\024.olama.DeleteRequest\032\025"
  ".olama.DeleteResponse\022A\n\016createDatabase\022"
  "\026.olama.DatabaseRequest\032\027.olama.Database"
  "Response\022\?\n\014dropDatabase\022\026.olama.Databas"
  "eRequest\032\027.olama.DatabaseResponse\022@\n\rlis"
  "tDatabases\022\026.olama.DatabaseRequest\032\027.ola"
  "ma.DatabaseResponseB\003\200\001\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_olama_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_olama_2eproto_sccs[58] = {
  &scc_info_AddAliasRequest_olama_2eproto.base,
  &scc_info_AliasItem_olama_2eproto.base,
  &scc_info_CollectionConf_olama_2eproto.base,
  &scc_info_CollectionConf_FieldMetasEntry_DoNotUse_olama_2eproto.base,
  &scc_info_CollectionConf_OptionsEntry_DoNotUse_olama_2eproto.base,
  &scc_info_CollectionState_olama_2eproto.base,
  &scc_info_CreateCollectionRequest_olama_2eproto.base,
  &scc_info_CreateCollectionRequest_IndexesEntry_DoNotUse_olama_2eproto.base,
  &scc_info_CreateCollectionResponse_olama_2eproto.base,
  &scc_info_DatabaseItem_olama_2eproto.base,
  &scc_info_DatabaseRequest_olama_2eproto.base,
  &scc_info_DatabaseResponse_olama_2eproto.base,
  &scc_info_DatabaseResponse_InfoEntry_DoNotUse_olama_2eproto.base,
  &scc_info_DeleteRequest_olama_2eproto.base,
  &scc_info_DeleteResponse_olama_2eproto.base,
  &scc_info_DescribeCollectionRequest_olama_2eproto.base,
  &scc_info_DescribeCollectionResponse_olama_2eproto.base,
  &scc_info_Document_olama_2eproto.base,
  &scc_info_Document_FieldsEntry_DoNotUse_olama_2eproto.base,
  &scc_info_DropCollectionRequest_olama_2eproto.base,
  &scc_info_DropCollectionResponse_olama_2eproto.base,
  &scc_info_EmbeddingExtraInfo_olama_2eproto.base,
  &scc_info_EmbeddingParams_olama_2eproto.base,
  &scc_info_Field_olama_2eproto.base,
  &scc_info_Field_StringArray_olama_2eproto.base,
  &scc_info_FieldMeta_olama_2eproto.base,
  &scc_info_Filter_olama_2eproto.base,
  &scc_info_GetAliasRequest_olama_2eproto.base,
  &scc_info_GetAliasResponse_olama_2eproto.base,
  &scc_info_IndexColumn_olama_2eproto.base,
  &scc_info_IndexParams_olama_2eproto.base,
  &scc_info_IndexStatus_olama_2eproto.base,
  &scc_info_ListCollectionsRequest_olama_2eproto.base,
  &scc_info_ListCollectionsResponse_olama_2eproto.base,
  &scc_info_QueryCond_olama_2eproto.base,
  &scc_info_QueryRequest_olama_2eproto.base,
  &scc_info_QueryResponse_olama_2eproto.base,
  &scc_info_RebuildIndexRequest_olama_2eproto.base,
  &scc_info_RebuildIndexResponse_olama_2eproto.base,
  &scc_info_RemoveAliasRequest_olama_2eproto.base,
  &scc_info_SearchCond_olama_2eproto.base,
  &scc_info_SearchParams_olama_2eproto.base,
  &scc_info_SearchRequest_olama_2eproto.base,
  &scc_info_SearchResponse_olama_2eproto.base,
  &scc_info_SearchResult_olama_2eproto.base,
  &scc_info_Shard_olama_2eproto.base,
  &scc_info_ShardCollectionState_olama_2eproto.base,
  &scc_info_ShardConf_olama_2eproto.base,
  &scc_info_ShardState_olama_2eproto.base,
  &scc_info_TTLConfig_olama_2eproto.base,
  &scc_info_TruncateCollectionRequest_olama_2eproto.base,
  &scc_info_TruncateCollectionResponse_olama_2eproto.base,
  &scc_info_UpdateAliasResponse_olama_2eproto.base,
  &scc_info_UpdateRequest_olama_2eproto.base,
  &scc_info_UpdateResponse_olama_2eproto.base,
  &scc_info_UpsertRequest_olama_2eproto.base,
  &scc_info_UpsertResponse_olama_2eproto.base,
  &scc_info_VectorArray_olama_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_olama_2eproto_once;
static bool descriptor_table_olama_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_olama_2eproto = {
  &descriptor_table_olama_2eproto_initialized, descriptor_table_protodef_olama_2eproto, "olama.proto", 8592,
  &descriptor_table_olama_2eproto_once, descriptor_table_olama_2eproto_sccs, descriptor_table_olama_2eproto_deps, 58, 0,
  schemas, file_default_instances, TableStruct_olama_2eproto::offsets,
  file_level_metadata_olama_2eproto, 58, file_level_enum_descriptors_olama_2eproto, file_level_service_descriptors_olama_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_olama_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_olama_2eproto), true);
namespace olama {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ShardDataState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_olama_2eproto);
  return file_level_enum_descriptors_olama_2eproto[0];
}
bool ShardDataState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DataType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_olama_2eproto);
  return file_level_enum_descriptors_olama_2eproto[1];
}
bool DataType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* IndexMetricType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_olama_2eproto);
  return file_level_enum_descriptors_olama_2eproto[2];
}
bool IndexMetricType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* IndexEngineType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_olama_2eproto);
  return file_level_enum_descriptors_olama_2eproto[3];
}
bool IndexEngineType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FieldType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_olama_2eproto);
  return file_level_enum_descriptors_olama_2eproto[4];
}
bool FieldType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FieldElementType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_olama_2eproto);
  return file_level_enum_descriptors_olama_2eproto[5];
}
bool FieldElementType_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}


// ===================================================================

Document_FieldsEntry_DoNotUse::Document_FieldsEntry_DoNotUse() {}
Document_FieldsEntry_DoNotUse::Document_FieldsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Document_FieldsEntry_DoNotUse::MergeFrom(const Document_FieldsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Document_FieldsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void Document_FieldsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void Document::InitAsDefaultInstance() {
}
class Document::_Internal {
 public:
};

Document::Document()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.Document)
}
Document::Document(const Document& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      vector_(from.vector_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fields_.MergeFrom(from.fields_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  from_peer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_from_peer().empty()) {
    from_peer_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.from_peer_);
  }
  doc_info_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_doc_info().empty()) {
    doc_info_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.doc_info_);
  }
  ::memcpy(&index_id_, &from.index_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&vector_offset_) -
    reinterpret_cast<char*>(&index_id_)) + sizeof(vector_offset_));
  // @@protoc_insertion_point(copy_constructor:olama.Document)
}

void Document::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Document_olama_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  from_peer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  doc_info_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&index_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vector_offset_) -
      reinterpret_cast<char*>(&index_id_)) + sizeof(vector_offset_));
}

Document::~Document() {
  // @@protoc_insertion_point(destructor:olama.Document)
  SharedDtor();
}

void Document::SharedDtor() {
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  from_peer_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  doc_info_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Document::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Document& Document::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Document_olama_2eproto.base);
  return *internal_default_instance();
}


void Document::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.Document)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vector_.Clear();
  fields_.Clear();
  id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  from_peer_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  doc_info_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&index_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vector_offset_) -
      reinterpret_cast<char*>(&index_id_)) + sizeof(vector_offset_));
  _internal_metadata_.Clear();
}

const char* Document::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.Document.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated float vector = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_vector(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21) {
          _internal_add_vector(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float score = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          score_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // map<string, .olama.Field> fields = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&fields_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // uint64 index_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          index_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string from_peer = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_from_peer();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.Document.from_peer"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 shard_idx = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          shard_idx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 vector_offset = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          vector_offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes doc_info = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_doc_info();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Document::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.Document)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.Document.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // repeated float vector = 2;
  if (this->_internal_vector_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_vector(), target);
  }

  // float score = 3;
  if (!(this->score() <= 0 && this->score() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_score(), target);
  }

  // map<string, .olama.Field> fields = 4;
  if (!this->_internal_fields().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::olama::Field >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "olama.Document.FieldsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_fields().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_fields().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::olama::Field >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::olama::Field >::const_iterator
          it = this->_internal_fields().begin();
          it != this->_internal_fields().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Document_FieldsEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::olama::Field >::const_iterator
          it = this->_internal_fields().begin();
          it != this->_internal_fields().end(); ++it) {
        target = Document_FieldsEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // uint64 index_id = 5;
  if (this->index_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_index_id(), target);
  }

  // string from_peer = 6;
  if (this->from_peer().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_from_peer().data(), static_cast<int>(this->_internal_from_peer().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.Document.from_peer");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_from_peer(), target);
  }

  // int32 shard_idx = 7;
  if (this->shard_idx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_shard_idx(), target);
  }

  // uint64 vector_offset = 8;
  if (this->vector_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(8, this->_internal_vector_offset(), target);
  }

  // bytes doc_info = 9;
  if (this->doc_info().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        9, this->_internal_doc_info(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.Document)
  return target;
}

size_t Document::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.Document)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float vector = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_vector_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _vector_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // map<string, .olama.Field> fields = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_fields_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::olama::Field >::const_iterator
      it = this->_internal_fields().begin();
      it != this->_internal_fields().end(); ++it) {
    total_size += Document_FieldsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string from_peer = 6;
  if (this->from_peer().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_from_peer());
  }

  // bytes doc_info = 9;
  if (this->doc_info().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_doc_info());
  }

  // uint64 index_id = 5;
  if (this->index_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_index_id());
  }

  // float score = 3;
  if (!(this->score() <= 0 && this->score() >= 0)) {
    total_size += 1 + 4;
  }

  // int32 shard_idx = 7;
  if (this->shard_idx() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_shard_idx());
  }

  // uint64 vector_offset = 8;
  if (this->vector_offset() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_vector_offset());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Document::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.Document)
  GOOGLE_DCHECK_NE(&from, this);
  const Document* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Document>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.Document)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.Document)
    MergeFrom(*source);
  }
}

void Document::MergeFrom(const Document& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.Document)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vector_.MergeFrom(from.vector_);
  fields_.MergeFrom(from.fields_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.from_peer().size() > 0) {

    from_peer_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.from_peer_);
  }
  if (from.doc_info().size() > 0) {

    doc_info_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.doc_info_);
  }
  if (from.index_id() != 0) {
    _internal_set_index_id(from._internal_index_id());
  }
  if (!(from.score() <= 0 && from.score() >= 0)) {
    _internal_set_score(from._internal_score());
  }
  if (from.shard_idx() != 0) {
    _internal_set_shard_idx(from._internal_shard_idx());
  }
  if (from.vector_offset() != 0) {
    _internal_set_vector_offset(from._internal_vector_offset());
  }
}

void Document::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.Document)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Document::CopyFrom(const Document& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.Document)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Document::IsInitialized() const {
  return true;
}

void Document::InternalSwap(Document* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  vector_.InternalSwap(&other->vector_);
  fields_.Swap(&other->fields_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  from_peer_.Swap(&other->from_peer_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  doc_info_.Swap(&other->doc_info_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(index_id_, other->index_id_);
  swap(score_, other->score_);
  swap(shard_idx_, other->shard_idx_);
  swap(vector_offset_, other->vector_offset_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Document::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Field_StringArray::InitAsDefaultInstance() {
}
class Field_StringArray::_Internal {
 public:
};

Field_StringArray::Field_StringArray()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.Field.StringArray)
}
Field_StringArray::Field_StringArray(const Field_StringArray& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      str_arr_(from.str_arr_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:olama.Field.StringArray)
}

void Field_StringArray::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Field_StringArray_olama_2eproto.base);
}

Field_StringArray::~Field_StringArray() {
  // @@protoc_insertion_point(destructor:olama.Field.StringArray)
  SharedDtor();
}

void Field_StringArray::SharedDtor() {
}

void Field_StringArray::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Field_StringArray& Field_StringArray::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Field_StringArray_olama_2eproto.base);
  return *internal_default_instance();
}


void Field_StringArray::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.Field.StringArray)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  str_arr_.Clear();
  _internal_metadata_.Clear();
}

const char* Field_StringArray::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated bytes str_arr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_str_arr();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Field_StringArray::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.Field.StringArray)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes str_arr = 1;
  for (int i = 0, n = this->_internal_str_arr_size(); i < n; i++) {
    const auto& s = this->_internal_str_arr(i);
    target = stream->WriteBytes(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.Field.StringArray)
  return target;
}

size_t Field_StringArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.Field.StringArray)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes str_arr = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(str_arr_.size());
  for (int i = 0, n = str_arr_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      str_arr_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Field_StringArray::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.Field.StringArray)
  GOOGLE_DCHECK_NE(&from, this);
  const Field_StringArray* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Field_StringArray>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.Field.StringArray)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.Field.StringArray)
    MergeFrom(*source);
  }
}

void Field_StringArray::MergeFrom(const Field_StringArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.Field.StringArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  str_arr_.MergeFrom(from.str_arr_);
}

void Field_StringArray::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.Field.StringArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Field_StringArray::CopyFrom(const Field_StringArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.Field.StringArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Field_StringArray::IsInitialized() const {
  return true;
}

void Field_StringArray::InternalSwap(Field_StringArray* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  str_arr_.InternalSwap(&other->str_arr_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Field_StringArray::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Field::InitAsDefaultInstance() {
  ::olama::_Field_default_instance_.val_str_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::olama::_Field_default_instance_.val_u64_ = PROTOBUF_ULONGLONG(0);
  ::olama::_Field_default_instance_.val_double_ = 0;
  ::olama::_Field_default_instance_.val_str_arr_ = const_cast< ::olama::Field_StringArray*>(
      ::olama::Field_StringArray::internal_default_instance());
}
class Field::_Internal {
 public:
  static const ::olama::Field_StringArray& val_str_arr(const Field* msg);
};

const ::olama::Field_StringArray&
Field::_Internal::val_str_arr(const Field* msg) {
  return *msg->oneof_val_.val_str_arr_;
}
void Field::set_allocated_val_str_arr(::olama::Field_StringArray* val_str_arr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_oneof_val();
  if (val_str_arr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      val_str_arr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, val_str_arr, submessage_arena);
    }
    set_has_val_str_arr();
    oneof_val_.val_str_arr_ = val_str_arr;
  }
  // @@protoc_insertion_point(field_set_allocated:olama.Field.val_str_arr)
}
Field::Field()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.Field)
}
Field::Field(const Field& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_oneof_val();
  switch (from.oneof_val_case()) {
    case kValStr: {
      _internal_set_val_str(from._internal_val_str());
      break;
    }
    case kValU64: {
      _internal_set_val_u64(from._internal_val_u64());
      break;
    }
    case kValDouble: {
      _internal_set_val_double(from._internal_val_double());
      break;
    }
    case kValStrArr: {
      _internal_mutable_val_str_arr()->::olama::Field_StringArray::MergeFrom(from._internal_val_str_arr());
      break;
    }
    case ONEOF_VAL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:olama.Field)
}

void Field::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Field_olama_2eproto.base);
  clear_has_oneof_val();
}

Field::~Field() {
  // @@protoc_insertion_point(destructor:olama.Field)
  SharedDtor();
}

void Field::SharedDtor() {
  if (has_oneof_val()) {
    clear_oneof_val();
  }
}

void Field::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Field& Field::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Field_olama_2eproto.base);
  return *internal_default_instance();
}


void Field::clear_oneof_val() {
// @@protoc_insertion_point(one_of_clear_start:olama.Field)
  switch (oneof_val_case()) {
    case kValStr: {
      oneof_val_.val_str_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kValU64: {
      // No need to clear
      break;
    }
    case kValDouble: {
      // No need to clear
      break;
    }
    case kValStrArr: {
      delete oneof_val_.val_str_arr_;
      break;
    }
    case ONEOF_VAL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ONEOF_VAL_NOT_SET;
}


void Field::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.Field)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_oneof_val();
  _internal_metadata_.Clear();
}

const char* Field::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes val_str = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_val_str();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 val_u64 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _internal_set_val_u64(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double val_double = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          _internal_set_val_double(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // .olama.Field.StringArray val_str_arr = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_val_str_arr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Field::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.Field)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes val_str = 1;
  if (_internal_has_val_str()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_val_str(), target);
  }

  // uint64 val_u64 = 2;
  if (_internal_has_val_u64()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_val_u64(), target);
  }

  // double val_double = 3;
  if (_internal_has_val_double()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_val_double(), target);
  }

  // .olama.Field.StringArray val_str_arr = 4;
  if (_internal_has_val_str_arr()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::val_str_arr(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.Field)
  return target;
}

size_t Field::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.Field)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (oneof_val_case()) {
    // bytes val_str = 1;
    case kValStr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_val_str());
      break;
    }
    // uint64 val_u64 = 2;
    case kValU64: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_val_u64());
      break;
    }
    // double val_double = 3;
    case kValDouble: {
      total_size += 1 + 8;
      break;
    }
    // .olama.Field.StringArray val_str_arr = 4;
    case kValStrArr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *oneof_val_.val_str_arr_);
      break;
    }
    case ONEOF_VAL_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Field::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.Field)
  GOOGLE_DCHECK_NE(&from, this);
  const Field* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Field>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.Field)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.Field)
    MergeFrom(*source);
  }
}

void Field::MergeFrom(const Field& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.Field)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.oneof_val_case()) {
    case kValStr: {
      _internal_set_val_str(from._internal_val_str());
      break;
    }
    case kValU64: {
      _internal_set_val_u64(from._internal_val_u64());
      break;
    }
    case kValDouble: {
      _internal_set_val_double(from._internal_val_double());
      break;
    }
    case kValStrArr: {
      _internal_mutable_val_str_arr()->::olama::Field_StringArray::MergeFrom(from._internal_val_str_arr());
      break;
    }
    case ONEOF_VAL_NOT_SET: {
      break;
    }
  }
}

void Field::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.Field)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Field::CopyFrom(const Field& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.Field)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Field::IsInitialized() const {
  return true;
}

void Field::InternalSwap(Field* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(oneof_val_, other->oneof_val_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Field::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ShardState::InitAsDefaultInstance() {
}
class ShardState::_Internal {
 public:
};

ShardState::ShardState()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.ShardState)
}
ShardState::ShardState(const ShardState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&estimate_index_mem_size_, &from.estimate_index_mem_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&data_state_change_time_) -
    reinterpret_cast<char*>(&estimate_index_mem_size_)) + sizeof(data_state_change_time_));
  // @@protoc_insertion_point(copy_constructor:olama.ShardState)
}

void ShardState::SharedCtor() {
  ::memset(&estimate_index_mem_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_state_change_time_) -
      reinterpret_cast<char*>(&estimate_index_mem_size_)) + sizeof(data_state_change_time_));
}

ShardState::~ShardState() {
  // @@protoc_insertion_point(destructor:olama.ShardState)
  SharedDtor();
}

void ShardState::SharedDtor() {
}

void ShardState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShardState& ShardState::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ShardState_olama_2eproto.base);
  return *internal_default_instance();
}


void ShardState::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.ShardState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&estimate_index_mem_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_state_change_time_) -
      reinterpret_cast<char*>(&estimate_index_mem_size_)) + sizeof(data_state_change_time_));
  _internal_metadata_.Clear();
}

const char* ShardState::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .olama.ShardDataState data_state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_data_state(static_cast<::olama::ShardDataState>(val));
        } else goto handle_unusual;
        continue;
      // uint64 estimate_index_mem_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          estimate_index_mem_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool snapshoting = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          snapshoting_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 last_applied_index = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          last_applied_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 last_applied_term = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          last_applied_term_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 id_seed = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          id_seed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 added_items = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          added_items_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 data_state_change_time = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          data_state_change_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ShardState::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.ShardState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .olama.ShardDataState data_state = 1;
  if (this->data_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_data_state(), target);
  }

  // uint64 estimate_index_mem_size = 2;
  if (this->estimate_index_mem_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_estimate_index_mem_size(), target);
  }

  // bool snapshoting = 3;
  if (this->snapshoting() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_snapshoting(), target);
  }

  // int64 last_applied_index = 4;
  if (this->last_applied_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_last_applied_index(), target);
  }

  // int64 last_applied_term = 5;
  if (this->last_applied_term() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_last_applied_term(), target);
  }

  // int64 id_seed = 6;
  if (this->id_seed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_id_seed(), target);
  }

  // uint64 added_items = 7;
  if (this->added_items() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(7, this->_internal_added_items(), target);
  }

  // int64 data_state_change_time = 8;
  if (this->data_state_change_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(8, this->_internal_data_state_change_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.ShardState)
  return target;
}

size_t ShardState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.ShardState)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 estimate_index_mem_size = 2;
  if (this->estimate_index_mem_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_estimate_index_mem_size());
  }

  // .olama.ShardDataState data_state = 1;
  if (this->data_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_data_state());
  }

  // bool snapshoting = 3;
  if (this->snapshoting() != 0) {
    total_size += 1 + 1;
  }

  // int64 last_applied_index = 4;
  if (this->last_applied_index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_last_applied_index());
  }

  // int64 last_applied_term = 5;
  if (this->last_applied_term() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_last_applied_term());
  }

  // int64 id_seed = 6;
  if (this->id_seed() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_id_seed());
  }

  // uint64 added_items = 7;
  if (this->added_items() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_added_items());
  }

  // int64 data_state_change_time = 8;
  if (this->data_state_change_time() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_data_state_change_time());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShardState::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.ShardState)
  GOOGLE_DCHECK_NE(&from, this);
  const ShardState* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ShardState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.ShardState)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.ShardState)
    MergeFrom(*source);
  }
}

void ShardState::MergeFrom(const ShardState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.ShardState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.estimate_index_mem_size() != 0) {
    _internal_set_estimate_index_mem_size(from._internal_estimate_index_mem_size());
  }
  if (from.data_state() != 0) {
    _internal_set_data_state(from._internal_data_state());
  }
  if (from.snapshoting() != 0) {
    _internal_set_snapshoting(from._internal_snapshoting());
  }
  if (from.last_applied_index() != 0) {
    _internal_set_last_applied_index(from._internal_last_applied_index());
  }
  if (from.last_applied_term() != 0) {
    _internal_set_last_applied_term(from._internal_last_applied_term());
  }
  if (from.id_seed() != 0) {
    _internal_set_id_seed(from._internal_id_seed());
  }
  if (from.added_items() != 0) {
    _internal_set_added_items(from._internal_added_items());
  }
  if (from.data_state_change_time() != 0) {
    _internal_set_data_state_change_time(from._internal_data_state_change_time());
  }
}

void ShardState::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.ShardState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShardState::CopyFrom(const ShardState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.ShardState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShardState::IsInitialized() const {
  return true;
}

void ShardState::InternalSwap(ShardState* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(estimate_index_mem_size_, other->estimate_index_mem_size_);
  swap(data_state_, other->data_state_);
  swap(snapshoting_, other->snapshoting_);
  swap(last_applied_index_, other->last_applied_index_);
  swap(last_applied_term_, other->last_applied_term_);
  swap(id_seed_, other->id_seed_);
  swap(added_items_, other->added_items_);
  swap(data_state_change_time_, other->data_state_change_time_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShardState::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Shard::InitAsDefaultInstance() {
  ::olama::_Shard_default_instance_._instance.get_mutable()->state_ = const_cast< ::olama::ShardState*>(
      ::olama::ShardState::internal_default_instance());
}
class Shard::_Internal {
 public:
  static const ::olama::ShardState& state(const Shard* msg);
};

const ::olama::ShardState&
Shard::_Internal::state(const Shard* msg) {
  return *msg->state_;
}
Shard::Shard()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.Shard)
}
Shard::Shard(const Shard& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      nodes_(from.nodes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_collection().empty()) {
    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  from_node_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_from_node().empty()) {
    from_node_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.from_node_);
  }
  if (from._internal_has_state()) {
    state_ = new ::olama::ShardState(*from.state_);
  } else {
    state_ = nullptr;
  }
  ::memcpy(&shard_idx_, &from.shard_idx_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&shard_idx_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:olama.Shard)
}

void Shard::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Shard_olama_2eproto.base);
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  from_node_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&state_)) + sizeof(version_));
}

Shard::~Shard() {
  // @@protoc_insertion_point(destructor:olama.Shard)
  SharedDtor();
}

void Shard::SharedDtor() {
  collection_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  from_node_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete state_;
}

void Shard::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Shard& Shard::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Shard_olama_2eproto.base);
  return *internal_default_instance();
}


void Shard::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.Shard)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_.Clear();
  collection_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  from_node_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && state_ != nullptr) {
    delete state_;
  }
  state_ = nullptr;
  ::memset(&shard_idx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&shard_idx_)) + sizeof(version_));
  _internal_metadata_.Clear();
}

const char* Shard::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string collection = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_collection();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.Shard.collection"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 shard_idx = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          shard_idx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_leader = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          is_leader_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool following = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          following_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .olama.ShardState state = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_state(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string nodes = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_nodes();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.Shard.nodes"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // string from_node = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_from_node();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.Shard.from_node"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 version = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Shard::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.Shard)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string collection = 1;
  if (this->collection().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_collection().data(), static_cast<int>(this->_internal_collection().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.Shard.collection");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_collection(), target);
  }

  // int32 shard_idx = 2;
  if (this->shard_idx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_shard_idx(), target);
  }

  // bool is_leader = 3;
  if (this->is_leader() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_is_leader(), target);
  }

  // bool following = 4;
  if (this->following() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_following(), target);
  }

  // .olama.ShardState state = 5;
  if (this->has_state()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::state(this), target, stream);
  }

  // repeated string nodes = 6;
  for (int i = 0, n = this->_internal_nodes_size(); i < n; i++) {
    const auto& s = this->_internal_nodes(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.Shard.nodes");
    target = stream->WriteString(6, s, target);
  }

  // string from_node = 7;
  if (this->from_node().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_from_node().data(), static_cast<int>(this->_internal_from_node().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.Shard.from_node");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_from_node(), target);
  }

  // int64 version = 8;
  if (this->version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(8, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.Shard)
  return target;
}

size_t Shard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.Shard)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string nodes = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(nodes_.size());
  for (int i = 0, n = nodes_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      nodes_.Get(i));
  }

  // string collection = 1;
  if (this->collection().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_collection());
  }

  // string from_node = 7;
  if (this->from_node().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_from_node());
  }

  // .olama.ShardState state = 5;
  if (this->has_state()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *state_);
  }

  // int32 shard_idx = 2;
  if (this->shard_idx() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_shard_idx());
  }

  // bool is_leader = 3;
  if (this->is_leader() != 0) {
    total_size += 1 + 1;
  }

  // bool following = 4;
  if (this->following() != 0) {
    total_size += 1 + 1;
  }

  // int64 version = 8;
  if (this->version() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Shard::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.Shard)
  GOOGLE_DCHECK_NE(&from, this);
  const Shard* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Shard>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.Shard)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.Shard)
    MergeFrom(*source);
  }
}

void Shard::MergeFrom(const Shard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.Shard)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_.MergeFrom(from.nodes_);
  if (from.collection().size() > 0) {

    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  if (from.from_node().size() > 0) {

    from_node_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.from_node_);
  }
  if (from.has_state()) {
    _internal_mutable_state()->::olama::ShardState::MergeFrom(from._internal_state());
  }
  if (from.shard_idx() != 0) {
    _internal_set_shard_idx(from._internal_shard_idx());
  }
  if (from.is_leader() != 0) {
    _internal_set_is_leader(from._internal_is_leader());
  }
  if (from.following() != 0) {
    _internal_set_following(from._internal_following());
  }
  if (from.version() != 0) {
    _internal_set_version(from._internal_version());
  }
}

void Shard::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.Shard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Shard::CopyFrom(const Shard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.Shard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Shard::IsInitialized() const {
  return true;
}

void Shard::InternalSwap(Shard* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  nodes_.InternalSwap(&other->nodes_);
  collection_.Swap(&other->collection_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  from_node_.Swap(&other->from_node_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(state_, other->state_);
  swap(shard_idx_, other->shard_idx_);
  swap(is_leader_, other->is_leader_);
  swap(following_, other->following_);
  swap(version_, other->version_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Shard::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AliasItem::InitAsDefaultInstance() {
}
class AliasItem::_Internal {
 public:
};

AliasItem::AliasItem()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.AliasItem)
}
AliasItem::AliasItem(const AliasItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  alias_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_alias().empty()) {
    alias_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_collection().empty()) {
    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  // @@protoc_insertion_point(copy_constructor:olama.AliasItem)
}

void AliasItem::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AliasItem_olama_2eproto.base);
  alias_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AliasItem::~AliasItem() {
  // @@protoc_insertion_point(destructor:olama.AliasItem)
  SharedDtor();
}

void AliasItem::SharedDtor() {
  alias_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AliasItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AliasItem& AliasItem::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AliasItem_olama_2eproto.base);
  return *internal_default_instance();
}


void AliasItem::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.AliasItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  alias_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* AliasItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string alias = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_alias();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.AliasItem.alias"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string collection = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_collection();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.AliasItem.collection"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AliasItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.AliasItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string alias = 1;
  if (this->alias().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_alias().data(), static_cast<int>(this->_internal_alias().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.AliasItem.alias");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_alias(), target);
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_collection().data(), static_cast<int>(this->_internal_collection().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.AliasItem.collection");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_collection(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.AliasItem)
  return target;
}

size_t AliasItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.AliasItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string alias = 1;
  if (this->alias().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_alias());
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_collection());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AliasItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.AliasItem)
  GOOGLE_DCHECK_NE(&from, this);
  const AliasItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AliasItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.AliasItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.AliasItem)
    MergeFrom(*source);
  }
}

void AliasItem::MergeFrom(const AliasItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.AliasItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.alias().size() > 0) {

    alias_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
  if (from.collection().size() > 0) {

    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
}

void AliasItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.AliasItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AliasItem::CopyFrom(const AliasItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.AliasItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AliasItem::IsInitialized() const {
  return true;
}

void AliasItem::InternalSwap(AliasItem* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  alias_.Swap(&other->alias_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  collection_.Swap(&other->collection_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata AliasItem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DatabaseItem::InitAsDefaultInstance() {
}
class DatabaseItem::_Internal {
 public:
};

DatabaseItem::DatabaseItem()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.DatabaseItem)
}
DatabaseItem::DatabaseItem(const DatabaseItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&create_time_, &from.create_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&db_type_) -
    reinterpret_cast<char*>(&create_time_)) + sizeof(db_type_));
  // @@protoc_insertion_point(copy_constructor:olama.DatabaseItem)
}

void DatabaseItem::SharedCtor() {
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&db_type_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(db_type_));
}

DatabaseItem::~DatabaseItem() {
  // @@protoc_insertion_point(destructor:olama.DatabaseItem)
  SharedDtor();
}

void DatabaseItem::SharedDtor() {
}

void DatabaseItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DatabaseItem& DatabaseItem::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DatabaseItem_olama_2eproto.base);
  return *internal_default_instance();
}


void DatabaseItem::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.DatabaseItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&db_type_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(db_type_));
  _internal_metadata_.Clear();
}

const char* DatabaseItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 create_time = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          create_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .olama.DataType db_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_db_type(static_cast<::olama::DataType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DatabaseItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.DatabaseItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 create_time = 1;
  if (this->create_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_create_time(), target);
  }

  // .olama.DataType db_type = 2;
  if (this->db_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_db_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.DatabaseItem)
  return target;
}

size_t DatabaseItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.DatabaseItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 create_time = 1;
  if (this->create_time() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_create_time());
  }

  // .olama.DataType db_type = 2;
  if (this->db_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_db_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DatabaseItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.DatabaseItem)
  GOOGLE_DCHECK_NE(&from, this);
  const DatabaseItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DatabaseItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.DatabaseItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.DatabaseItem)
    MergeFrom(*source);
  }
}

void DatabaseItem::MergeFrom(const DatabaseItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.DatabaseItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.create_time() != 0) {
    _internal_set_create_time(from._internal_create_time());
  }
  if (from.db_type() != 0) {
    _internal_set_db_type(from._internal_db_type());
  }
}

void DatabaseItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.DatabaseItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DatabaseItem::CopyFrom(const DatabaseItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.DatabaseItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DatabaseItem::IsInitialized() const {
  return true;
}

void DatabaseItem::InternalSwap(DatabaseItem* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(create_time_, other->create_time_);
  swap(db_type_, other->db_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DatabaseItem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EmbeddingParams::InitAsDefaultInstance() {
}
class EmbeddingParams::_Internal {
 public:
};

EmbeddingParams::EmbeddingParams()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.EmbeddingParams)
}
EmbeddingParams::EmbeddingParams(const EmbeddingParams& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  field_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_field().empty()) {
    field_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.field_);
  }
  vector_field_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_vector_field().empty()) {
    vector_field_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.vector_field_);
  }
  model_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_model_name().empty()) {
    model_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.model_name_);
  }
  // @@protoc_insertion_point(copy_constructor:olama.EmbeddingParams)
}

void EmbeddingParams::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EmbeddingParams_olama_2eproto.base);
  field_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  vector_field_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

EmbeddingParams::~EmbeddingParams() {
  // @@protoc_insertion_point(destructor:olama.EmbeddingParams)
  SharedDtor();
}

void EmbeddingParams::SharedDtor() {
  field_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  vector_field_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void EmbeddingParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EmbeddingParams& EmbeddingParams::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EmbeddingParams_olama_2eproto.base);
  return *internal_default_instance();
}


void EmbeddingParams::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.EmbeddingParams)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  vector_field_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* EmbeddingParams::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string field = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_field();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.EmbeddingParams.field"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string vector_field = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_vector_field();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.EmbeddingParams.vector_field"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string model_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_model_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.EmbeddingParams.model_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EmbeddingParams::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.EmbeddingParams)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string field = 1;
  if (this->field().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_field().data(), static_cast<int>(this->_internal_field().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.EmbeddingParams.field");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_field(), target);
  }

  // string vector_field = 2;
  if (this->vector_field().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_vector_field().data(), static_cast<int>(this->_internal_vector_field().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.EmbeddingParams.vector_field");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_vector_field(), target);
  }

  // string model_name = 3;
  if (this->model_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.EmbeddingParams.model_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_model_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.EmbeddingParams)
  return target;
}

size_t EmbeddingParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.EmbeddingParams)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string field = 1;
  if (this->field().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_field());
  }

  // string vector_field = 2;
  if (this->vector_field().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_vector_field());
  }

  // string model_name = 3;
  if (this->model_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmbeddingParams::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.EmbeddingParams)
  GOOGLE_DCHECK_NE(&from, this);
  const EmbeddingParams* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EmbeddingParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.EmbeddingParams)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.EmbeddingParams)
    MergeFrom(*source);
  }
}

void EmbeddingParams::MergeFrom(const EmbeddingParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.EmbeddingParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.field().size() > 0) {

    field_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.field_);
  }
  if (from.vector_field().size() > 0) {

    vector_field_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.vector_field_);
  }
  if (from.model_name().size() > 0) {

    model_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.model_name_);
  }
}

void EmbeddingParams::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.EmbeddingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmbeddingParams::CopyFrom(const EmbeddingParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.EmbeddingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmbeddingParams::IsInitialized() const {
  return true;
}

void EmbeddingParams::InternalSwap(EmbeddingParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  field_.Swap(&other->field_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  vector_field_.Swap(&other->vector_field_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  model_name_.Swap(&other->model_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata EmbeddingParams::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

CollectionConf_FieldMetasEntry_DoNotUse::CollectionConf_FieldMetasEntry_DoNotUse() {}
CollectionConf_FieldMetasEntry_DoNotUse::CollectionConf_FieldMetasEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void CollectionConf_FieldMetasEntry_DoNotUse::MergeFrom(const CollectionConf_FieldMetasEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata CollectionConf_FieldMetasEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void CollectionConf_FieldMetasEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

CollectionConf_OptionsEntry_DoNotUse::CollectionConf_OptionsEntry_DoNotUse() {}
CollectionConf_OptionsEntry_DoNotUse::CollectionConf_OptionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void CollectionConf_OptionsEntry_DoNotUse::MergeFrom(const CollectionConf_OptionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata CollectionConf_OptionsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void CollectionConf_OptionsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void CollectionConf::InitAsDefaultInstance() {
  ::olama::_CollectionConf_default_instance_._instance.get_mutable()->embedding_params_ = const_cast< ::olama::EmbeddingParams*>(
      ::olama::EmbeddingParams::internal_default_instance());
  ::olama::_CollectionConf_default_instance_._instance.get_mutable()->ttlconfig_ = const_cast< ::olama::TTLConfig*>(
      ::olama::TTLConfig::internal_default_instance());
}
class CollectionConf::_Internal {
 public:
  static const ::olama::EmbeddingParams& embedding_params(const CollectionConf* msg);
  static const ::olama::TTLConfig& ttlconfig(const CollectionConf* msg);
};

const ::olama::EmbeddingParams&
CollectionConf::_Internal::embedding_params(const CollectionConf* msg) {
  return *msg->embedding_params_;
}
const ::olama::TTLConfig&
CollectionConf::_Internal::ttlconfig(const CollectionConf* msg) {
  return *msg->ttlconfig_;
}
CollectionConf::CollectionConf()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.CollectionConf)
}
CollectionConf::CollectionConf(const CollectionConf& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  field_metas_.MergeFrom(from.field_metas_);
  options_.MergeFrom(from.options_);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_database().empty()) {
    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_collection().empty()) {
    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  model_desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_model_desc().empty()) {
    model_desc_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.model_desc_);
  }
  if (from._internal_has_embedding_params()) {
    embedding_params_ = new ::olama::EmbeddingParams(*from.embedding_params_);
  } else {
    embedding_params_ = nullptr;
  }
  if (from._internal_has_ttlconfig()) {
    ttlconfig_ = new ::olama::TTLConfig(*from.ttlconfig_);
  } else {
    ttlconfig_ = nullptr;
  }
  ::memcpy(&number_of_shards_, &from.number_of_shards_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&number_of_shards_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:olama.CollectionConf)
}

void CollectionConf::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CollectionConf_olama_2eproto.base);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&embedding_params_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&embedding_params_)) + sizeof(version_));
}

CollectionConf::~CollectionConf() {
  // @@protoc_insertion_point(destructor:olama.CollectionConf)
  SharedDtor();
}

void CollectionConf::SharedDtor() {
  database_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_desc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete embedding_params_;
  if (this != internal_default_instance()) delete ttlconfig_;
}

void CollectionConf::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CollectionConf& CollectionConf::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CollectionConf_olama_2eproto.base);
  return *internal_default_instance();
}


void CollectionConf::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.CollectionConf)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field_metas_.Clear();
  options_.Clear();
  database_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_desc_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && embedding_params_ != nullptr) {
    delete embedding_params_;
  }
  embedding_params_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && ttlconfig_ != nullptr) {
    delete ttlconfig_;
  }
  ttlconfig_ = nullptr;
  ::memset(&number_of_shards_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&number_of_shards_)) + sizeof(version_));
  _internal_metadata_.Clear();
}

const char* CollectionConf::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string database = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_database();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.CollectionConf.database"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string collection = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_collection();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.CollectionConf.collection"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.CollectionConf.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 number_of_shards = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          number_of_shards_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 number_of_replicas = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          number_of_replicas_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 dimension = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          dimension_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .olama.IndexMetricType metric = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_metric(static_cast<::olama::IndexMetricType>(val));
        } else goto handle_unusual;
        continue;
      // uint32 nprobe = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          nprobe_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .olama.IndexEngineType engine = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_engine(static_cast<::olama::IndexEngineType>(val));
        } else goto handle_unusual;
        continue;
      // string model_desc = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_model_desc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.CollectionConf.model_desc"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .olama.FieldMeta> field_metas = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&field_metas_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<122>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, string> options = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&options_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<130>(ptr));
        } else goto handle_unusual;
        continue;
      // uint32 nlist = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          nlist_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .olama.EmbeddingParams embedding_params = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_embedding_params(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .olama.DataType data_type = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_data_type(static_cast<::olama::DataType>(val));
        } else goto handle_unusual;
        continue;
      // int64 version = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .olama.TTLConfig ttlConfig = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_ttlconfig(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CollectionConf::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.CollectionConf)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string database = 1;
  if (this->database().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_database().data(), static_cast<int>(this->_internal_database().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.CollectionConf.database");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_database(), target);
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_collection().data(), static_cast<int>(this->_internal_collection().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.CollectionConf.collection");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_collection(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.CollectionConf.description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // uint32 number_of_shards = 4;
  if (this->number_of_shards() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_number_of_shards(), target);
  }

  // uint32 number_of_replicas = 5;
  if (this->number_of_replicas() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_number_of_replicas(), target);
  }

  // uint32 dimension = 6;
  if (this->dimension() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_dimension(), target);
  }

  // .olama.IndexMetricType metric = 7;
  if (this->metric() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->_internal_metric(), target);
  }

  // uint32 nprobe = 8;
  if (this->nprobe() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_nprobe(), target);
  }

  // .olama.IndexEngineType engine = 11;
  if (this->engine() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      11, this->_internal_engine(), target);
  }

  // string model_desc = 12;
  if (this->model_desc().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_desc().data(), static_cast<int>(this->_internal_model_desc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.CollectionConf.model_desc");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_model_desc(), target);
  }

  // map<string, .olama.FieldMeta> field_metas = 15;
  if (!this->_internal_field_metas().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::olama::FieldMeta >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "olama.CollectionConf.FieldMetasEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_field_metas().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_field_metas().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::olama::FieldMeta >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::olama::FieldMeta >::const_iterator
          it = this->_internal_field_metas().begin();
          it != this->_internal_field_metas().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = CollectionConf_FieldMetasEntry_DoNotUse::Funcs::InternalSerialize(15, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::olama::FieldMeta >::const_iterator
          it = this->_internal_field_metas().begin();
          it != this->_internal_field_metas().end(); ++it) {
        target = CollectionConf_FieldMetasEntry_DoNotUse::Funcs::InternalSerialize(15, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, string> options = 16;
  if (!this->_internal_options().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "olama.CollectionConf.OptionsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "olama.CollectionConf.OptionsEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_options().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_options().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_options().begin();
          it != this->_internal_options().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = CollectionConf_OptionsEntry_DoNotUse::Funcs::InternalSerialize(16, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_options().begin();
          it != this->_internal_options().end(); ++it) {
        target = CollectionConf_OptionsEntry_DoNotUse::Funcs::InternalSerialize(16, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // uint32 nlist = 17;
  if (this->nlist() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(17, this->_internal_nlist(), target);
  }

  // .olama.EmbeddingParams embedding_params = 18;
  if (this->has_embedding_params()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        18, _Internal::embedding_params(this), target, stream);
  }

  // .olama.DataType data_type = 19;
  if (this->data_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      19, this->_internal_data_type(), target);
  }

  // int64 version = 20;
  if (this->version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(20, this->_internal_version(), target);
  }

  // .olama.TTLConfig ttlConfig = 21;
  if (this->has_ttlconfig()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        21, _Internal::ttlconfig(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.CollectionConf)
  return target;
}

size_t CollectionConf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.CollectionConf)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .olama.FieldMeta> field_metas = 15;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_field_metas_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::olama::FieldMeta >::const_iterator
      it = this->_internal_field_metas().begin();
      it != this->_internal_field_metas().end(); ++it) {
    total_size += CollectionConf_FieldMetasEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, string> options = 16;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_options_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_options().begin();
      it != this->_internal_options().end(); ++it) {
    total_size += CollectionConf_OptionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string database = 1;
  if (this->database().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_database());
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_collection());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string model_desc = 12;
  if (this->model_desc().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_desc());
  }

  // .olama.EmbeddingParams embedding_params = 18;
  if (this->has_embedding_params()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *embedding_params_);
  }

  // .olama.TTLConfig ttlConfig = 21;
  if (this->has_ttlconfig()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ttlconfig_);
  }

  // uint32 number_of_shards = 4;
  if (this->number_of_shards() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_number_of_shards());
  }

  // uint32 number_of_replicas = 5;
  if (this->number_of_replicas() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_number_of_replicas());
  }

  // uint32 dimension = 6;
  if (this->dimension() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_dimension());
  }

  // .olama.IndexMetricType metric = 7;
  if (this->metric() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_metric());
  }

  // uint32 nprobe = 8;
  if (this->nprobe() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_nprobe());
  }

  // .olama.IndexEngineType engine = 11;
  if (this->engine() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_engine());
  }

  // uint32 nlist = 17;
  if (this->nlist() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_nlist());
  }

  // .olama.DataType data_type = 19;
  if (this->data_type() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_data_type());
  }

  // int64 version = 20;
  if (this->version() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CollectionConf::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.CollectionConf)
  GOOGLE_DCHECK_NE(&from, this);
  const CollectionConf* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CollectionConf>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.CollectionConf)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.CollectionConf)
    MergeFrom(*source);
  }
}

void CollectionConf::MergeFrom(const CollectionConf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.CollectionConf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  field_metas_.MergeFrom(from.field_metas_);
  options_.MergeFrom(from.options_);
  if (from.database().size() > 0) {

    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  if (from.collection().size() > 0) {

    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.model_desc().size() > 0) {

    model_desc_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.model_desc_);
  }
  if (from.has_embedding_params()) {
    _internal_mutable_embedding_params()->::olama::EmbeddingParams::MergeFrom(from._internal_embedding_params());
  }
  if (from.has_ttlconfig()) {
    _internal_mutable_ttlconfig()->::olama::TTLConfig::MergeFrom(from._internal_ttlconfig());
  }
  if (from.number_of_shards() != 0) {
    _internal_set_number_of_shards(from._internal_number_of_shards());
  }
  if (from.number_of_replicas() != 0) {
    _internal_set_number_of_replicas(from._internal_number_of_replicas());
  }
  if (from.dimension() != 0) {
    _internal_set_dimension(from._internal_dimension());
  }
  if (from.metric() != 0) {
    _internal_set_metric(from._internal_metric());
  }
  if (from.nprobe() != 0) {
    _internal_set_nprobe(from._internal_nprobe());
  }
  if (from.engine() != 0) {
    _internal_set_engine(from._internal_engine());
  }
  if (from.nlist() != 0) {
    _internal_set_nlist(from._internal_nlist());
  }
  if (from.data_type() != 0) {
    _internal_set_data_type(from._internal_data_type());
  }
  if (from.version() != 0) {
    _internal_set_version(from._internal_version());
  }
}

void CollectionConf::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.CollectionConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CollectionConf::CopyFrom(const CollectionConf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.CollectionConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CollectionConf::IsInitialized() const {
  return true;
}

void CollectionConf::InternalSwap(CollectionConf* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  field_metas_.Swap(&other->field_metas_);
  options_.Swap(&other->options_);
  database_.Swap(&other->database_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  collection_.Swap(&other->collection_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  model_desc_.Swap(&other->model_desc_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(embedding_params_, other->embedding_params_);
  swap(ttlconfig_, other->ttlconfig_);
  swap(number_of_shards_, other->number_of_shards_);
  swap(number_of_replicas_, other->number_of_replicas_);
  swap(dimension_, other->dimension_);
  swap(metric_, other->metric_);
  swap(nprobe_, other->nprobe_);
  swap(engine_, other->engine_);
  swap(nlist_, other->nlist_);
  swap(data_type_, other->data_type_);
  swap(version_, other->version_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CollectionConf::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FieldMeta::InitAsDefaultInstance() {
}
class FieldMeta::_Internal {
 public:
};

FieldMeta::FieldMeta()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.FieldMeta)
}
FieldMeta::FieldMeta(const FieldMeta& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&field_type_, &from.field_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&field_element_type_) -
    reinterpret_cast<char*>(&field_type_)) + sizeof(field_element_type_));
  // @@protoc_insertion_point(copy_constructor:olama.FieldMeta)
}

void FieldMeta::SharedCtor() {
  ::memset(&field_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&field_element_type_) -
      reinterpret_cast<char*>(&field_type_)) + sizeof(field_element_type_));
}

FieldMeta::~FieldMeta() {
  // @@protoc_insertion_point(destructor:olama.FieldMeta)
  SharedDtor();
}

void FieldMeta::SharedDtor() {
}

void FieldMeta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FieldMeta& FieldMeta::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FieldMeta_olama_2eproto.base);
  return *internal_default_instance();
}


void FieldMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.FieldMeta)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&field_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&field_element_type_) -
      reinterpret_cast<char*>(&field_type_)) + sizeof(field_element_type_));
  _internal_metadata_.Clear();
}

const char* FieldMeta::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .olama.FieldType field_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_field_type(static_cast<::olama::FieldType>(val));
        } else goto handle_unusual;
        continue;
      // .olama.FieldElementType field_element_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_field_element_type(static_cast<::olama::FieldElementType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FieldMeta::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.FieldMeta)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .olama.FieldType field_type = 1;
  if (this->field_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_field_type(), target);
  }

  // .olama.FieldElementType field_element_type = 2;
  if (this->field_element_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_field_element_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.FieldMeta)
  return target;
}

size_t FieldMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.FieldMeta)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .olama.FieldType field_type = 1;
  if (this->field_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_field_type());
  }

  // .olama.FieldElementType field_element_type = 2;
  if (this->field_element_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_field_element_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FieldMeta::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.FieldMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const FieldMeta* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FieldMeta>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.FieldMeta)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.FieldMeta)
    MergeFrom(*source);
  }
}

void FieldMeta::MergeFrom(const FieldMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.FieldMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.field_type() != 0) {
    _internal_set_field_type(from._internal_field_type());
  }
  if (from.field_element_type() != 0) {
    _internal_set_field_element_type(from._internal_field_element_type());
  }
}

void FieldMeta::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.FieldMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FieldMeta::CopyFrom(const FieldMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.FieldMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FieldMeta::IsInitialized() const {
  return true;
}

void FieldMeta::InternalSwap(FieldMeta* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(field_type_, other->field_type_);
  swap(field_element_type_, other->field_element_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FieldMeta::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ShardConf::InitAsDefaultInstance() {
  ::olama::_ShardConf_default_instance_._instance.get_mutable()->conf_ = const_cast< ::olama::CollectionConf*>(
      ::olama::CollectionConf::internal_default_instance());
}
class ShardConf::_Internal {
 public:
  static const ::olama::CollectionConf& conf(const ShardConf* msg);
};

const ::olama::CollectionConf&
ShardConf::_Internal::conf(const ShardConf* msg) {
  return *msg->conf_;
}
ShardConf::ShardConf()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.ShardConf)
}
ShardConf::ShardConf(const ShardConf& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      nodes_(from.nodes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_collection().empty()) {
    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  if (from._internal_has_conf()) {
    conf_ = new ::olama::CollectionConf(*from.conf_);
  } else {
    conf_ = nullptr;
  }
  shard_idx_ = from.shard_idx_;
  // @@protoc_insertion_point(copy_constructor:olama.ShardConf)
}

void ShardConf::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ShardConf_olama_2eproto.base);
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&conf_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shard_idx_) -
      reinterpret_cast<char*>(&conf_)) + sizeof(shard_idx_));
}

ShardConf::~ShardConf() {
  // @@protoc_insertion_point(destructor:olama.ShardConf)
  SharedDtor();
}

void ShardConf::SharedDtor() {
  collection_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete conf_;
}

void ShardConf::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShardConf& ShardConf::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ShardConf_olama_2eproto.base);
  return *internal_default_instance();
}


void ShardConf::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.ShardConf)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_.Clear();
  collection_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && conf_ != nullptr) {
    delete conf_;
  }
  conf_ = nullptr;
  shard_idx_ = 0;
  _internal_metadata_.Clear();
}

const char* ShardConf::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string collection = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_collection();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.ShardConf.collection"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 shard_idx = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          shard_idx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .olama.CollectionConf conf = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_conf(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string nodes = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_nodes();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.ShardConf.nodes"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ShardConf::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.ShardConf)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string collection = 1;
  if (this->collection().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_collection().data(), static_cast<int>(this->_internal_collection().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.ShardConf.collection");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_collection(), target);
  }

  // int32 shard_idx = 2;
  if (this->shard_idx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_shard_idx(), target);
  }

  // .olama.CollectionConf conf = 3;
  if (this->has_conf()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::conf(this), target, stream);
  }

  // repeated string nodes = 4;
  for (int i = 0, n = this->_internal_nodes_size(); i < n; i++) {
    const auto& s = this->_internal_nodes(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.ShardConf.nodes");
    target = stream->WriteString(4, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.ShardConf)
  return target;
}

size_t ShardConf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.ShardConf)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string nodes = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(nodes_.size());
  for (int i = 0, n = nodes_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      nodes_.Get(i));
  }

  // string collection = 1;
  if (this->collection().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_collection());
  }

  // .olama.CollectionConf conf = 3;
  if (this->has_conf()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *conf_);
  }

  // int32 shard_idx = 2;
  if (this->shard_idx() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_shard_idx());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShardConf::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.ShardConf)
  GOOGLE_DCHECK_NE(&from, this);
  const ShardConf* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ShardConf>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.ShardConf)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.ShardConf)
    MergeFrom(*source);
  }
}

void ShardConf::MergeFrom(const ShardConf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.ShardConf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_.MergeFrom(from.nodes_);
  if (from.collection().size() > 0) {

    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  if (from.has_conf()) {
    _internal_mutable_conf()->::olama::CollectionConf::MergeFrom(from._internal_conf());
  }
  if (from.shard_idx() != 0) {
    _internal_set_shard_idx(from._internal_shard_idx());
  }
}

void ShardConf::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.ShardConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShardConf::CopyFrom(const ShardConf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.ShardConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShardConf::IsInitialized() const {
  return true;
}

void ShardConf::InternalSwap(ShardConf* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  nodes_.InternalSwap(&other->nodes_);
  collection_.Swap(&other->collection_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(conf_, other->conf_);
  swap(shard_idx_, other->shard_idx_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShardConf::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TTLConfig::InitAsDefaultInstance() {
}
class TTLConfig::_Internal {
 public:
};

TTLConfig::TTLConfig()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.TTLConfig)
}
TTLConfig::TTLConfig(const TTLConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timefield_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_timefield().empty()) {
    timefield_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.timefield_);
  }
  enable_ = from.enable_;
  // @@protoc_insertion_point(copy_constructor:olama.TTLConfig)
}

void TTLConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TTLConfig_olama_2eproto.base);
  timefield_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  enable_ = false;
}

TTLConfig::~TTLConfig() {
  // @@protoc_insertion_point(destructor:olama.TTLConfig)
  SharedDtor();
}

void TTLConfig::SharedDtor() {
  timefield_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TTLConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TTLConfig& TTLConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TTLConfig_olama_2eproto.base);
  return *internal_default_instance();
}


void TTLConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.TTLConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timefield_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  enable_ = false;
  _internal_metadata_.Clear();
}

const char* TTLConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool enable = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          enable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string timeField = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_timefield();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.TTLConfig.timeField"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TTLConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.TTLConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enable = 1;
  if (this->enable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_enable(), target);
  }

  // string timeField = 2;
  if (this->timefield().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_timefield().data(), static_cast<int>(this->_internal_timefield().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.TTLConfig.timeField");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_timefield(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.TTLConfig)
  return target;
}

size_t TTLConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.TTLConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string timeField = 2;
  if (this->timefield().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_timefield());
  }

  // bool enable = 1;
  if (this->enable() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TTLConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.TTLConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const TTLConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TTLConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.TTLConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.TTLConfig)
    MergeFrom(*source);
  }
}

void TTLConfig::MergeFrom(const TTLConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.TTLConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.timefield().size() > 0) {

    timefield_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.timefield_);
  }
  if (from.enable() != 0) {
    _internal_set_enable(from._internal_enable());
  }
}

void TTLConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.TTLConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTLConfig::CopyFrom(const TTLConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.TTLConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTLConfig::IsInitialized() const {
  return true;
}

void TTLConfig::InternalSwap(TTLConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  timefield_.Swap(&other->timefield_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(enable_, other->enable_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TTLConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ShardCollectionState::InitAsDefaultInstance() {
}
class ShardCollectionState::_Internal {
 public:
};

ShardCollectionState::ShardCollectionState()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.ShardCollectionState)
}
ShardCollectionState::ShardCollectionState(const ShardCollectionState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      node_peers_(from.node_peers_),
      shards_(from.shards_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  leader_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_leader().empty()) {
    leader_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.leader_);
  }
  ::memcpy(&allocate_start_ms_, &from.allocate_start_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&removing_) -
    reinterpret_cast<char*>(&allocate_start_ms_)) + sizeof(removing_));
  // @@protoc_insertion_point(copy_constructor:olama.ShardCollectionState)
}

void ShardCollectionState::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ShardCollectionState_olama_2eproto.base);
  leader_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&allocate_start_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&removing_) -
      reinterpret_cast<char*>(&allocate_start_ms_)) + sizeof(removing_));
}

ShardCollectionState::~ShardCollectionState() {
  // @@protoc_insertion_point(destructor:olama.ShardCollectionState)
  SharedDtor();
}

void ShardCollectionState::SharedDtor() {
  leader_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ShardCollectionState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShardCollectionState& ShardCollectionState::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ShardCollectionState_olama_2eproto.base);
  return *internal_default_instance();
}


void ShardCollectionState::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.ShardCollectionState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  node_peers_.Clear();
  shards_.Clear();
  leader_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&allocate_start_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&removing_) -
      reinterpret_cast<char*>(&allocate_start_ms_)) + sizeof(removing_));
  _internal_metadata_.Clear();
}

const char* ShardCollectionState::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 shard_idx = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          shard_idx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string leader = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_leader();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.ShardCollectionState.leader"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string node_peers = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_node_peers();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.ShardCollectionState.node_peers"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // int64 allocate_start_ms = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          allocate_start_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 allocate_stop_ms = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          allocate_stop_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 leader_ms = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          leader_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool allocating = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          allocating_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .olama.Shard shards = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_shards(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      // bool creating = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          creating_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool removing = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          removing_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ShardCollectionState::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.ShardCollectionState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 shard_idx = 1;
  if (this->shard_idx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_shard_idx(), target);
  }

  // string leader = 2;
  if (this->leader().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_leader().data(), static_cast<int>(this->_internal_leader().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.ShardCollectionState.leader");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_leader(), target);
  }

  // repeated string node_peers = 3;
  for (int i = 0, n = this->_internal_node_peers_size(); i < n; i++) {
    const auto& s = this->_internal_node_peers(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.ShardCollectionState.node_peers");
    target = stream->WriteString(3, s, target);
  }

  // int64 allocate_start_ms = 4;
  if (this->allocate_start_ms() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_allocate_start_ms(), target);
  }

  // int64 allocate_stop_ms = 5;
  if (this->allocate_stop_ms() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_allocate_stop_ms(), target);
  }

  // int64 leader_ms = 6;
  if (this->leader_ms() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_leader_ms(), target);
  }

  // bool allocating = 7;
  if (this->allocating() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_allocating(), target);
  }

  // repeated .olama.Shard shards = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_shards_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, this->_internal_shards(i), target, stream);
  }

  // bool creating = 9;
  if (this->creating() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(9, this->_internal_creating(), target);
  }

  // bool removing = 10;
  if (this->removing() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->_internal_removing(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.ShardCollectionState)
  return target;
}

size_t ShardCollectionState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.ShardCollectionState)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string node_peers = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(node_peers_.size());
  for (int i = 0, n = node_peers_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      node_peers_.Get(i));
  }

  // repeated .olama.Shard shards = 8;
  total_size += 1UL * this->_internal_shards_size();
  for (const auto& msg : this->shards_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string leader = 2;
  if (this->leader().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_leader());
  }

  // int64 allocate_start_ms = 4;
  if (this->allocate_start_ms() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_allocate_start_ms());
  }

  // int64 allocate_stop_ms = 5;
  if (this->allocate_stop_ms() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_allocate_stop_ms());
  }

  // int64 leader_ms = 6;
  if (this->leader_ms() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_leader_ms());
  }

  // int32 shard_idx = 1;
  if (this->shard_idx() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_shard_idx());
  }

  // bool allocating = 7;
  if (this->allocating() != 0) {
    total_size += 1 + 1;
  }

  // bool creating = 9;
  if (this->creating() != 0) {
    total_size += 1 + 1;
  }

  // bool removing = 10;
  if (this->removing() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShardCollectionState::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.ShardCollectionState)
  GOOGLE_DCHECK_NE(&from, this);
  const ShardCollectionState* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ShardCollectionState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.ShardCollectionState)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.ShardCollectionState)
    MergeFrom(*source);
  }
}

void ShardCollectionState::MergeFrom(const ShardCollectionState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.ShardCollectionState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  node_peers_.MergeFrom(from.node_peers_);
  shards_.MergeFrom(from.shards_);
  if (from.leader().size() > 0) {

    leader_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.leader_);
  }
  if (from.allocate_start_ms() != 0) {
    _internal_set_allocate_start_ms(from._internal_allocate_start_ms());
  }
  if (from.allocate_stop_ms() != 0) {
    _internal_set_allocate_stop_ms(from._internal_allocate_stop_ms());
  }
  if (from.leader_ms() != 0) {
    _internal_set_leader_ms(from._internal_leader_ms());
  }
  if (from.shard_idx() != 0) {
    _internal_set_shard_idx(from._internal_shard_idx());
  }
  if (from.allocating() != 0) {
    _internal_set_allocating(from._internal_allocating());
  }
  if (from.creating() != 0) {
    _internal_set_creating(from._internal_creating());
  }
  if (from.removing() != 0) {
    _internal_set_removing(from._internal_removing());
  }
}

void ShardCollectionState::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.ShardCollectionState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShardCollectionState::CopyFrom(const ShardCollectionState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.ShardCollectionState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShardCollectionState::IsInitialized() const {
  return true;
}

void ShardCollectionState::InternalSwap(ShardCollectionState* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  node_peers_.InternalSwap(&other->node_peers_);
  shards_.InternalSwap(&other->shards_);
  leader_.Swap(&other->leader_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(allocate_start_ms_, other->allocate_start_ms_);
  swap(allocate_stop_ms_, other->allocate_stop_ms_);
  swap(leader_ms_, other->leader_ms_);
  swap(shard_idx_, other->shard_idx_);
  swap(allocating_, other->allocating_);
  swap(creating_, other->creating_);
  swap(removing_, other->removing_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShardCollectionState::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CollectionState::InitAsDefaultInstance() {
  ::olama::_CollectionState_default_instance_._instance.get_mutable()->conf_ = const_cast< ::olama::CollectionConf*>(
      ::olama::CollectionConf::internal_default_instance());
  ::olama::_CollectionState_default_instance_._instance.get_mutable()->req_ = const_cast< ::olama::CreateCollectionRequest*>(
      ::olama::CreateCollectionRequest::internal_default_instance());
}
class CollectionState::_Internal {
 public:
  static const ::olama::CollectionConf& conf(const CollectionState* msg);
  static const ::olama::CreateCollectionRequest& req(const CollectionState* msg);
};

const ::olama::CollectionConf&
CollectionState::_Internal::conf(const CollectionState* msg) {
  return *msg->conf_;
}
const ::olama::CreateCollectionRequest&
CollectionState::_Internal::req(const CollectionState* msg) {
  return *msg->req_;
}
CollectionState::CollectionState()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.CollectionState)
}
CollectionState::CollectionState(const CollectionState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      shards_(from.shards_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_collection().empty()) {
    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  if (from._internal_has_conf()) {
    conf_ = new ::olama::CollectionConf(*from.conf_);
  } else {
    conf_ = nullptr;
  }
  if (from._internal_has_req()) {
    req_ = new ::olama::CreateCollectionRequest(*from.req_);
  } else {
    req_ = nullptr;
  }
  ::memcpy(&size_, &from.size_,
    static_cast<size_t>(reinterpret_cast<char*>(&index_state_) -
    reinterpret_cast<char*>(&size_)) + sizeof(index_state_));
  // @@protoc_insertion_point(copy_constructor:olama.CollectionState)
}

void CollectionState::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CollectionState_olama_2eproto.base);
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&conf_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_state_) -
      reinterpret_cast<char*>(&conf_)) + sizeof(index_state_));
}

CollectionState::~CollectionState() {
  // @@protoc_insertion_point(destructor:olama.CollectionState)
  SharedDtor();
}

void CollectionState::SharedDtor() {
  collection_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete conf_;
  if (this != internal_default_instance()) delete req_;
}

void CollectionState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CollectionState& CollectionState::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CollectionState_olama_2eproto.base);
  return *internal_default_instance();
}


void CollectionState::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.CollectionState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shards_.Clear();
  collection_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && conf_ != nullptr) {
    delete conf_;
  }
  conf_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_state_) -
      reinterpret_cast<char*>(&size_)) + sizeof(index_state_));
  _internal_metadata_.Clear();
}

const char* CollectionState::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string collection = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_collection();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.CollectionState.collection"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .olama.CollectionConf conf = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_conf(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .olama.ShardCollectionState shards = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_shards(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // uint64 size = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 create_time = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          create_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .olama.CreateCollectionRequest req = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_req(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .olama.ShardDataState index_state = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_index_state(static_cast<::olama::ShardDataState>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CollectionState::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.CollectionState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string collection = 1;
  if (this->collection().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_collection().data(), static_cast<int>(this->_internal_collection().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.CollectionState.collection");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_collection(), target);
  }

  // .olama.CollectionConf conf = 2;
  if (this->has_conf()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::conf(this), target, stream);
  }

  // repeated .olama.ShardCollectionState shards = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_shards_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_shards(i), target, stream);
  }

  // uint64 size = 4;
  if (this->size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_size(), target);
  }

  // int64 create_time = 5;
  if (this->create_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_create_time(), target);
  }

  // .olama.CreateCollectionRequest req = 6;
  if (this->has_req()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::req(this), target, stream);
  }

  // .olama.ShardDataState index_state = 8;
  if (this->index_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      8, this->_internal_index_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.CollectionState)
  return target;
}

size_t CollectionState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.CollectionState)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .olama.ShardCollectionState shards = 3;
  total_size += 1UL * this->_internal_shards_size();
  for (const auto& msg : this->shards_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string collection = 1;
  if (this->collection().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_collection());
  }

  // .olama.CollectionConf conf = 2;
  if (this->has_conf()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *conf_);
  }

  // .olama.CreateCollectionRequest req = 6;
  if (this->has_req()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *req_);
  }

  // uint64 size = 4;
  if (this->size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_size());
  }

  // int64 create_time = 5;
  if (this->create_time() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_create_time());
  }

  // .olama.ShardDataState index_state = 8;
  if (this->index_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_index_state());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CollectionState::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.CollectionState)
  GOOGLE_DCHECK_NE(&from, this);
  const CollectionState* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CollectionState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.CollectionState)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.CollectionState)
    MergeFrom(*source);
  }
}

void CollectionState::MergeFrom(const CollectionState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.CollectionState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shards_.MergeFrom(from.shards_);
  if (from.collection().size() > 0) {

    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  if (from.has_conf()) {
    _internal_mutable_conf()->::olama::CollectionConf::MergeFrom(from._internal_conf());
  }
  if (from.has_req()) {
    _internal_mutable_req()->::olama::CreateCollectionRequest::MergeFrom(from._internal_req());
  }
  if (from.size() != 0) {
    _internal_set_size(from._internal_size());
  }
  if (from.create_time() != 0) {
    _internal_set_create_time(from._internal_create_time());
  }
  if (from.index_state() != 0) {
    _internal_set_index_state(from._internal_index_state());
  }
}

void CollectionState::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.CollectionState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CollectionState::CopyFrom(const CollectionState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.CollectionState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CollectionState::IsInitialized() const {
  return true;
}

void CollectionState::InternalSwap(CollectionState* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  shards_.InternalSwap(&other->shards_);
  collection_.Swap(&other->collection_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(conf_, other->conf_);
  swap(req_, other->req_);
  swap(size_, other->size_);
  swap(create_time_, other->create_time_);
  swap(index_state_, other->index_state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CollectionState::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddAliasRequest::InitAsDefaultInstance() {
}
class AddAliasRequest::_Internal {
 public:
};

AddAliasRequest::AddAliasRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.AddAliasRequest)
}
AddAliasRequest::AddAliasRequest(const AddAliasRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_database().empty()) {
    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_collection().empty()) {
    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  alias_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_alias().empty()) {
    alias_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
  // @@protoc_insertion_point(copy_constructor:olama.AddAliasRequest)
}

void AddAliasRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddAliasRequest_olama_2eproto.base);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  alias_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddAliasRequest::~AddAliasRequest() {
  // @@protoc_insertion_point(destructor:olama.AddAliasRequest)
  SharedDtor();
}

void AddAliasRequest::SharedDtor() {
  database_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  alias_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddAliasRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddAliasRequest& AddAliasRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddAliasRequest_olama_2eproto.base);
  return *internal_default_instance();
}


void AddAliasRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.AddAliasRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  database_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  alias_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* AddAliasRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string database = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_database();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.AddAliasRequest.database"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string collection = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_collection();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.AddAliasRequest.collection"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string alias = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_alias();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.AddAliasRequest.alias"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddAliasRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.AddAliasRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string database = 1;
  if (this->database().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_database().data(), static_cast<int>(this->_internal_database().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.AddAliasRequest.database");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_database(), target);
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_collection().data(), static_cast<int>(this->_internal_collection().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.AddAliasRequest.collection");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_collection(), target);
  }

  // string alias = 3;
  if (this->alias().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_alias().data(), static_cast<int>(this->_internal_alias().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.AddAliasRequest.alias");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_alias(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.AddAliasRequest)
  return target;
}

size_t AddAliasRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.AddAliasRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string database = 1;
  if (this->database().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_database());
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_collection());
  }

  // string alias = 3;
  if (this->alias().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_alias());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddAliasRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.AddAliasRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddAliasRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddAliasRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.AddAliasRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.AddAliasRequest)
    MergeFrom(*source);
  }
}

void AddAliasRequest::MergeFrom(const AddAliasRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.AddAliasRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.database().size() > 0) {

    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  if (from.collection().size() > 0) {

    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  if (from.alias().size() > 0) {

    alias_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
}

void AddAliasRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.AddAliasRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddAliasRequest::CopyFrom(const AddAliasRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.AddAliasRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddAliasRequest::IsInitialized() const {
  return true;
}

void AddAliasRequest::InternalSwap(AddAliasRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  database_.Swap(&other->database_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  collection_.Swap(&other->collection_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  alias_.Swap(&other->alias_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddAliasRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveAliasRequest::InitAsDefaultInstance() {
}
class RemoveAliasRequest::_Internal {
 public:
};

RemoveAliasRequest::RemoveAliasRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.RemoveAliasRequest)
}
RemoveAliasRequest::RemoveAliasRequest(const RemoveAliasRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_database().empty()) {
    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  alias_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_alias().empty()) {
    alias_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
  // @@protoc_insertion_point(copy_constructor:olama.RemoveAliasRequest)
}

void RemoveAliasRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemoveAliasRequest_olama_2eproto.base);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  alias_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveAliasRequest::~RemoveAliasRequest() {
  // @@protoc_insertion_point(destructor:olama.RemoveAliasRequest)
  SharedDtor();
}

void RemoveAliasRequest::SharedDtor() {
  database_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  alias_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveAliasRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveAliasRequest& RemoveAliasRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveAliasRequest_olama_2eproto.base);
  return *internal_default_instance();
}


void RemoveAliasRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.RemoveAliasRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  database_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  alias_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* RemoveAliasRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string database = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_database();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.RemoveAliasRequest.database"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string alias = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_alias();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.RemoveAliasRequest.alias"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveAliasRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.RemoveAliasRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string database = 1;
  if (this->database().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_database().data(), static_cast<int>(this->_internal_database().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.RemoveAliasRequest.database");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_database(), target);
  }

  // string alias = 2;
  if (this->alias().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_alias().data(), static_cast<int>(this->_internal_alias().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.RemoveAliasRequest.alias");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_alias(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.RemoveAliasRequest)
  return target;
}

size_t RemoveAliasRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.RemoveAliasRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string database = 1;
  if (this->database().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_database());
  }

  // string alias = 2;
  if (this->alias().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_alias());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveAliasRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.RemoveAliasRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveAliasRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveAliasRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.RemoveAliasRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.RemoveAliasRequest)
    MergeFrom(*source);
  }
}

void RemoveAliasRequest::MergeFrom(const RemoveAliasRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.RemoveAliasRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.database().size() > 0) {

    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  if (from.alias().size() > 0) {

    alias_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
}

void RemoveAliasRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.RemoveAliasRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveAliasRequest::CopyFrom(const RemoveAliasRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.RemoveAliasRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveAliasRequest::IsInitialized() const {
  return true;
}

void RemoveAliasRequest::InternalSwap(RemoveAliasRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  database_.Swap(&other->database_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  alias_.Swap(&other->alias_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveAliasRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateAliasResponse::InitAsDefaultInstance() {
}
class UpdateAliasResponse::_Internal {
 public:
};

UpdateAliasResponse::UpdateAliasResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.UpdateAliasResponse)
}
UpdateAliasResponse::UpdateAliasResponse(const UpdateAliasResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  redirect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_redirect().empty()) {
    redirect_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  ::memcpy(&affectedcount_, &from.affectedcount_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&affectedcount_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:olama.UpdateAliasResponse)
}

void UpdateAliasResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateAliasResponse_olama_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&affectedcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&affectedcount_)) + sizeof(code_));
}

UpdateAliasResponse::~UpdateAliasResponse() {
  // @@protoc_insertion_point(destructor:olama.UpdateAliasResponse)
  SharedDtor();
}

void UpdateAliasResponse::SharedDtor() {
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdateAliasResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateAliasResponse& UpdateAliasResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateAliasResponse_olama_2eproto.base);
  return *internal_default_instance();
}


void UpdateAliasResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.UpdateAliasResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&affectedcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&affectedcount_)) + sizeof(code_));
  _internal_metadata_.Clear();
}

const char* UpdateAliasResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.UpdateAliasResponse.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string redirect = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_redirect();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.UpdateAliasResponse.redirect"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 affectedCount = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          affectedcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateAliasResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.UpdateAliasResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.UpdateAliasResponse.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  // string redirect = 3;
  if (this->redirect().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_redirect().data(), static_cast<int>(this->_internal_redirect().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.UpdateAliasResponse.redirect");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_redirect(), target);
  }

  // uint64 affectedCount = 4;
  if (this->affectedcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_affectedcount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.UpdateAliasResponse)
  return target;
}

size_t UpdateAliasResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.UpdateAliasResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // string redirect = 3;
  if (this->redirect().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_redirect());
  }

  // uint64 affectedCount = 4;
  if (this->affectedcount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_affectedcount());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateAliasResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.UpdateAliasResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateAliasResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateAliasResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.UpdateAliasResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.UpdateAliasResponse)
    MergeFrom(*source);
  }
}

void UpdateAliasResponse::MergeFrom(const UpdateAliasResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.UpdateAliasResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.redirect().size() > 0) {

    redirect_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  if (from.affectedcount() != 0) {
    _internal_set_affectedcount(from._internal_affectedcount());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void UpdateAliasResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.UpdateAliasResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateAliasResponse::CopyFrom(const UpdateAliasResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.UpdateAliasResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateAliasResponse::IsInitialized() const {
  return true;
}

void UpdateAliasResponse::InternalSwap(UpdateAliasResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  redirect_.Swap(&other->redirect_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(affectedcount_, other->affectedcount_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateAliasResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAliasRequest::InitAsDefaultInstance() {
}
class GetAliasRequest::_Internal {
 public:
};

GetAliasRequest::GetAliasRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.GetAliasRequest)
}
GetAliasRequest::GetAliasRequest(const GetAliasRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_database().empty()) {
    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  alias_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_alias().empty()) {
    alias_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
  // @@protoc_insertion_point(copy_constructor:olama.GetAliasRequest)
}

void GetAliasRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAliasRequest_olama_2eproto.base);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  alias_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetAliasRequest::~GetAliasRequest() {
  // @@protoc_insertion_point(destructor:olama.GetAliasRequest)
  SharedDtor();
}

void GetAliasRequest::SharedDtor() {
  database_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  alias_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetAliasRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAliasRequest& GetAliasRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAliasRequest_olama_2eproto.base);
  return *internal_default_instance();
}


void GetAliasRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.GetAliasRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  database_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  alias_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* GetAliasRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string database = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_database();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.GetAliasRequest.database"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string alias = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_alias();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.GetAliasRequest.alias"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAliasRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.GetAliasRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string database = 1;
  if (this->database().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_database().data(), static_cast<int>(this->_internal_database().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.GetAliasRequest.database");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_database(), target);
  }

  // string alias = 2;
  if (this->alias().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_alias().data(), static_cast<int>(this->_internal_alias().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.GetAliasRequest.alias");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_alias(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.GetAliasRequest)
  return target;
}

size_t GetAliasRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.GetAliasRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string database = 1;
  if (this->database().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_database());
  }

  // string alias = 2;
  if (this->alias().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_alias());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAliasRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.GetAliasRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAliasRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAliasRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.GetAliasRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.GetAliasRequest)
    MergeFrom(*source);
  }
}

void GetAliasRequest::MergeFrom(const GetAliasRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.GetAliasRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.database().size() > 0) {

    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  if (from.alias().size() > 0) {

    alias_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
}

void GetAliasRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.GetAliasRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAliasRequest::CopyFrom(const GetAliasRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.GetAliasRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAliasRequest::IsInitialized() const {
  return true;
}

void GetAliasRequest::InternalSwap(GetAliasRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  database_.Swap(&other->database_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  alias_.Swap(&other->alias_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAliasRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAliasResponse::InitAsDefaultInstance() {
}
class GetAliasResponse::_Internal {
 public:
};

GetAliasResponse::GetAliasResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.GetAliasResponse)
}
GetAliasResponse::GetAliasResponse(const GetAliasResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      aliases_(from.aliases_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  redirect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_redirect().empty()) {
    redirect_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:olama.GetAliasResponse)
}

void GetAliasResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAliasResponse_olama_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

GetAliasResponse::~GetAliasResponse() {
  // @@protoc_insertion_point(destructor:olama.GetAliasResponse)
  SharedDtor();
}

void GetAliasResponse::SharedDtor() {
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetAliasResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAliasResponse& GetAliasResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAliasResponse_olama_2eproto.base);
  return *internal_default_instance();
}


void GetAliasResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.GetAliasResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  aliases_.Clear();
  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

const char* GetAliasResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.GetAliasResponse.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string redirect = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_redirect();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.GetAliasResponse.redirect"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .olama.AliasItem aliases = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_aliases(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAliasResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.GetAliasResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.GetAliasResponse.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  // string redirect = 3;
  if (this->redirect().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_redirect().data(), static_cast<int>(this->_internal_redirect().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.GetAliasResponse.redirect");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_redirect(), target);
  }

  // repeated .olama.AliasItem aliases = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_aliases_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_aliases(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.GetAliasResponse)
  return target;
}

size_t GetAliasResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.GetAliasResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .olama.AliasItem aliases = 4;
  total_size += 1UL * this->_internal_aliases_size();
  for (const auto& msg : this->aliases_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // string redirect = 3;
  if (this->redirect().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_redirect());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAliasResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.GetAliasResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAliasResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAliasResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.GetAliasResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.GetAliasResponse)
    MergeFrom(*source);
  }
}

void GetAliasResponse::MergeFrom(const GetAliasResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.GetAliasResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  aliases_.MergeFrom(from.aliases_);
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.redirect().size() > 0) {

    redirect_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void GetAliasResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.GetAliasResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAliasResponse::CopyFrom(const GetAliasResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.GetAliasResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAliasResponse::IsInitialized() const {
  return true;
}

void GetAliasResponse::InternalSwap(GetAliasResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  aliases_.InternalSwap(&other->aliases_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  redirect_.Swap(&other->redirect_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAliasResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DescribeCollectionRequest::InitAsDefaultInstance() {
}
class DescribeCollectionRequest::_Internal {
 public:
};

DescribeCollectionRequest::DescribeCollectionRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.DescribeCollectionRequest)
}
DescribeCollectionRequest::DescribeCollectionRequest(const DescribeCollectionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_database().empty()) {
    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_collection().empty()) {
    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  transfer_ = from.transfer_;
  // @@protoc_insertion_point(copy_constructor:olama.DescribeCollectionRequest)
}

void DescribeCollectionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DescribeCollectionRequest_olama_2eproto.base);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  transfer_ = false;
}

DescribeCollectionRequest::~DescribeCollectionRequest() {
  // @@protoc_insertion_point(destructor:olama.DescribeCollectionRequest)
  SharedDtor();
}

void DescribeCollectionRequest::SharedDtor() {
  database_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DescribeCollectionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DescribeCollectionRequest& DescribeCollectionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DescribeCollectionRequest_olama_2eproto.base);
  return *internal_default_instance();
}


void DescribeCollectionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.DescribeCollectionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  database_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  transfer_ = false;
  _internal_metadata_.Clear();
}

const char* DescribeCollectionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string database = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_database();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.DescribeCollectionRequest.database"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string collection = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_collection();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.DescribeCollectionRequest.collection"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool transfer = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          transfer_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DescribeCollectionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.DescribeCollectionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string database = 1;
  if (this->database().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_database().data(), static_cast<int>(this->_internal_database().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.DescribeCollectionRequest.database");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_database(), target);
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_collection().data(), static_cast<int>(this->_internal_collection().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.DescribeCollectionRequest.collection");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_collection(), target);
  }

  // bool transfer = 3;
  if (this->transfer() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_transfer(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.DescribeCollectionRequest)
  return target;
}

size_t DescribeCollectionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.DescribeCollectionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string database = 1;
  if (this->database().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_database());
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_collection());
  }

  // bool transfer = 3;
  if (this->transfer() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DescribeCollectionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.DescribeCollectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DescribeCollectionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DescribeCollectionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.DescribeCollectionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.DescribeCollectionRequest)
    MergeFrom(*source);
  }
}

void DescribeCollectionRequest::MergeFrom(const DescribeCollectionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.DescribeCollectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.database().size() > 0) {

    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  if (from.collection().size() > 0) {

    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  if (from.transfer() != 0) {
    _internal_set_transfer(from._internal_transfer());
  }
}

void DescribeCollectionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.DescribeCollectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DescribeCollectionRequest::CopyFrom(const DescribeCollectionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.DescribeCollectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DescribeCollectionRequest::IsInitialized() const {
  return true;
}

void DescribeCollectionRequest::InternalSwap(DescribeCollectionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  database_.Swap(&other->database_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  collection_.Swap(&other->collection_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(transfer_, other->transfer_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DescribeCollectionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DescribeCollectionResponse::InitAsDefaultInstance() {
  ::olama::_DescribeCollectionResponse_default_instance_._instance.get_mutable()->collection_ = const_cast< ::olama::CreateCollectionRequest*>(
      ::olama::CreateCollectionRequest::internal_default_instance());
  ::olama::_DescribeCollectionResponse_default_instance_._instance.get_mutable()->state_ = const_cast< ::olama::CollectionState*>(
      ::olama::CollectionState::internal_default_instance());
}
class DescribeCollectionResponse::_Internal {
 public:
  static const ::olama::CreateCollectionRequest& collection(const DescribeCollectionResponse* msg);
  static const ::olama::CollectionState& state(const DescribeCollectionResponse* msg);
};

const ::olama::CreateCollectionRequest&
DescribeCollectionResponse::_Internal::collection(const DescribeCollectionResponse* msg) {
  return *msg->collection_;
}
const ::olama::CollectionState&
DescribeCollectionResponse::_Internal::state(const DescribeCollectionResponse* msg) {
  return *msg->state_;
}
DescribeCollectionResponse::DescribeCollectionResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.DescribeCollectionResponse)
}
DescribeCollectionResponse::DescribeCollectionResponse(const DescribeCollectionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  redirect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_redirect().empty()) {
    redirect_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  if (from._internal_has_collection()) {
    collection_ = new ::olama::CreateCollectionRequest(*from.collection_);
  } else {
    collection_ = nullptr;
  }
  if (from._internal_has_state()) {
    state_ = new ::olama::CollectionState(*from.state_);
  } else {
    state_ = nullptr;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:olama.DescribeCollectionResponse)
}

void DescribeCollectionResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DescribeCollectionResponse_olama_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&collection_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&collection_)) + sizeof(code_));
}

DescribeCollectionResponse::~DescribeCollectionResponse() {
  // @@protoc_insertion_point(destructor:olama.DescribeCollectionResponse)
  SharedDtor();
}

void DescribeCollectionResponse::SharedDtor() {
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete collection_;
  if (this != internal_default_instance()) delete state_;
}

void DescribeCollectionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DescribeCollectionResponse& DescribeCollectionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DescribeCollectionResponse_olama_2eproto.base);
  return *internal_default_instance();
}


void DescribeCollectionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.DescribeCollectionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && collection_ != nullptr) {
    delete collection_;
  }
  collection_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && state_ != nullptr) {
    delete state_;
  }
  state_ = nullptr;
  code_ = 0;
  _internal_metadata_.Clear();
}

const char* DescribeCollectionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.DescribeCollectionResponse.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string redirect = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_redirect();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.DescribeCollectionResponse.redirect"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .olama.CreateCollectionRequest collection = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_collection(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .olama.CollectionState state = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_state(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DescribeCollectionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.DescribeCollectionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.DescribeCollectionResponse.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  // string redirect = 3;
  if (this->redirect().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_redirect().data(), static_cast<int>(this->_internal_redirect().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.DescribeCollectionResponse.redirect");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_redirect(), target);
  }

  // .olama.CreateCollectionRequest collection = 4;
  if (this->has_collection()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::collection(this), target, stream);
  }

  // .olama.CollectionState state = 5;
  if (this->has_state()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::state(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.DescribeCollectionResponse)
  return target;
}

size_t DescribeCollectionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.DescribeCollectionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // string redirect = 3;
  if (this->redirect().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_redirect());
  }

  // .olama.CreateCollectionRequest collection = 4;
  if (this->has_collection()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *collection_);
  }

  // .olama.CollectionState state = 5;
  if (this->has_state()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *state_);
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DescribeCollectionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.DescribeCollectionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DescribeCollectionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DescribeCollectionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.DescribeCollectionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.DescribeCollectionResponse)
    MergeFrom(*source);
  }
}

void DescribeCollectionResponse::MergeFrom(const DescribeCollectionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.DescribeCollectionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.redirect().size() > 0) {

    redirect_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  if (from.has_collection()) {
    _internal_mutable_collection()->::olama::CreateCollectionRequest::MergeFrom(from._internal_collection());
  }
  if (from.has_state()) {
    _internal_mutable_state()->::olama::CollectionState::MergeFrom(from._internal_state());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void DescribeCollectionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.DescribeCollectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DescribeCollectionResponse::CopyFrom(const DescribeCollectionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.DescribeCollectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DescribeCollectionResponse::IsInitialized() const {
  return true;
}

void DescribeCollectionResponse::InternalSwap(DescribeCollectionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  redirect_.Swap(&other->redirect_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(collection_, other->collection_);
  swap(state_, other->state_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DescribeCollectionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListCollectionsRequest::InitAsDefaultInstance() {
}
class ListCollectionsRequest::_Internal {
 public:
};

ListCollectionsRequest::ListCollectionsRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.ListCollectionsRequest)
}
ListCollectionsRequest::ListCollectionsRequest(const ListCollectionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_database().empty()) {
    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  transfer_ = from.transfer_;
  // @@protoc_insertion_point(copy_constructor:olama.ListCollectionsRequest)
}

void ListCollectionsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListCollectionsRequest_olama_2eproto.base);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  transfer_ = false;
}

ListCollectionsRequest::~ListCollectionsRequest() {
  // @@protoc_insertion_point(destructor:olama.ListCollectionsRequest)
  SharedDtor();
}

void ListCollectionsRequest::SharedDtor() {
  database_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListCollectionsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListCollectionsRequest& ListCollectionsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListCollectionsRequest_olama_2eproto.base);
  return *internal_default_instance();
}


void ListCollectionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.ListCollectionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  database_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  transfer_ = false;
  _internal_metadata_.Clear();
}

const char* ListCollectionsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string database = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_database();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.ListCollectionsRequest.database"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool transfer = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          transfer_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListCollectionsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.ListCollectionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string database = 1;
  if (this->database().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_database().data(), static_cast<int>(this->_internal_database().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.ListCollectionsRequest.database");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_database(), target);
  }

  // bool transfer = 2;
  if (this->transfer() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_transfer(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.ListCollectionsRequest)
  return target;
}

size_t ListCollectionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.ListCollectionsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string database = 1;
  if (this->database().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_database());
  }

  // bool transfer = 2;
  if (this->transfer() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListCollectionsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.ListCollectionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListCollectionsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListCollectionsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.ListCollectionsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.ListCollectionsRequest)
    MergeFrom(*source);
  }
}

void ListCollectionsRequest::MergeFrom(const ListCollectionsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.ListCollectionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.database().size() > 0) {

    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  if (from.transfer() != 0) {
    _internal_set_transfer(from._internal_transfer());
  }
}

void ListCollectionsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.ListCollectionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListCollectionsRequest::CopyFrom(const ListCollectionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.ListCollectionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListCollectionsRequest::IsInitialized() const {
  return true;
}

void ListCollectionsRequest::InternalSwap(ListCollectionsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  database_.Swap(&other->database_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(transfer_, other->transfer_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListCollectionsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListCollectionsResponse::InitAsDefaultInstance() {
}
class ListCollectionsResponse::_Internal {
 public:
};

ListCollectionsResponse::ListCollectionsResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.ListCollectionsResponse)
}
ListCollectionsResponse::ListCollectionsResponse(const ListCollectionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      collections_(from.collections_),
      states_(from.states_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  redirect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_redirect().empty()) {
    redirect_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:olama.ListCollectionsResponse)
}

void ListCollectionsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListCollectionsResponse_olama_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

ListCollectionsResponse::~ListCollectionsResponse() {
  // @@protoc_insertion_point(destructor:olama.ListCollectionsResponse)
  SharedDtor();
}

void ListCollectionsResponse::SharedDtor() {
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListCollectionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListCollectionsResponse& ListCollectionsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListCollectionsResponse_olama_2eproto.base);
  return *internal_default_instance();
}


void ListCollectionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.ListCollectionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  collections_.Clear();
  states_.Clear();
  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

const char* ListCollectionsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.ListCollectionsResponse.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string redirect = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_redirect();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.ListCollectionsResponse.redirect"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .olama.CreateCollectionRequest collections = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_collections(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .olama.CollectionState states = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_states(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListCollectionsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.ListCollectionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.ListCollectionsResponse.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  // string redirect = 3;
  if (this->redirect().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_redirect().data(), static_cast<int>(this->_internal_redirect().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.ListCollectionsResponse.redirect");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_redirect(), target);
  }

  // repeated .olama.CreateCollectionRequest collections = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_collections_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_collections(i), target, stream);
  }

  // repeated .olama.CollectionState states = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_states_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_states(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.ListCollectionsResponse)
  return target;
}

size_t ListCollectionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.ListCollectionsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .olama.CreateCollectionRequest collections = 4;
  total_size += 1UL * this->_internal_collections_size();
  for (const auto& msg : this->collections_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .olama.CollectionState states = 5;
  total_size += 1UL * this->_internal_states_size();
  for (const auto& msg : this->states_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // string redirect = 3;
  if (this->redirect().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_redirect());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListCollectionsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.ListCollectionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListCollectionsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListCollectionsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.ListCollectionsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.ListCollectionsResponse)
    MergeFrom(*source);
  }
}

void ListCollectionsResponse::MergeFrom(const ListCollectionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.ListCollectionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  collections_.MergeFrom(from.collections_);
  states_.MergeFrom(from.states_);
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.redirect().size() > 0) {

    redirect_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void ListCollectionsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.ListCollectionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListCollectionsResponse::CopyFrom(const ListCollectionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.ListCollectionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListCollectionsResponse::IsInitialized() const {
  return true;
}

void ListCollectionsResponse::InternalSwap(ListCollectionsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  collections_.InternalSwap(&other->collections_);
  states_.InternalSwap(&other->states_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  redirect_.Swap(&other->redirect_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListCollectionsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IndexParams::InitAsDefaultInstance() {
}
class IndexParams::_Internal {
 public:
};

IndexParams::IndexParams()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.IndexParams)
}
IndexParams::IndexParams(const IndexParams& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&m_, &from.m_,
    static_cast<size_t>(reinterpret_cast<char*>(&nlist_) -
    reinterpret_cast<char*>(&m_)) + sizeof(nlist_));
  // @@protoc_insertion_point(copy_constructor:olama.IndexParams)
}

void IndexParams::SharedCtor() {
  ::memset(&m_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nlist_) -
      reinterpret_cast<char*>(&m_)) + sizeof(nlist_));
}

IndexParams::~IndexParams() {
  // @@protoc_insertion_point(destructor:olama.IndexParams)
  SharedDtor();
}

void IndexParams::SharedDtor() {
}

void IndexParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IndexParams& IndexParams::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IndexParams_olama_2eproto.base);
  return *internal_default_instance();
}


void IndexParams::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.IndexParams)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&m_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nlist_) -
      reinterpret_cast<char*>(&m_)) + sizeof(nlist_));
  _internal_metadata_.Clear();
}

const char* IndexParams::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 M = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          m_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 efConstruction = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          efconstruction_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 nprobe = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          nprobe_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 nlist = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          nlist_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IndexParams::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.IndexParams)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 M = 1;
  if (this->m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_m(), target);
  }

  // uint32 efConstruction = 2;
  if (this->efconstruction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_efconstruction(), target);
  }

  // uint32 nprobe = 3;
  if (this->nprobe() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_nprobe(), target);
  }

  // uint32 nlist = 4;
  if (this->nlist() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_nlist(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.IndexParams)
  return target;
}

size_t IndexParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.IndexParams)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 M = 1;
  if (this->m() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_m());
  }

  // uint32 efConstruction = 2;
  if (this->efconstruction() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_efconstruction());
  }

  // uint32 nprobe = 3;
  if (this->nprobe() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_nprobe());
  }

  // uint32 nlist = 4;
  if (this->nlist() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_nlist());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IndexParams::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.IndexParams)
  GOOGLE_DCHECK_NE(&from, this);
  const IndexParams* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IndexParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.IndexParams)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.IndexParams)
    MergeFrom(*source);
  }
}

void IndexParams::MergeFrom(const IndexParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.IndexParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.m() != 0) {
    _internal_set_m(from._internal_m());
  }
  if (from.efconstruction() != 0) {
    _internal_set_efconstruction(from._internal_efconstruction());
  }
  if (from.nprobe() != 0) {
    _internal_set_nprobe(from._internal_nprobe());
  }
  if (from.nlist() != 0) {
    _internal_set_nlist(from._internal_nlist());
  }
}

void IndexParams::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.IndexParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IndexParams::CopyFrom(const IndexParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.IndexParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IndexParams::IsInitialized() const {
  return true;
}

void IndexParams::InternalSwap(IndexParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(m_, other->m_);
  swap(efconstruction_, other->efconstruction_);
  swap(nprobe_, other->nprobe_);
  swap(nlist_, other->nlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IndexParams::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IndexColumn::InitAsDefaultInstance() {
  ::olama::_IndexColumn_default_instance_._instance.get_mutable()->params_ = const_cast< ::olama::IndexParams*>(
      ::olama::IndexParams::internal_default_instance());
}
class IndexColumn::_Internal {
 public:
  static const ::olama::IndexParams& params(const IndexColumn* msg);
};

const ::olama::IndexParams&
IndexColumn::_Internal::params(const IndexColumn* msg) {
  return *msg->params_;
}
IndexColumn::IndexColumn()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.IndexColumn)
}
IndexColumn::IndexColumn(const IndexColumn& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fieldname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_fieldname().empty()) {
    fieldname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.fieldname_);
  }
  fieldtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_fieldtype().empty()) {
    fieldtype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.fieldtype_);
  }
  indextype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_indextype().empty()) {
    indextype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.indextype_);
  }
  metrictype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_metrictype().empty()) {
    metrictype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.metrictype_);
  }
  fieldelementtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_fieldelementtype().empty()) {
    fieldelementtype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.fieldelementtype_);
  }
  if (from._internal_has_params()) {
    params_ = new ::olama::IndexParams(*from.params_);
  } else {
    params_ = nullptr;
  }
  dimension_ = from.dimension_;
  // @@protoc_insertion_point(copy_constructor:olama.IndexColumn)
}

void IndexColumn::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IndexColumn_olama_2eproto.base);
  fieldname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fieldtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  indextype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  metrictype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fieldelementtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&params_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dimension_) -
      reinterpret_cast<char*>(&params_)) + sizeof(dimension_));
}

IndexColumn::~IndexColumn() {
  // @@protoc_insertion_point(destructor:olama.IndexColumn)
  SharedDtor();
}

void IndexColumn::SharedDtor() {
  fieldname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fieldtype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  indextype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  metrictype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fieldelementtype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete params_;
}

void IndexColumn::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IndexColumn& IndexColumn::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IndexColumn_olama_2eproto.base);
  return *internal_default_instance();
}


void IndexColumn::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.IndexColumn)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fieldname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fieldtype_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  indextype_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  metrictype_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fieldelementtype_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && params_ != nullptr) {
    delete params_;
  }
  params_ = nullptr;
  dimension_ = 0u;
  _internal_metadata_.Clear();
}

const char* IndexColumn::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string fieldName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_fieldname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.IndexColumn.fieldName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string fieldType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_fieldtype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.IndexColumn.fieldType"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string indexType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_indextype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.IndexColumn.indexType"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 dimension = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          dimension_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string metricType = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_metrictype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.IndexColumn.metricType"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .olama.IndexParams params = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string fieldElementType = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_fieldelementtype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.IndexColumn.fieldElementType"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IndexColumn::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.IndexColumn)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fieldName = 1;
  if (this->fieldname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_fieldname().data(), static_cast<int>(this->_internal_fieldname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.IndexColumn.fieldName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_fieldname(), target);
  }

  // string fieldType = 2;
  if (this->fieldtype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_fieldtype().data(), static_cast<int>(this->_internal_fieldtype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.IndexColumn.fieldType");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_fieldtype(), target);
  }

  // string indexType = 3;
  if (this->indextype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_indextype().data(), static_cast<int>(this->_internal_indextype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.IndexColumn.indexType");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_indextype(), target);
  }

  // uint32 dimension = 4;
  if (this->dimension() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_dimension(), target);
  }

  // string metricType = 5;
  if (this->metrictype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_metrictype().data(), static_cast<int>(this->_internal_metrictype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.IndexColumn.metricType");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_metrictype(), target);
  }

  // .olama.IndexParams params = 8;
  if (this->has_params()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::params(this), target, stream);
  }

  // string fieldElementType = 9;
  if (this->fieldelementtype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_fieldelementtype().data(), static_cast<int>(this->_internal_fieldelementtype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.IndexColumn.fieldElementType");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_fieldelementtype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.IndexColumn)
  return target;
}

size_t IndexColumn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.IndexColumn)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string fieldName = 1;
  if (this->fieldname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_fieldname());
  }

  // string fieldType = 2;
  if (this->fieldtype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_fieldtype());
  }

  // string indexType = 3;
  if (this->indextype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_indextype());
  }

  // string metricType = 5;
  if (this->metrictype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_metrictype());
  }

  // string fieldElementType = 9;
  if (this->fieldelementtype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_fieldelementtype());
  }

  // .olama.IndexParams params = 8;
  if (this->has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *params_);
  }

  // uint32 dimension = 4;
  if (this->dimension() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_dimension());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IndexColumn::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.IndexColumn)
  GOOGLE_DCHECK_NE(&from, this);
  const IndexColumn* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IndexColumn>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.IndexColumn)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.IndexColumn)
    MergeFrom(*source);
  }
}

void IndexColumn::MergeFrom(const IndexColumn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.IndexColumn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fieldname().size() > 0) {

    fieldname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.fieldname_);
  }
  if (from.fieldtype().size() > 0) {

    fieldtype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.fieldtype_);
  }
  if (from.indextype().size() > 0) {

    indextype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.indextype_);
  }
  if (from.metrictype().size() > 0) {

    metrictype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.metrictype_);
  }
  if (from.fieldelementtype().size() > 0) {

    fieldelementtype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.fieldelementtype_);
  }
  if (from.has_params()) {
    _internal_mutable_params()->::olama::IndexParams::MergeFrom(from._internal_params());
  }
  if (from.dimension() != 0) {
    _internal_set_dimension(from._internal_dimension());
  }
}

void IndexColumn::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.IndexColumn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IndexColumn::CopyFrom(const IndexColumn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.IndexColumn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IndexColumn::IsInitialized() const {
  return true;
}

void IndexColumn::InternalSwap(IndexColumn* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  fieldname_.Swap(&other->fieldname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  fieldtype_.Swap(&other->fieldtype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  indextype_.Swap(&other->indextype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  metrictype_.Swap(&other->metrictype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  fieldelementtype_.Swap(&other->fieldelementtype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(params_, other->params_);
  swap(dimension_, other->dimension_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IndexColumn::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IndexStatus::InitAsDefaultInstance() {
}
class IndexStatus::_Internal {
 public:
};

IndexStatus::IndexStatus()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.IndexStatus)
}
IndexStatus::IndexStatus(const IndexStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  progress_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_progress().empty()) {
    progress_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.progress_);
  }
  starttime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_starttime().empty()) {
    starttime_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.starttime_);
  }
  // @@protoc_insertion_point(copy_constructor:olama.IndexStatus)
}

void IndexStatus::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IndexStatus_olama_2eproto.base);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  progress_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  starttime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

IndexStatus::~IndexStatus() {
  // @@protoc_insertion_point(destructor:olama.IndexStatus)
  SharedDtor();
}

void IndexStatus::SharedDtor() {
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  progress_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  starttime_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void IndexStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IndexStatus& IndexStatus::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IndexStatus_olama_2eproto.base);
  return *internal_default_instance();
}


void IndexStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.IndexStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  progress_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  starttime_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* IndexStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.IndexStatus.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string progress = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_progress();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.IndexStatus.progress"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string startTime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_starttime();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.IndexStatus.startTime"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IndexStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.IndexStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string status = 1;
  if (this->status().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.IndexStatus.status");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_status(), target);
  }

  // string progress = 2;
  if (this->progress().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_progress().data(), static_cast<int>(this->_internal_progress().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.IndexStatus.progress");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_progress(), target);
  }

  // string startTime = 3;
  if (this->starttime().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_starttime().data(), static_cast<int>(this->_internal_starttime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.IndexStatus.startTime");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_starttime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.IndexStatus)
  return target;
}

size_t IndexStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.IndexStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 1;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // string progress = 2;
  if (this->progress().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_progress());
  }

  // string startTime = 3;
  if (this->starttime().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_starttime());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IndexStatus::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.IndexStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const IndexStatus* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IndexStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.IndexStatus)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.IndexStatus)
    MergeFrom(*source);
  }
}

void IndexStatus::MergeFrom(const IndexStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.IndexStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  if (from.progress().size() > 0) {

    progress_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.progress_);
  }
  if (from.starttime().size() > 0) {

    starttime_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.starttime_);
  }
}

void IndexStatus::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.IndexStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IndexStatus::CopyFrom(const IndexStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.IndexStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IndexStatus::IsInitialized() const {
  return true;
}

void IndexStatus::InternalSwap(IndexStatus* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  status_.Swap(&other->status_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  progress_.Swap(&other->progress_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  starttime_.Swap(&other->starttime_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata IndexStatus::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

CreateCollectionRequest_IndexesEntry_DoNotUse::CreateCollectionRequest_IndexesEntry_DoNotUse() {}
CreateCollectionRequest_IndexesEntry_DoNotUse::CreateCollectionRequest_IndexesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void CreateCollectionRequest_IndexesEntry_DoNotUse::MergeFrom(const CreateCollectionRequest_IndexesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata CreateCollectionRequest_IndexesEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void CreateCollectionRequest_IndexesEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void CreateCollectionRequest::InitAsDefaultInstance() {
  ::olama::_CreateCollectionRequest_default_instance_._instance.get_mutable()->indexstatus_ = const_cast< ::olama::IndexStatus*>(
      ::olama::IndexStatus::internal_default_instance());
  ::olama::_CreateCollectionRequest_default_instance_._instance.get_mutable()->embeddingparams_ = const_cast< ::olama::EmbeddingParams*>(
      ::olama::EmbeddingParams::internal_default_instance());
  ::olama::_CreateCollectionRequest_default_instance_._instance.get_mutable()->ttlconfig_ = const_cast< ::olama::TTLConfig*>(
      ::olama::TTLConfig::internal_default_instance());
}
class CreateCollectionRequest::_Internal {
 public:
  static const ::olama::IndexStatus& indexstatus(const CreateCollectionRequest* msg);
  static const ::olama::EmbeddingParams& embeddingparams(const CreateCollectionRequest* msg);
  static const ::olama::TTLConfig& ttlconfig(const CreateCollectionRequest* msg);
};

const ::olama::IndexStatus&
CreateCollectionRequest::_Internal::indexstatus(const CreateCollectionRequest* msg) {
  return *msg->indexstatus_;
}
const ::olama::EmbeddingParams&
CreateCollectionRequest::_Internal::embeddingparams(const CreateCollectionRequest* msg) {
  return *msg->embeddingparams_;
}
const ::olama::TTLConfig&
CreateCollectionRequest::_Internal::ttlconfig(const CreateCollectionRequest* msg) {
  return *msg->ttlconfig_;
}
CreateCollectionRequest::CreateCollectionRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.CreateCollectionRequest)
}
CreateCollectionRequest::CreateCollectionRequest(const CreateCollectionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      alias_list_(from.alias_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  indexes_.MergeFrom(from.indexes_);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_database().empty()) {
    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_collection().empty()) {
    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  createtime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_createtime().empty()) {
    createtime_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.createtime_);
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from._internal_has_indexstatus()) {
    indexstatus_ = new ::olama::IndexStatus(*from.indexstatus_);
  } else {
    indexstatus_ = nullptr;
  }
  if (from._internal_has_embeddingparams()) {
    embeddingparams_ = new ::olama::EmbeddingParams(*from.embeddingparams_);
  } else {
    embeddingparams_ = nullptr;
  }
  if (from._internal_has_ttlconfig()) {
    ttlconfig_ = new ::olama::TTLConfig(*from.ttlconfig_);
  } else {
    ttlconfig_ = nullptr;
  }
  ::memcpy(&replicanum_, &from.replicanum_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&replicanum_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:olama.CreateCollectionRequest)
}

void CreateCollectionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateCollectionRequest_olama_2eproto.base);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  createtime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&indexstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&indexstatus_)) + sizeof(version_));
}

CreateCollectionRequest::~CreateCollectionRequest() {
  // @@protoc_insertion_point(destructor:olama.CreateCollectionRequest)
  SharedDtor();
}

void CreateCollectionRequest::SharedDtor() {
  database_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  createtime_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete indexstatus_;
  if (this != internal_default_instance()) delete embeddingparams_;
  if (this != internal_default_instance()) delete ttlconfig_;
}

void CreateCollectionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateCollectionRequest& CreateCollectionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateCollectionRequest_olama_2eproto.base);
  return *internal_default_instance();
}


void CreateCollectionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.CreateCollectionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  indexes_.Clear();
  alias_list_.Clear();
  database_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  createtime_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && indexstatus_ != nullptr) {
    delete indexstatus_;
  }
  indexstatus_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && embeddingparams_ != nullptr) {
    delete embeddingparams_;
  }
  embeddingparams_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && ttlconfig_ != nullptr) {
    delete ttlconfig_;
  }
  ttlconfig_ = nullptr;
  ::memset(&replicanum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&replicanum_)) + sizeof(version_));
  _internal_metadata_.Clear();
}

const char* CreateCollectionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string database = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_database();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.CreateCollectionRequest.database"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string collection = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_collection();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.CreateCollectionRequest.collection"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 replicaNum = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          replicanum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 shardNum = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          shardnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 size = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string createTime = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_createtime();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.CreateCollectionRequest.createTime"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.CreateCollectionRequest.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .olama.IndexColumn> indexes = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&indexes_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      // .olama.IndexStatus indexStatus = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_indexstatus(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string alias_list = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_alias_list();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.CreateCollectionRequest.alias_list"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else goto handle_unusual;
        continue;
      // .olama.EmbeddingParams embeddingParams = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_embeddingparams(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 version = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .olama.TTLConfig ttlConfig = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_ttlconfig(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateCollectionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.CreateCollectionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string database = 1;
  if (this->database().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_database().data(), static_cast<int>(this->_internal_database().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.CreateCollectionRequest.database");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_database(), target);
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_collection().data(), static_cast<int>(this->_internal_collection().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.CreateCollectionRequest.collection");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_collection(), target);
  }

  // uint32 replicaNum = 3;
  if (this->replicanum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_replicanum(), target);
  }

  // uint32 shardNum = 4;
  if (this->shardnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_shardnum(), target);
  }

  // uint64 size = 5;
  if (this->size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_size(), target);
  }

  // string createTime = 6;
  if (this->createtime().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_createtime().data(), static_cast<int>(this->_internal_createtime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.CreateCollectionRequest.createTime");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_createtime(), target);
  }

  // string description = 7;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.CreateCollectionRequest.description");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_description(), target);
  }

  // map<string, .olama.IndexColumn> indexes = 8;
  if (!this->_internal_indexes().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::olama::IndexColumn >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "olama.CreateCollectionRequest.IndexesEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_indexes().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_indexes().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::olama::IndexColumn >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::olama::IndexColumn >::const_iterator
          it = this->_internal_indexes().begin();
          it != this->_internal_indexes().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = CreateCollectionRequest_IndexesEntry_DoNotUse::Funcs::InternalSerialize(8, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::olama::IndexColumn >::const_iterator
          it = this->_internal_indexes().begin();
          it != this->_internal_indexes().end(); ++it) {
        target = CreateCollectionRequest_IndexesEntry_DoNotUse::Funcs::InternalSerialize(8, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .olama.IndexStatus indexStatus = 9;
  if (this->has_indexstatus()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::indexstatus(this), target, stream);
  }

  // repeated string alias_list = 10;
  for (int i = 0, n = this->_internal_alias_list_size(); i < n; i++) {
    const auto& s = this->_internal_alias_list(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.CreateCollectionRequest.alias_list");
    target = stream->WriteString(10, s, target);
  }

  // .olama.EmbeddingParams embeddingParams = 11;
  if (this->has_embeddingparams()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::embeddingparams(this), target, stream);
  }

  // int64 version = 12;
  if (this->version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(12, this->_internal_version(), target);
  }

  // .olama.TTLConfig ttlConfig = 13;
  if (this->has_ttlconfig()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        13, _Internal::ttlconfig(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.CreateCollectionRequest)
  return target;
}

size_t CreateCollectionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.CreateCollectionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .olama.IndexColumn> indexes = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_indexes_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::olama::IndexColumn >::const_iterator
      it = this->_internal_indexes().begin();
      it != this->_internal_indexes().end(); ++it) {
    total_size += CreateCollectionRequest_IndexesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // repeated string alias_list = 10;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(alias_list_.size());
  for (int i = 0, n = alias_list_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      alias_list_.Get(i));
  }

  // string database = 1;
  if (this->database().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_database());
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_collection());
  }

  // string createTime = 6;
  if (this->createtime().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_createtime());
  }

  // string description = 7;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // .olama.IndexStatus indexStatus = 9;
  if (this->has_indexstatus()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *indexstatus_);
  }

  // .olama.EmbeddingParams embeddingParams = 11;
  if (this->has_embeddingparams()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *embeddingparams_);
  }

  // .olama.TTLConfig ttlConfig = 13;
  if (this->has_ttlconfig()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ttlconfig_);
  }

  // uint32 replicaNum = 3;
  if (this->replicanum() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_replicanum());
  }

  // uint32 shardNum = 4;
  if (this->shardnum() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_shardnum());
  }

  // uint64 size = 5;
  if (this->size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_size());
  }

  // int64 version = 12;
  if (this->version() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateCollectionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.CreateCollectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateCollectionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateCollectionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.CreateCollectionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.CreateCollectionRequest)
    MergeFrom(*source);
  }
}

void CreateCollectionRequest::MergeFrom(const CreateCollectionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.CreateCollectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  indexes_.MergeFrom(from.indexes_);
  alias_list_.MergeFrom(from.alias_list_);
  if (from.database().size() > 0) {

    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  if (from.collection().size() > 0) {

    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  if (from.createtime().size() > 0) {

    createtime_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.createtime_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.has_indexstatus()) {
    _internal_mutable_indexstatus()->::olama::IndexStatus::MergeFrom(from._internal_indexstatus());
  }
  if (from.has_embeddingparams()) {
    _internal_mutable_embeddingparams()->::olama::EmbeddingParams::MergeFrom(from._internal_embeddingparams());
  }
  if (from.has_ttlconfig()) {
    _internal_mutable_ttlconfig()->::olama::TTLConfig::MergeFrom(from._internal_ttlconfig());
  }
  if (from.replicanum() != 0) {
    _internal_set_replicanum(from._internal_replicanum());
  }
  if (from.shardnum() != 0) {
    _internal_set_shardnum(from._internal_shardnum());
  }
  if (from.size() != 0) {
    _internal_set_size(from._internal_size());
  }
  if (from.version() != 0) {
    _internal_set_version(from._internal_version());
  }
}

void CreateCollectionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.CreateCollectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateCollectionRequest::CopyFrom(const CreateCollectionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.CreateCollectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateCollectionRequest::IsInitialized() const {
  return true;
}

void CreateCollectionRequest::InternalSwap(CreateCollectionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  indexes_.Swap(&other->indexes_);
  alias_list_.InternalSwap(&other->alias_list_);
  database_.Swap(&other->database_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  collection_.Swap(&other->collection_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  createtime_.Swap(&other->createtime_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(indexstatus_, other->indexstatus_);
  swap(embeddingparams_, other->embeddingparams_);
  swap(ttlconfig_, other->ttlconfig_);
  swap(replicanum_, other->replicanum_);
  swap(shardnum_, other->shardnum_);
  swap(size_, other->size_);
  swap(version_, other->version_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateCollectionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateCollectionResponse::InitAsDefaultInstance() {
}
class CreateCollectionResponse::_Internal {
 public:
};

CreateCollectionResponse::CreateCollectionResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.CreateCollectionResponse)
}
CreateCollectionResponse::CreateCollectionResponse(const CreateCollectionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  redirect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_redirect().empty()) {
    redirect_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  ::memcpy(&affectedcount_, &from.affectedcount_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&affectedcount_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:olama.CreateCollectionResponse)
}

void CreateCollectionResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateCollectionResponse_olama_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&affectedcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&affectedcount_)) + sizeof(code_));
}

CreateCollectionResponse::~CreateCollectionResponse() {
  // @@protoc_insertion_point(destructor:olama.CreateCollectionResponse)
  SharedDtor();
}

void CreateCollectionResponse::SharedDtor() {
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateCollectionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateCollectionResponse& CreateCollectionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateCollectionResponse_olama_2eproto.base);
  return *internal_default_instance();
}


void CreateCollectionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.CreateCollectionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&affectedcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&affectedcount_)) + sizeof(code_));
  _internal_metadata_.Clear();
}

const char* CreateCollectionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.CreateCollectionResponse.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string redirect = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_redirect();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.CreateCollectionResponse.redirect"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 affectedCount = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          affectedcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateCollectionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.CreateCollectionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.CreateCollectionResponse.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  // string redirect = 3;
  if (this->redirect().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_redirect().data(), static_cast<int>(this->_internal_redirect().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.CreateCollectionResponse.redirect");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_redirect(), target);
  }

  // uint64 affectedCount = 4;
  if (this->affectedcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_affectedcount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.CreateCollectionResponse)
  return target;
}

size_t CreateCollectionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.CreateCollectionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // string redirect = 3;
  if (this->redirect().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_redirect());
  }

  // uint64 affectedCount = 4;
  if (this->affectedcount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_affectedcount());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateCollectionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.CreateCollectionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateCollectionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateCollectionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.CreateCollectionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.CreateCollectionResponse)
    MergeFrom(*source);
  }
}

void CreateCollectionResponse::MergeFrom(const CreateCollectionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.CreateCollectionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.redirect().size() > 0) {

    redirect_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  if (from.affectedcount() != 0) {
    _internal_set_affectedcount(from._internal_affectedcount());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void CreateCollectionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.CreateCollectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateCollectionResponse::CopyFrom(const CreateCollectionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.CreateCollectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateCollectionResponse::IsInitialized() const {
  return true;
}

void CreateCollectionResponse::InternalSwap(CreateCollectionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  redirect_.Swap(&other->redirect_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(affectedcount_, other->affectedcount_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateCollectionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DropCollectionRequest::InitAsDefaultInstance() {
}
class DropCollectionRequest::_Internal {
 public:
};

DropCollectionRequest::DropCollectionRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.DropCollectionRequest)
}
DropCollectionRequest::DropCollectionRequest(const DropCollectionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_database().empty()) {
    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_collection().empty()) {
    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  ::memcpy(&force_, &from.force_,
    static_cast<size_t>(reinterpret_cast<char*>(&without_alias_) -
    reinterpret_cast<char*>(&force_)) + sizeof(without_alias_));
  // @@protoc_insertion_point(copy_constructor:olama.DropCollectionRequest)
}

void DropCollectionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DropCollectionRequest_olama_2eproto.base);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&force_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&without_alias_) -
      reinterpret_cast<char*>(&force_)) + sizeof(without_alias_));
}

DropCollectionRequest::~DropCollectionRequest() {
  // @@protoc_insertion_point(destructor:olama.DropCollectionRequest)
  SharedDtor();
}

void DropCollectionRequest::SharedDtor() {
  database_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DropCollectionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DropCollectionRequest& DropCollectionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DropCollectionRequest_olama_2eproto.base);
  return *internal_default_instance();
}


void DropCollectionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.DropCollectionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  database_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&force_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&without_alias_) -
      reinterpret_cast<char*>(&force_)) + sizeof(without_alias_));
  _internal_metadata_.Clear();
}

const char* DropCollectionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string database = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_database();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.DropCollectionRequest.database"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string collection = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_collection();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.DropCollectionRequest.collection"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool force = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          force_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool without_alias = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          without_alias_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DropCollectionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.DropCollectionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string database = 1;
  if (this->database().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_database().data(), static_cast<int>(this->_internal_database().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.DropCollectionRequest.database");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_database(), target);
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_collection().data(), static_cast<int>(this->_internal_collection().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.DropCollectionRequest.collection");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_collection(), target);
  }

  // bool force = 3;
  if (this->force() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_force(), target);
  }

  // bool without_alias = 4;
  if (this->without_alias() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_without_alias(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.DropCollectionRequest)
  return target;
}

size_t DropCollectionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.DropCollectionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string database = 1;
  if (this->database().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_database());
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_collection());
  }

  // bool force = 3;
  if (this->force() != 0) {
    total_size += 1 + 1;
  }

  // bool without_alias = 4;
  if (this->without_alias() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DropCollectionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.DropCollectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DropCollectionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DropCollectionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.DropCollectionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.DropCollectionRequest)
    MergeFrom(*source);
  }
}

void DropCollectionRequest::MergeFrom(const DropCollectionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.DropCollectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.database().size() > 0) {

    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  if (from.collection().size() > 0) {

    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  if (from.force() != 0) {
    _internal_set_force(from._internal_force());
  }
  if (from.without_alias() != 0) {
    _internal_set_without_alias(from._internal_without_alias());
  }
}

void DropCollectionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.DropCollectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DropCollectionRequest::CopyFrom(const DropCollectionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.DropCollectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropCollectionRequest::IsInitialized() const {
  return true;
}

void DropCollectionRequest::InternalSwap(DropCollectionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  database_.Swap(&other->database_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  collection_.Swap(&other->collection_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(force_, other->force_);
  swap(without_alias_, other->without_alias_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DropCollectionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DropCollectionResponse::InitAsDefaultInstance() {
}
class DropCollectionResponse::_Internal {
 public:
};

DropCollectionResponse::DropCollectionResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.DropCollectionResponse)
}
DropCollectionResponse::DropCollectionResponse(const DropCollectionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  redirect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_redirect().empty()) {
    redirect_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  ::memcpy(&affectedcount_, &from.affectedcount_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&affectedcount_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:olama.DropCollectionResponse)
}

void DropCollectionResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DropCollectionResponse_olama_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&affectedcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&affectedcount_)) + sizeof(code_));
}

DropCollectionResponse::~DropCollectionResponse() {
  // @@protoc_insertion_point(destructor:olama.DropCollectionResponse)
  SharedDtor();
}

void DropCollectionResponse::SharedDtor() {
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DropCollectionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DropCollectionResponse& DropCollectionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DropCollectionResponse_olama_2eproto.base);
  return *internal_default_instance();
}


void DropCollectionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.DropCollectionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&affectedcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&affectedcount_)) + sizeof(code_));
  _internal_metadata_.Clear();
}

const char* DropCollectionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.DropCollectionResponse.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string redirect = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_redirect();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.DropCollectionResponse.redirect"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 affectedCount = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          affectedcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DropCollectionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.DropCollectionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.DropCollectionResponse.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  // string redirect = 3;
  if (this->redirect().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_redirect().data(), static_cast<int>(this->_internal_redirect().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.DropCollectionResponse.redirect");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_redirect(), target);
  }

  // uint64 affectedCount = 4;
  if (this->affectedcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_affectedcount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.DropCollectionResponse)
  return target;
}

size_t DropCollectionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.DropCollectionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // string redirect = 3;
  if (this->redirect().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_redirect());
  }

  // uint64 affectedCount = 4;
  if (this->affectedcount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_affectedcount());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DropCollectionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.DropCollectionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DropCollectionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DropCollectionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.DropCollectionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.DropCollectionResponse)
    MergeFrom(*source);
  }
}

void DropCollectionResponse::MergeFrom(const DropCollectionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.DropCollectionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.redirect().size() > 0) {

    redirect_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  if (from.affectedcount() != 0) {
    _internal_set_affectedcount(from._internal_affectedcount());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void DropCollectionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.DropCollectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DropCollectionResponse::CopyFrom(const DropCollectionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.DropCollectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropCollectionResponse::IsInitialized() const {
  return true;
}

void DropCollectionResponse::InternalSwap(DropCollectionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  redirect_.Swap(&other->redirect_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(affectedcount_, other->affectedcount_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DropCollectionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TruncateCollectionRequest::InitAsDefaultInstance() {
}
class TruncateCollectionRequest::_Internal {
 public:
};

TruncateCollectionRequest::TruncateCollectionRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.TruncateCollectionRequest)
}
TruncateCollectionRequest::TruncateCollectionRequest(const TruncateCollectionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_database().empty()) {
    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_collection().empty()) {
    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  only_truncate_ann_index_ = from.only_truncate_ann_index_;
  // @@protoc_insertion_point(copy_constructor:olama.TruncateCollectionRequest)
}

void TruncateCollectionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TruncateCollectionRequest_olama_2eproto.base);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  only_truncate_ann_index_ = false;
}

TruncateCollectionRequest::~TruncateCollectionRequest() {
  // @@protoc_insertion_point(destructor:olama.TruncateCollectionRequest)
  SharedDtor();
}

void TruncateCollectionRequest::SharedDtor() {
  database_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TruncateCollectionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TruncateCollectionRequest& TruncateCollectionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TruncateCollectionRequest_olama_2eproto.base);
  return *internal_default_instance();
}


void TruncateCollectionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.TruncateCollectionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  database_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  only_truncate_ann_index_ = false;
  _internal_metadata_.Clear();
}

const char* TruncateCollectionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string database = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_database();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.TruncateCollectionRequest.database"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string collection = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_collection();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.TruncateCollectionRequest.collection"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool only_truncate_ann_index = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          only_truncate_ann_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TruncateCollectionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.TruncateCollectionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string database = 1;
  if (this->database().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_database().data(), static_cast<int>(this->_internal_database().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.TruncateCollectionRequest.database");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_database(), target);
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_collection().data(), static_cast<int>(this->_internal_collection().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.TruncateCollectionRequest.collection");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_collection(), target);
  }

  // bool only_truncate_ann_index = 3;
  if (this->only_truncate_ann_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_only_truncate_ann_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.TruncateCollectionRequest)
  return target;
}

size_t TruncateCollectionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.TruncateCollectionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string database = 1;
  if (this->database().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_database());
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_collection());
  }

  // bool only_truncate_ann_index = 3;
  if (this->only_truncate_ann_index() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TruncateCollectionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.TruncateCollectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TruncateCollectionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TruncateCollectionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.TruncateCollectionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.TruncateCollectionRequest)
    MergeFrom(*source);
  }
}

void TruncateCollectionRequest::MergeFrom(const TruncateCollectionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.TruncateCollectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.database().size() > 0) {

    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  if (from.collection().size() > 0) {

    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  if (from.only_truncate_ann_index() != 0) {
    _internal_set_only_truncate_ann_index(from._internal_only_truncate_ann_index());
  }
}

void TruncateCollectionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.TruncateCollectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TruncateCollectionRequest::CopyFrom(const TruncateCollectionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.TruncateCollectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TruncateCollectionRequest::IsInitialized() const {
  return true;
}

void TruncateCollectionRequest::InternalSwap(TruncateCollectionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  database_.Swap(&other->database_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  collection_.Swap(&other->collection_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(only_truncate_ann_index_, other->only_truncate_ann_index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TruncateCollectionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TruncateCollectionResponse::InitAsDefaultInstance() {
}
class TruncateCollectionResponse::_Internal {
 public:
};

TruncateCollectionResponse::TruncateCollectionResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.TruncateCollectionResponse)
}
TruncateCollectionResponse::TruncateCollectionResponse(const TruncateCollectionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  redirect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_redirect().empty()) {
    redirect_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  ::memcpy(&affectedcount_, &from.affectedcount_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&affectedcount_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:olama.TruncateCollectionResponse)
}

void TruncateCollectionResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TruncateCollectionResponse_olama_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&affectedcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&affectedcount_)) + sizeof(code_));
}

TruncateCollectionResponse::~TruncateCollectionResponse() {
  // @@protoc_insertion_point(destructor:olama.TruncateCollectionResponse)
  SharedDtor();
}

void TruncateCollectionResponse::SharedDtor() {
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TruncateCollectionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TruncateCollectionResponse& TruncateCollectionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TruncateCollectionResponse_olama_2eproto.base);
  return *internal_default_instance();
}


void TruncateCollectionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.TruncateCollectionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&affectedcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&affectedcount_)) + sizeof(code_));
  _internal_metadata_.Clear();
}

const char* TruncateCollectionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.TruncateCollectionResponse.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string redirect = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_redirect();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.TruncateCollectionResponse.redirect"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 affectedCount = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          affectedcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TruncateCollectionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.TruncateCollectionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.TruncateCollectionResponse.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  // string redirect = 3;
  if (this->redirect().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_redirect().data(), static_cast<int>(this->_internal_redirect().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.TruncateCollectionResponse.redirect");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_redirect(), target);
  }

  // uint64 affectedCount = 4;
  if (this->affectedcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_affectedcount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.TruncateCollectionResponse)
  return target;
}

size_t TruncateCollectionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.TruncateCollectionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // string redirect = 3;
  if (this->redirect().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_redirect());
  }

  // uint64 affectedCount = 4;
  if (this->affectedcount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_affectedcount());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TruncateCollectionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.TruncateCollectionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TruncateCollectionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TruncateCollectionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.TruncateCollectionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.TruncateCollectionResponse)
    MergeFrom(*source);
  }
}

void TruncateCollectionResponse::MergeFrom(const TruncateCollectionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.TruncateCollectionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.redirect().size() > 0) {

    redirect_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  if (from.affectedcount() != 0) {
    _internal_set_affectedcount(from._internal_affectedcount());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void TruncateCollectionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.TruncateCollectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TruncateCollectionResponse::CopyFrom(const TruncateCollectionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.TruncateCollectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TruncateCollectionResponse::IsInitialized() const {
  return true;
}

void TruncateCollectionResponse::InternalSwap(TruncateCollectionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  redirect_.Swap(&other->redirect_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(affectedcount_, other->affectedcount_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TruncateCollectionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RebuildIndexRequest::InitAsDefaultInstance() {
}
class RebuildIndexRequest::_Internal {
 public:
};

RebuildIndexRequest::RebuildIndexRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.RebuildIndexRequest)
}
RebuildIndexRequest::RebuildIndexRequest(const RebuildIndexRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_database().empty()) {
    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_collection().empty()) {
    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  ::memcpy(&throttle_, &from.throttle_,
    static_cast<size_t>(reinterpret_cast<char*>(&force_rebuild_) -
    reinterpret_cast<char*>(&throttle_)) + sizeof(force_rebuild_));
  // @@protoc_insertion_point(copy_constructor:olama.RebuildIndexRequest)
}

void RebuildIndexRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RebuildIndexRequest_olama_2eproto.base);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&throttle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&force_rebuild_) -
      reinterpret_cast<char*>(&throttle_)) + sizeof(force_rebuild_));
}

RebuildIndexRequest::~RebuildIndexRequest() {
  // @@protoc_insertion_point(destructor:olama.RebuildIndexRequest)
  SharedDtor();
}

void RebuildIndexRequest::SharedDtor() {
  database_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RebuildIndexRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RebuildIndexRequest& RebuildIndexRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RebuildIndexRequest_olama_2eproto.base);
  return *internal_default_instance();
}


void RebuildIndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.RebuildIndexRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  database_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&throttle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&force_rebuild_) -
      reinterpret_cast<char*>(&throttle_)) + sizeof(force_rebuild_));
  _internal_metadata_.Clear();
}

const char* RebuildIndexRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string database = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_database();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.RebuildIndexRequest.database"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string collection = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_collection();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.RebuildIndexRequest.collection"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool dropBeforeRebuild = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          dropbeforerebuild_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 throttle = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          throttle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool disable_train = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          disable_train_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool force_rebuild = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          force_rebuild_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RebuildIndexRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.RebuildIndexRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string database = 1;
  if (this->database().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_database().data(), static_cast<int>(this->_internal_database().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.RebuildIndexRequest.database");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_database(), target);
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_collection().data(), static_cast<int>(this->_internal_collection().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.RebuildIndexRequest.collection");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_collection(), target);
  }

  // bool dropBeforeRebuild = 3;
  if (this->dropbeforerebuild() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_dropbeforerebuild(), target);
  }

  // int32 throttle = 4;
  if (this->throttle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_throttle(), target);
  }

  // bool disable_train = 5;
  if (this->disable_train() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_disable_train(), target);
  }

  // bool force_rebuild = 6;
  if (this->force_rebuild() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_force_rebuild(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.RebuildIndexRequest)
  return target;
}

size_t RebuildIndexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.RebuildIndexRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string database = 1;
  if (this->database().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_database());
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_collection());
  }

  // int32 throttle = 4;
  if (this->throttle() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_throttle());
  }

  // bool dropBeforeRebuild = 3;
  if (this->dropbeforerebuild() != 0) {
    total_size += 1 + 1;
  }

  // bool disable_train = 5;
  if (this->disable_train() != 0) {
    total_size += 1 + 1;
  }

  // bool force_rebuild = 6;
  if (this->force_rebuild() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RebuildIndexRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.RebuildIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RebuildIndexRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RebuildIndexRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.RebuildIndexRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.RebuildIndexRequest)
    MergeFrom(*source);
  }
}

void RebuildIndexRequest::MergeFrom(const RebuildIndexRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.RebuildIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.database().size() > 0) {

    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  if (from.collection().size() > 0) {

    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  if (from.throttle() != 0) {
    _internal_set_throttle(from._internal_throttle());
  }
  if (from.dropbeforerebuild() != 0) {
    _internal_set_dropbeforerebuild(from._internal_dropbeforerebuild());
  }
  if (from.disable_train() != 0) {
    _internal_set_disable_train(from._internal_disable_train());
  }
  if (from.force_rebuild() != 0) {
    _internal_set_force_rebuild(from._internal_force_rebuild());
  }
}

void RebuildIndexRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.RebuildIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RebuildIndexRequest::CopyFrom(const RebuildIndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.RebuildIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RebuildIndexRequest::IsInitialized() const {
  return true;
}

void RebuildIndexRequest::InternalSwap(RebuildIndexRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  database_.Swap(&other->database_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  collection_.Swap(&other->collection_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(throttle_, other->throttle_);
  swap(dropbeforerebuild_, other->dropbeforerebuild_);
  swap(disable_train_, other->disable_train_);
  swap(force_rebuild_, other->force_rebuild_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RebuildIndexRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RebuildIndexResponse::InitAsDefaultInstance() {
}
class RebuildIndexResponse::_Internal {
 public:
};

RebuildIndexResponse::RebuildIndexResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.RebuildIndexResponse)
}
RebuildIndexResponse::RebuildIndexResponse(const RebuildIndexResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      task_ids_(from.task_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  redirect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_redirect().empty()) {
    redirect_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:olama.RebuildIndexResponse)
}

void RebuildIndexResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RebuildIndexResponse_olama_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

RebuildIndexResponse::~RebuildIndexResponse() {
  // @@protoc_insertion_point(destructor:olama.RebuildIndexResponse)
  SharedDtor();
}

void RebuildIndexResponse::SharedDtor() {
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RebuildIndexResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RebuildIndexResponse& RebuildIndexResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RebuildIndexResponse_olama_2eproto.base);
  return *internal_default_instance();
}


void RebuildIndexResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.RebuildIndexResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  task_ids_.Clear();
  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

const char* RebuildIndexResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.RebuildIndexResponse.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string redirect = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_redirect();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.RebuildIndexResponse.redirect"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string task_ids = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_task_ids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.RebuildIndexResponse.task_ids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RebuildIndexResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.RebuildIndexResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.RebuildIndexResponse.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  // string redirect = 3;
  if (this->redirect().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_redirect().data(), static_cast<int>(this->_internal_redirect().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.RebuildIndexResponse.redirect");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_redirect(), target);
  }

  // repeated string task_ids = 4;
  for (int i = 0, n = this->_internal_task_ids_size(); i < n; i++) {
    const auto& s = this->_internal_task_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.RebuildIndexResponse.task_ids");
    target = stream->WriteString(4, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.RebuildIndexResponse)
  return target;
}

size_t RebuildIndexResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.RebuildIndexResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string task_ids = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(task_ids_.size());
  for (int i = 0, n = task_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      task_ids_.Get(i));
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // string redirect = 3;
  if (this->redirect().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_redirect());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RebuildIndexResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.RebuildIndexResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RebuildIndexResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RebuildIndexResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.RebuildIndexResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.RebuildIndexResponse)
    MergeFrom(*source);
  }
}

void RebuildIndexResponse::MergeFrom(const RebuildIndexResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.RebuildIndexResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  task_ids_.MergeFrom(from.task_ids_);
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.redirect().size() > 0) {

    redirect_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void RebuildIndexResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.RebuildIndexResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RebuildIndexResponse::CopyFrom(const RebuildIndexResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.RebuildIndexResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RebuildIndexResponse::IsInitialized() const {
  return true;
}

void RebuildIndexResponse::InternalSwap(RebuildIndexResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  task_ids_.InternalSwap(&other->task_ids_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  redirect_.Swap(&other->redirect_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RebuildIndexResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpsertRequest::InitAsDefaultInstance() {
}
class UpsertRequest::_Internal {
 public:
};

UpsertRequest::UpsertRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.UpsertRequest)
}
UpsertRequest::UpsertRequest(const UpsertRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      documents_(from.documents_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_database().empty()) {
    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_collection().empty()) {
    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  buildindex_ = from.buildindex_;
  // @@protoc_insertion_point(copy_constructor:olama.UpsertRequest)
}

void UpsertRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpsertRequest_olama_2eproto.base);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buildindex_ = false;
}

UpsertRequest::~UpsertRequest() {
  // @@protoc_insertion_point(destructor:olama.UpsertRequest)
  SharedDtor();
}

void UpsertRequest::SharedDtor() {
  database_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpsertRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpsertRequest& UpsertRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpsertRequest_olama_2eproto.base);
  return *internal_default_instance();
}


void UpsertRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.UpsertRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  documents_.Clear();
  database_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buildindex_ = false;
  _internal_metadata_.Clear();
}

const char* UpsertRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string database = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_database();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.UpsertRequest.database"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string collection = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_collection();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.UpsertRequest.collection"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool buildIndex = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          buildindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .olama.Document documents = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_documents(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpsertRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.UpsertRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string database = 1;
  if (this->database().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_database().data(), static_cast<int>(this->_internal_database().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.UpsertRequest.database");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_database(), target);
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_collection().data(), static_cast<int>(this->_internal_collection().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.UpsertRequest.collection");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_collection(), target);
  }

  // bool buildIndex = 3;
  if (this->buildindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_buildindex(), target);
  }

  // repeated .olama.Document documents = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_documents_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_documents(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.UpsertRequest)
  return target;
}

size_t UpsertRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.UpsertRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .olama.Document documents = 4;
  total_size += 1UL * this->_internal_documents_size();
  for (const auto& msg : this->documents_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string database = 1;
  if (this->database().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_database());
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_collection());
  }

  // bool buildIndex = 3;
  if (this->buildindex() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpsertRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.UpsertRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpsertRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpsertRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.UpsertRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.UpsertRequest)
    MergeFrom(*source);
  }
}

void UpsertRequest::MergeFrom(const UpsertRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.UpsertRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  documents_.MergeFrom(from.documents_);
  if (from.database().size() > 0) {

    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  if (from.collection().size() > 0) {

    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  if (from.buildindex() != 0) {
    _internal_set_buildindex(from._internal_buildindex());
  }
}

void UpsertRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.UpsertRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpsertRequest::CopyFrom(const UpsertRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.UpsertRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpsertRequest::IsInitialized() const {
  return true;
}

void UpsertRequest::InternalSwap(UpsertRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  documents_.InternalSwap(&other->documents_);
  database_.Swap(&other->database_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  collection_.Swap(&other->collection_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(buildindex_, other->buildindex_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpsertRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EmbeddingExtraInfo::InitAsDefaultInstance() {
}
class EmbeddingExtraInfo::_Internal {
 public:
};

EmbeddingExtraInfo::EmbeddingExtraInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.EmbeddingExtraInfo)
}
EmbeddingExtraInfo::EmbeddingExtraInfo(const EmbeddingExtraInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_used_ = from.token_used_;
  // @@protoc_insertion_point(copy_constructor:olama.EmbeddingExtraInfo)
}

void EmbeddingExtraInfo::SharedCtor() {
  token_used_ = PROTOBUF_ULONGLONG(0);
}

EmbeddingExtraInfo::~EmbeddingExtraInfo() {
  // @@protoc_insertion_point(destructor:olama.EmbeddingExtraInfo)
  SharedDtor();
}

void EmbeddingExtraInfo::SharedDtor() {
}

void EmbeddingExtraInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EmbeddingExtraInfo& EmbeddingExtraInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EmbeddingExtraInfo_olama_2eproto.base);
  return *internal_default_instance();
}


void EmbeddingExtraInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.EmbeddingExtraInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_used_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* EmbeddingExtraInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 token_used = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          token_used_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EmbeddingExtraInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.EmbeddingExtraInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 token_used = 1;
  if (this->token_used() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_token_used(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.EmbeddingExtraInfo)
  return target;
}

size_t EmbeddingExtraInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.EmbeddingExtraInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 token_used = 1;
  if (this->token_used() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_token_used());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmbeddingExtraInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.EmbeddingExtraInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const EmbeddingExtraInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EmbeddingExtraInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.EmbeddingExtraInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.EmbeddingExtraInfo)
    MergeFrom(*source);
  }
}

void EmbeddingExtraInfo::MergeFrom(const EmbeddingExtraInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.EmbeddingExtraInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token_used() != 0) {
    _internal_set_token_used(from._internal_token_used());
  }
}

void EmbeddingExtraInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.EmbeddingExtraInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmbeddingExtraInfo::CopyFrom(const EmbeddingExtraInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.EmbeddingExtraInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmbeddingExtraInfo::IsInitialized() const {
  return true;
}

void EmbeddingExtraInfo::InternalSwap(EmbeddingExtraInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(token_used_, other->token_used_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EmbeddingExtraInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpsertResponse::InitAsDefaultInstance() {
  ::olama::_UpsertResponse_default_instance_._instance.get_mutable()->embedding_extra_info_ = const_cast< ::olama::EmbeddingExtraInfo*>(
      ::olama::EmbeddingExtraInfo::internal_default_instance());
}
class UpsertResponse::_Internal {
 public:
  static const ::olama::EmbeddingExtraInfo& embedding_extra_info(const UpsertResponse* msg);
};

const ::olama::EmbeddingExtraInfo&
UpsertResponse::_Internal::embedding_extra_info(const UpsertResponse* msg) {
  return *msg->embedding_extra_info_;
}
UpsertResponse::UpsertResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.UpsertResponse)
}
UpsertResponse::UpsertResponse(const UpsertResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  redirect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_redirect().empty()) {
    redirect_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  warning_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_warning().empty()) {
    warning_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.warning_);
  }
  if (from._internal_has_embedding_extra_info()) {
    embedding_extra_info_ = new ::olama::EmbeddingExtraInfo(*from.embedding_extra_info_);
  } else {
    embedding_extra_info_ = nullptr;
  }
  ::memcpy(&affectedcount_, &from.affectedcount_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&affectedcount_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:olama.UpsertResponse)
}

void UpsertResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpsertResponse_olama_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  warning_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&embedding_extra_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&embedding_extra_info_)) + sizeof(code_));
}

UpsertResponse::~UpsertResponse() {
  // @@protoc_insertion_point(destructor:olama.UpsertResponse)
  SharedDtor();
}

void UpsertResponse::SharedDtor() {
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  warning_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete embedding_extra_info_;
}

void UpsertResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpsertResponse& UpsertResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpsertResponse_olama_2eproto.base);
  return *internal_default_instance();
}


void UpsertResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.UpsertResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  warning_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && embedding_extra_info_ != nullptr) {
    delete embedding_extra_info_;
  }
  embedding_extra_info_ = nullptr;
  ::memset(&affectedcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&affectedcount_)) + sizeof(code_));
  _internal_metadata_.Clear();
}

const char* UpsertResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.UpsertResponse.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string redirect = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_redirect();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.UpsertResponse.redirect"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 affectedCount = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          affectedcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string warning = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_warning();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.UpsertResponse.warning"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .olama.EmbeddingExtraInfo embedding_extra_info = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_embedding_extra_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpsertResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.UpsertResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.UpsertResponse.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  // string redirect = 3;
  if (this->redirect().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_redirect().data(), static_cast<int>(this->_internal_redirect().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.UpsertResponse.redirect");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_redirect(), target);
  }

  // uint64 affectedCount = 4;
  if (this->affectedcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_affectedcount(), target);
  }

  // string warning = 5;
  if (this->warning().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_warning().data(), static_cast<int>(this->_internal_warning().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.UpsertResponse.warning");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_warning(), target);
  }

  // .olama.EmbeddingExtraInfo embedding_extra_info = 6;
  if (this->has_embedding_extra_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::embedding_extra_info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.UpsertResponse)
  return target;
}

size_t UpsertResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.UpsertResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // string redirect = 3;
  if (this->redirect().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_redirect());
  }

  // string warning = 5;
  if (this->warning().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_warning());
  }

  // .olama.EmbeddingExtraInfo embedding_extra_info = 6;
  if (this->has_embedding_extra_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *embedding_extra_info_);
  }

  // uint64 affectedCount = 4;
  if (this->affectedcount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_affectedcount());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpsertResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.UpsertResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpsertResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpsertResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.UpsertResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.UpsertResponse)
    MergeFrom(*source);
  }
}

void UpsertResponse::MergeFrom(const UpsertResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.UpsertResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.redirect().size() > 0) {

    redirect_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  if (from.warning().size() > 0) {

    warning_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.warning_);
  }
  if (from.has_embedding_extra_info()) {
    _internal_mutable_embedding_extra_info()->::olama::EmbeddingExtraInfo::MergeFrom(from._internal_embedding_extra_info());
  }
  if (from.affectedcount() != 0) {
    _internal_set_affectedcount(from._internal_affectedcount());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void UpsertResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.UpsertResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpsertResponse::CopyFrom(const UpsertResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.UpsertResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpsertResponse::IsInitialized() const {
  return true;
}

void UpsertResponse::InternalSwap(UpsertResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  redirect_.Swap(&other->redirect_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  warning_.Swap(&other->warning_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(embedding_extra_info_, other->embedding_extra_info_);
  swap(affectedcount_, other->affectedcount_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpsertResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateRequest::InitAsDefaultInstance() {
  ::olama::_UpdateRequest_default_instance_._instance.get_mutable()->query_ = const_cast< ::olama::QueryCond*>(
      ::olama::QueryCond::internal_default_instance());
  ::olama::_UpdateRequest_default_instance_._instance.get_mutable()->update_ = const_cast< ::olama::Document*>(
      ::olama::Document::internal_default_instance());
}
class UpdateRequest::_Internal {
 public:
  static const ::olama::QueryCond& query(const UpdateRequest* msg);
  static const ::olama::Document& update(const UpdateRequest* msg);
};

const ::olama::QueryCond&
UpdateRequest::_Internal::query(const UpdateRequest* msg) {
  return *msg->query_;
}
const ::olama::Document&
UpdateRequest::_Internal::update(const UpdateRequest* msg) {
  return *msg->update_;
}
UpdateRequest::UpdateRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.UpdateRequest)
}
UpdateRequest::UpdateRequest(const UpdateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_database().empty()) {
    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_collection().empty()) {
    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  if (from._internal_has_query()) {
    query_ = new ::olama::QueryCond(*from.query_);
  } else {
    query_ = nullptr;
  }
  if (from._internal_has_update()) {
    update_ = new ::olama::Document(*from.update_);
  } else {
    update_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:olama.UpdateRequest)
}

void UpdateRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateRequest_olama_2eproto.base);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&query_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_) -
      reinterpret_cast<char*>(&query_)) + sizeof(update_));
}

UpdateRequest::~UpdateRequest() {
  // @@protoc_insertion_point(destructor:olama.UpdateRequest)
  SharedDtor();
}

void UpdateRequest::SharedDtor() {
  database_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete query_;
  if (this != internal_default_instance()) delete update_;
}

void UpdateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateRequest& UpdateRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateRequest_olama_2eproto.base);
  return *internal_default_instance();
}


void UpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.UpdateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  database_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && query_ != nullptr) {
    delete query_;
  }
  query_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && update_ != nullptr) {
    delete update_;
  }
  update_ = nullptr;
  _internal_metadata_.Clear();
}

const char* UpdateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string database = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_database();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.UpdateRequest.database"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string collection = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_collection();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.UpdateRequest.collection"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .olama.QueryCond query = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_query(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .olama.Document update = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_update(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.UpdateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string database = 1;
  if (this->database().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_database().data(), static_cast<int>(this->_internal_database().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.UpdateRequest.database");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_database(), target);
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_collection().data(), static_cast<int>(this->_internal_collection().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.UpdateRequest.collection");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_collection(), target);
  }

  // .olama.QueryCond query = 3;
  if (this->has_query()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::query(this), target, stream);
  }

  // .olama.Document update = 4;
  if (this->has_update()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::update(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.UpdateRequest)
  return target;
}

size_t UpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.UpdateRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string database = 1;
  if (this->database().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_database());
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_collection());
  }

  // .olama.QueryCond query = 3;
  if (this->has_query()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *query_);
  }

  // .olama.Document update = 4;
  if (this->has_update()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *update_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.UpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.UpdateRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.UpdateRequest)
    MergeFrom(*source);
  }
}

void UpdateRequest::MergeFrom(const UpdateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.UpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.database().size() > 0) {

    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  if (from.collection().size() > 0) {

    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  if (from.has_query()) {
    _internal_mutable_query()->::olama::QueryCond::MergeFrom(from._internal_query());
  }
  if (from.has_update()) {
    _internal_mutable_update()->::olama::Document::MergeFrom(from._internal_update());
  }
}

void UpdateRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.UpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateRequest::CopyFrom(const UpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.UpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRequest::IsInitialized() const {
  return true;
}

void UpdateRequest::InternalSwap(UpdateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  database_.Swap(&other->database_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  collection_.Swap(&other->collection_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(query_, other->query_);
  swap(update_, other->update_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateResponse::InitAsDefaultInstance() {
  ::olama::_UpdateResponse_default_instance_._instance.get_mutable()->embedding_extra_info_ = const_cast< ::olama::EmbeddingExtraInfo*>(
      ::olama::EmbeddingExtraInfo::internal_default_instance());
}
class UpdateResponse::_Internal {
 public:
  static const ::olama::EmbeddingExtraInfo& embedding_extra_info(const UpdateResponse* msg);
};

const ::olama::EmbeddingExtraInfo&
UpdateResponse::_Internal::embedding_extra_info(const UpdateResponse* msg) {
  return *msg->embedding_extra_info_;
}
UpdateResponse::UpdateResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.UpdateResponse)
}
UpdateResponse::UpdateResponse(const UpdateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  redirect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_redirect().empty()) {
    redirect_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  warning_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_warning().empty()) {
    warning_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.warning_);
  }
  if (from._internal_has_embedding_extra_info()) {
    embedding_extra_info_ = new ::olama::EmbeddingExtraInfo(*from.embedding_extra_info_);
  } else {
    embedding_extra_info_ = nullptr;
  }
  ::memcpy(&affectedcount_, &from.affectedcount_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&affectedcount_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:olama.UpdateResponse)
}

void UpdateResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateResponse_olama_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  warning_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&embedding_extra_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&embedding_extra_info_)) + sizeof(code_));
}

UpdateResponse::~UpdateResponse() {
  // @@protoc_insertion_point(destructor:olama.UpdateResponse)
  SharedDtor();
}

void UpdateResponse::SharedDtor() {
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  warning_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete embedding_extra_info_;
}

void UpdateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateResponse& UpdateResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateResponse_olama_2eproto.base);
  return *internal_default_instance();
}


void UpdateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.UpdateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  warning_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && embedding_extra_info_ != nullptr) {
    delete embedding_extra_info_;
  }
  embedding_extra_info_ = nullptr;
  ::memset(&affectedcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&affectedcount_)) + sizeof(code_));
  _internal_metadata_.Clear();
}

const char* UpdateResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.UpdateResponse.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string redirect = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_redirect();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.UpdateResponse.redirect"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 affectedCount = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          affectedcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string warning = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_warning();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.UpdateResponse.warning"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .olama.EmbeddingExtraInfo embedding_extra_info = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_embedding_extra_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.UpdateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.UpdateResponse.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  // string redirect = 3;
  if (this->redirect().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_redirect().data(), static_cast<int>(this->_internal_redirect().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.UpdateResponse.redirect");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_redirect(), target);
  }

  // uint64 affectedCount = 4;
  if (this->affectedcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_affectedcount(), target);
  }

  // string warning = 5;
  if (this->warning().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_warning().data(), static_cast<int>(this->_internal_warning().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.UpdateResponse.warning");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_warning(), target);
  }

  // .olama.EmbeddingExtraInfo embedding_extra_info = 6;
  if (this->has_embedding_extra_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::embedding_extra_info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.UpdateResponse)
  return target;
}

size_t UpdateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.UpdateResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // string redirect = 3;
  if (this->redirect().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_redirect());
  }

  // string warning = 5;
  if (this->warning().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_warning());
  }

  // .olama.EmbeddingExtraInfo embedding_extra_info = 6;
  if (this->has_embedding_extra_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *embedding_extra_info_);
  }

  // uint64 affectedCount = 4;
  if (this->affectedcount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_affectedcount());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.UpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.UpdateResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.UpdateResponse)
    MergeFrom(*source);
  }
}

void UpdateResponse::MergeFrom(const UpdateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.UpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.redirect().size() > 0) {

    redirect_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  if (from.warning().size() > 0) {

    warning_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.warning_);
  }
  if (from.has_embedding_extra_info()) {
    _internal_mutable_embedding_extra_info()->::olama::EmbeddingExtraInfo::MergeFrom(from._internal_embedding_extra_info());
  }
  if (from.affectedcount() != 0) {
    _internal_set_affectedcount(from._internal_affectedcount());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void UpdateResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.UpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateResponse::CopyFrom(const UpdateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.UpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateResponse::IsInitialized() const {
  return true;
}

void UpdateResponse::InternalSwap(UpdateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  redirect_.Swap(&other->redirect_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  warning_.Swap(&other->warning_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(embedding_extra_info_, other->embedding_extra_info_);
  swap(affectedcount_, other->affectedcount_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteRequest::InitAsDefaultInstance() {
  ::olama::_DeleteRequest_default_instance_._instance.get_mutable()->query_ = const_cast< ::olama::QueryCond*>(
      ::olama::QueryCond::internal_default_instance());
}
class DeleteRequest::_Internal {
 public:
  static const ::olama::QueryCond& query(const DeleteRequest* msg);
};

const ::olama::QueryCond&
DeleteRequest::_Internal::query(const DeleteRequest* msg) {
  return *msg->query_;
}
DeleteRequest::DeleteRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.DeleteRequest)
}
DeleteRequest::DeleteRequest(const DeleteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_database().empty()) {
    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_collection().empty()) {
    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  if (from._internal_has_query()) {
    query_ = new ::olama::QueryCond(*from.query_);
  } else {
    query_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:olama.DeleteRequest)
}

void DeleteRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteRequest_olama_2eproto.base);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  query_ = nullptr;
}

DeleteRequest::~DeleteRequest() {
  // @@protoc_insertion_point(destructor:olama.DeleteRequest)
  SharedDtor();
}

void DeleteRequest::SharedDtor() {
  database_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete query_;
}

void DeleteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteRequest& DeleteRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteRequest_olama_2eproto.base);
  return *internal_default_instance();
}


void DeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.DeleteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  database_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && query_ != nullptr) {
    delete query_;
  }
  query_ = nullptr;
  _internal_metadata_.Clear();
}

const char* DeleteRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string database = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_database();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.DeleteRequest.database"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string collection = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_collection();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.DeleteRequest.collection"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .olama.QueryCond query = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_query(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.DeleteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string database = 1;
  if (this->database().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_database().data(), static_cast<int>(this->_internal_database().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.DeleteRequest.database");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_database(), target);
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_collection().data(), static_cast<int>(this->_internal_collection().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.DeleteRequest.collection");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_collection(), target);
  }

  // .olama.QueryCond query = 3;
  if (this->has_query()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::query(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.DeleteRequest)
  return target;
}

size_t DeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.DeleteRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string database = 1;
  if (this->database().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_database());
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_collection());
  }

  // .olama.QueryCond query = 3;
  if (this->has_query()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *query_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.DeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.DeleteRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.DeleteRequest)
    MergeFrom(*source);
  }
}

void DeleteRequest::MergeFrom(const DeleteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.DeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.database().size() > 0) {

    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  if (from.collection().size() > 0) {

    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  if (from.has_query()) {
    _internal_mutable_query()->::olama::QueryCond::MergeFrom(from._internal_query());
  }
}

void DeleteRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.DeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRequest::CopyFrom(const DeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.DeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRequest::IsInitialized() const {
  return true;
}

void DeleteRequest::InternalSwap(DeleteRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  database_.Swap(&other->database_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  collection_.Swap(&other->collection_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(query_, other->query_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteResponse::InitAsDefaultInstance() {
}
class DeleteResponse::_Internal {
 public:
};

DeleteResponse::DeleteResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.DeleteResponse)
}
DeleteResponse::DeleteResponse(const DeleteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  redirect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_redirect().empty()) {
    redirect_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  ::memcpy(&affectedcount_, &from.affectedcount_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&affectedcount_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:olama.DeleteResponse)
}

void DeleteResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteResponse_olama_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&affectedcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&affectedcount_)) + sizeof(code_));
}

DeleteResponse::~DeleteResponse() {
  // @@protoc_insertion_point(destructor:olama.DeleteResponse)
  SharedDtor();
}

void DeleteResponse::SharedDtor() {
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteResponse& DeleteResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteResponse_olama_2eproto.base);
  return *internal_default_instance();
}


void DeleteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.DeleteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&affectedcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&affectedcount_)) + sizeof(code_));
  _internal_metadata_.Clear();
}

const char* DeleteResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.DeleteResponse.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string redirect = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_redirect();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.DeleteResponse.redirect"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 affectedCount = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          affectedcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.DeleteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.DeleteResponse.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  // string redirect = 3;
  if (this->redirect().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_redirect().data(), static_cast<int>(this->_internal_redirect().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.DeleteResponse.redirect");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_redirect(), target);
  }

  // uint64 affectedCount = 4;
  if (this->affectedcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_affectedcount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.DeleteResponse)
  return target;
}

size_t DeleteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.DeleteResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // string redirect = 3;
  if (this->redirect().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_redirect());
  }

  // uint64 affectedCount = 4;
  if (this->affectedcount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_affectedcount());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.DeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.DeleteResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.DeleteResponse)
    MergeFrom(*source);
  }
}

void DeleteResponse::MergeFrom(const DeleteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.DeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.redirect().size() > 0) {

    redirect_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  if (from.affectedcount() != 0) {
    _internal_set_affectedcount(from._internal_affectedcount());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void DeleteResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.DeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteResponse::CopyFrom(const DeleteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.DeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteResponse::IsInitialized() const {
  return true;
}

void DeleteResponse::InternalSwap(DeleteResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  redirect_.Swap(&other->redirect_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(affectedcount_, other->affectedcount_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void QueryCond::InitAsDefaultInstance() {
}
class QueryCond::_Internal {
 public:
};

QueryCond::QueryCond()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.QueryCond)
}
QueryCond::QueryCond(const QueryCond& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      documentids_(from.documentids_),
      indexids_(from.indexids_),
      outputfields_(from.outputfields_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_filter().empty()) {
    filter_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  ::memcpy(&limit_, &from.limit_,
    static_cast<size_t>(reinterpret_cast<char*>(&retrievevector_) -
    reinterpret_cast<char*>(&limit_)) + sizeof(retrievevector_));
  // @@protoc_insertion_point(copy_constructor:olama.QueryCond)
}

void QueryCond::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_QueryCond_olama_2eproto.base);
  filter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retrievevector_) -
      reinterpret_cast<char*>(&limit_)) + sizeof(retrievevector_));
}

QueryCond::~QueryCond() {
  // @@protoc_insertion_point(destructor:olama.QueryCond)
  SharedDtor();
}

void QueryCond::SharedDtor() {
  filter_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void QueryCond::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const QueryCond& QueryCond::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_QueryCond_olama_2eproto.base);
  return *internal_default_instance();
}


void QueryCond::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.QueryCond)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  documentids_.Clear();
  indexids_.Clear();
  outputfields_.Clear();
  filter_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retrievevector_) -
      reinterpret_cast<char*>(&limit_)) + sizeof(retrievevector_));
  _internal_metadata_.Clear();
}

const char* QueryCond::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string documentIds = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_documentids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.QueryCond.documentIds"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated uint64 indexIds = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_indexids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          _internal_add_indexids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool retrieveVector = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          retrievevector_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string filter = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_filter();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.QueryCond.filter"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 limit = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 offset = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string outputFields = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_outputfields();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.QueryCond.outputFields"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QueryCond::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.QueryCond)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string documentIds = 1;
  for (int i = 0, n = this->_internal_documentids_size(); i < n; i++) {
    const auto& s = this->_internal_documentids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.QueryCond.documentIds");
    target = stream->WriteString(1, s, target);
  }

  // repeated uint64 indexIds = 2;
  {
    int byte_size = _indexids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          2, _internal_indexids(), byte_size, target);
    }
  }

  // bool retrieveVector = 3;
  if (this->retrievevector() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_retrievevector(), target);
  }

  // string filter = 4;
  if (this->filter().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filter().data(), static_cast<int>(this->_internal_filter().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.QueryCond.filter");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_filter(), target);
  }

  // int64 limit = 5;
  if (this->limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_limit(), target);
  }

  // int64 offset = 6;
  if (this->offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_offset(), target);
  }

  // repeated string outputFields = 7;
  for (int i = 0, n = this->_internal_outputfields_size(); i < n; i++) {
    const auto& s = this->_internal_outputfields(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.QueryCond.outputFields");
    target = stream->WriteString(7, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.QueryCond)
  return target;
}

size_t QueryCond::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.QueryCond)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string documentIds = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(documentids_.size());
  for (int i = 0, n = documentids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      documentids_.Get(i));
  }

  // repeated uint64 indexIds = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->indexids_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _indexids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated string outputFields = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(outputfields_.size());
  for (int i = 0, n = outputfields_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      outputfields_.Get(i));
  }

  // string filter = 4;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filter());
  }

  // int64 limit = 5;
  if (this->limit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_limit());
  }

  // int64 offset = 6;
  if (this->offset() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_offset());
  }

  // bool retrieveVector = 3;
  if (this->retrievevector() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryCond::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.QueryCond)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryCond* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QueryCond>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.QueryCond)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.QueryCond)
    MergeFrom(*source);
  }
}

void QueryCond::MergeFrom(const QueryCond& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.QueryCond)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  documentids_.MergeFrom(from.documentids_);
  indexids_.MergeFrom(from.indexids_);
  outputfields_.MergeFrom(from.outputfields_);
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.limit() != 0) {
    _internal_set_limit(from._internal_limit());
  }
  if (from.offset() != 0) {
    _internal_set_offset(from._internal_offset());
  }
  if (from.retrievevector() != 0) {
    _internal_set_retrievevector(from._internal_retrievevector());
  }
}

void QueryCond::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.QueryCond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryCond::CopyFrom(const QueryCond& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.QueryCond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryCond::IsInitialized() const {
  return true;
}

void QueryCond::InternalSwap(QueryCond* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  documentids_.InternalSwap(&other->documentids_);
  indexids_.InternalSwap(&other->indexids_);
  outputfields_.InternalSwap(&other->outputfields_);
  filter_.Swap(&other->filter_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(limit_, other->limit_);
  swap(offset_, other->offset_);
  swap(retrievevector_, other->retrievevector_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryCond::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void QueryRequest::InitAsDefaultInstance() {
  ::olama::_QueryRequest_default_instance_._instance.get_mutable()->query_ = const_cast< ::olama::QueryCond*>(
      ::olama::QueryCond::internal_default_instance());
}
class QueryRequest::_Internal {
 public:
  static const ::olama::QueryCond& query(const QueryRequest* msg);
};

const ::olama::QueryCond&
QueryRequest::_Internal::query(const QueryRequest* msg) {
  return *msg->query_;
}
QueryRequest::QueryRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.QueryRequest)
}
QueryRequest::QueryRequest(const QueryRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_database().empty()) {
    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_collection().empty()) {
    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  readconsistency_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_readconsistency().empty()) {
    readconsistency_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.readconsistency_);
  }
  if (from._internal_has_query()) {
    query_ = new ::olama::QueryCond(*from.query_);
  } else {
    query_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:olama.QueryRequest)
}

void QueryRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_QueryRequest_olama_2eproto.base);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  readconsistency_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  query_ = nullptr;
}

QueryRequest::~QueryRequest() {
  // @@protoc_insertion_point(destructor:olama.QueryRequest)
  SharedDtor();
}

void QueryRequest::SharedDtor() {
  database_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  readconsistency_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete query_;
}

void QueryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const QueryRequest& QueryRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_QueryRequest_olama_2eproto.base);
  return *internal_default_instance();
}


void QueryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.QueryRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  database_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  readconsistency_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && query_ != nullptr) {
    delete query_;
  }
  query_ = nullptr;
  _internal_metadata_.Clear();
}

const char* QueryRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string database = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_database();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.QueryRequest.database"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string collection = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_collection();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.QueryRequest.collection"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .olama.QueryCond query = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_query(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string readConsistency = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_readconsistency();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.QueryRequest.readConsistency"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QueryRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.QueryRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string database = 1;
  if (this->database().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_database().data(), static_cast<int>(this->_internal_database().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.QueryRequest.database");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_database(), target);
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_collection().data(), static_cast<int>(this->_internal_collection().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.QueryRequest.collection");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_collection(), target);
  }

  // .olama.QueryCond query = 3;
  if (this->has_query()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::query(this), target, stream);
  }

  // string readConsistency = 4;
  if (this->readconsistency().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_readconsistency().data(), static_cast<int>(this->_internal_readconsistency().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.QueryRequest.readConsistency");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_readconsistency(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.QueryRequest)
  return target;
}

size_t QueryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.QueryRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string database = 1;
  if (this->database().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_database());
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_collection());
  }

  // string readConsistency = 4;
  if (this->readconsistency().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_readconsistency());
  }

  // .olama.QueryCond query = 3;
  if (this->has_query()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *query_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.QueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QueryRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.QueryRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.QueryRequest)
    MergeFrom(*source);
  }
}

void QueryRequest::MergeFrom(const QueryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.QueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.database().size() > 0) {

    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  if (from.collection().size() > 0) {

    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  if (from.readconsistency().size() > 0) {

    readconsistency_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.readconsistency_);
  }
  if (from.has_query()) {
    _internal_mutable_query()->::olama::QueryCond::MergeFrom(from._internal_query());
  }
}

void QueryRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.QueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryRequest::CopyFrom(const QueryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.QueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryRequest::IsInitialized() const {
  return true;
}

void QueryRequest::InternalSwap(QueryRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  database_.Swap(&other->database_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  collection_.Swap(&other->collection_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  readconsistency_.Swap(&other->readconsistency_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(query_, other->query_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void QueryResponse::InitAsDefaultInstance() {
}
class QueryResponse::_Internal {
 public:
};

QueryResponse::QueryResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.QueryResponse)
}
QueryResponse::QueryResponse(const QueryResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      documents_(from.documents_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  redirect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_redirect().empty()) {
    redirect_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&count_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:olama.QueryResponse)
}

void QueryResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_QueryResponse_olama_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&count_)) + sizeof(code_));
}

QueryResponse::~QueryResponse() {
  // @@protoc_insertion_point(destructor:olama.QueryResponse)
  SharedDtor();
}

void QueryResponse::SharedDtor() {
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void QueryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const QueryResponse& QueryResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_QueryResponse_olama_2eproto.base);
  return *internal_default_instance();
}


void QueryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.QueryResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  documents_.Clear();
  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&count_)) + sizeof(code_));
  _internal_metadata_.Clear();
}

const char* QueryResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.QueryResponse.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string redirect = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_redirect();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.QueryResponse.redirect"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .olama.Document documents = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_documents(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // uint64 count = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QueryResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.QueryResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.QueryResponse.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  // string redirect = 3;
  if (this->redirect().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_redirect().data(), static_cast<int>(this->_internal_redirect().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.QueryResponse.redirect");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_redirect(), target);
  }

  // repeated .olama.Document documents = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_documents_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_documents(i), target, stream);
  }

  // uint64 count = 5;
  if (this->count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.QueryResponse)
  return target;
}

size_t QueryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.QueryResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .olama.Document documents = 4;
  total_size += 1UL * this->_internal_documents_size();
  for (const auto& msg : this->documents_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // string redirect = 3;
  if (this->redirect().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_redirect());
  }

  // uint64 count = 5;
  if (this->count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_count());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.QueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QueryResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.QueryResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.QueryResponse)
    MergeFrom(*source);
  }
}

void QueryResponse::MergeFrom(const QueryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.QueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  documents_.MergeFrom(from.documents_);
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.redirect().size() > 0) {

    redirect_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  if (from.count() != 0) {
    _internal_set_count(from._internal_count());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void QueryResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.QueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryResponse::CopyFrom(const QueryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.QueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryResponse::IsInitialized() const {
  return true;
}

void QueryResponse::InternalSwap(QueryResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  documents_.InternalSwap(&other->documents_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  redirect_.Swap(&other->redirect_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(count_, other->count_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SearchResult::InitAsDefaultInstance() {
}
class SearchResult::_Internal {
 public:
};

SearchResult::SearchResult()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.SearchResult)
}
SearchResult::SearchResult(const SearchResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      documents_(from.documents_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:olama.SearchResult)
}

void SearchResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SearchResult_olama_2eproto.base);
}

SearchResult::~SearchResult() {
  // @@protoc_insertion_point(destructor:olama.SearchResult)
  SharedDtor();
}

void SearchResult::SharedDtor() {
}

void SearchResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SearchResult& SearchResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SearchResult_olama_2eproto.base);
  return *internal_default_instance();
}


void SearchResult::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.SearchResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  documents_.Clear();
  _internal_metadata_.Clear();
}

const char* SearchResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .olama.Document documents = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_documents(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SearchResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.SearchResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .olama.Document documents = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_documents_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_documents(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.SearchResult)
  return target;
}

size_t SearchResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.SearchResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .olama.Document documents = 1;
  total_size += 1UL * this->_internal_documents_size();
  for (const auto& msg : this->documents_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.SearchResult)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SearchResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.SearchResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.SearchResult)
    MergeFrom(*source);
  }
}

void SearchResult::MergeFrom(const SearchResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.SearchResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  documents_.MergeFrom(from.documents_);
}

void SearchResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.SearchResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchResult::CopyFrom(const SearchResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.SearchResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchResult::IsInitialized() const {
  return true;
}

void SearchResult::InternalSwap(SearchResult* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  documents_.InternalSwap(&other->documents_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SearchResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SearchParams::InitAsDefaultInstance() {
}
class SearchParams::_Internal {
 public:
};

SearchParams::SearchParams()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.SearchParams)
}
SearchParams::SearchParams(const SearchParams& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&nprobe_, &from.nprobe_,
    static_cast<size_t>(reinterpret_cast<char*>(&radius_) -
    reinterpret_cast<char*>(&nprobe_)) + sizeof(radius_));
  // @@protoc_insertion_point(copy_constructor:olama.SearchParams)
}

void SearchParams::SharedCtor() {
  ::memset(&nprobe_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&radius_) -
      reinterpret_cast<char*>(&nprobe_)) + sizeof(radius_));
}

SearchParams::~SearchParams() {
  // @@protoc_insertion_point(destructor:olama.SearchParams)
  SharedDtor();
}

void SearchParams::SharedDtor() {
}

void SearchParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SearchParams& SearchParams::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SearchParams_olama_2eproto.base);
  return *internal_default_instance();
}


void SearchParams::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.SearchParams)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&nprobe_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&radius_) -
      reinterpret_cast<char*>(&nprobe_)) + sizeof(radius_));
  _internal_metadata_.Clear();
}

const char* SearchParams::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 nprobe = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          nprobe_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 ef = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ef_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float radius = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          radius_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SearchParams::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.SearchParams)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 nprobe = 1;
  if (this->nprobe() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_nprobe(), target);
  }

  // uint32 ef = 2;
  if (this->ef() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_ef(), target);
  }

  // float radius = 3;
  if (!(this->radius() <= 0 && this->radius() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_radius(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.SearchParams)
  return target;
}

size_t SearchParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.SearchParams)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 nprobe = 1;
  if (this->nprobe() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_nprobe());
  }

  // uint32 ef = 2;
  if (this->ef() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ef());
  }

  // float radius = 3;
  if (!(this->radius() <= 0 && this->radius() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchParams::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.SearchParams)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchParams* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SearchParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.SearchParams)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.SearchParams)
    MergeFrom(*source);
  }
}

void SearchParams::MergeFrom(const SearchParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.SearchParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nprobe() != 0) {
    _internal_set_nprobe(from._internal_nprobe());
  }
  if (from.ef() != 0) {
    _internal_set_ef(from._internal_ef());
  }
  if (!(from.radius() <= 0 && from.radius() >= 0)) {
    _internal_set_radius(from._internal_radius());
  }
}

void SearchParams::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.SearchParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchParams::CopyFrom(const SearchParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.SearchParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchParams::IsInitialized() const {
  return true;
}

void SearchParams::InternalSwap(SearchParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(nprobe_, other->nprobe_);
  swap(ef_, other->ef_);
  swap(radius_, other->radius_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SearchParams::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void VectorArray::InitAsDefaultInstance() {
}
class VectorArray::_Internal {
 public:
};

VectorArray::VectorArray()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.VectorArray)
}
VectorArray::VectorArray(const VectorArray& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      vector_(from.vector_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:olama.VectorArray)
}

void VectorArray::SharedCtor() {
}

VectorArray::~VectorArray() {
  // @@protoc_insertion_point(destructor:olama.VectorArray)
  SharedDtor();
}

void VectorArray::SharedDtor() {
}

void VectorArray::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VectorArray& VectorArray::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VectorArray_olama_2eproto.base);
  return *internal_default_instance();
}


void VectorArray::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.VectorArray)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vector_.Clear();
  _internal_metadata_.Clear();
}

const char* VectorArray::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated float vector = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_vector(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13) {
          _internal_add_vector(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VectorArray::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.VectorArray)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float vector = 1;
  if (this->_internal_vector_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_vector(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.VectorArray)
  return target;
}

size_t VectorArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.VectorArray)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float vector = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_vector_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _vector_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VectorArray::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.VectorArray)
  GOOGLE_DCHECK_NE(&from, this);
  const VectorArray* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VectorArray>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.VectorArray)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.VectorArray)
    MergeFrom(*source);
  }
}

void VectorArray::MergeFrom(const VectorArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.VectorArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vector_.MergeFrom(from.vector_);
}

void VectorArray::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.VectorArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VectorArray::CopyFrom(const VectorArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.VectorArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VectorArray::IsInitialized() const {
  return true;
}

void VectorArray::InternalSwap(VectorArray* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  vector_.InternalSwap(&other->vector_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VectorArray::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SearchCond::InitAsDefaultInstance() {
  ::olama::_SearchCond_default_instance_._instance.get_mutable()->params_ = const_cast< ::olama::SearchParams*>(
      ::olama::SearchParams::internal_default_instance());
}
class SearchCond::_Internal {
 public:
  static const ::olama::SearchParams& params(const SearchCond* msg);
};

const ::olama::SearchParams&
SearchCond::_Internal::params(const SearchCond* msg) {
  return *msg->params_;
}
SearchCond::SearchCond()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.SearchCond)
}
SearchCond::SearchCond(const SearchCond& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      vectors_(from.vectors_),
      documentids_(from.documentids_),
      outputfields_(from.outputfields_),
      embeddingitems_(from.embeddingitems_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_filter().empty()) {
    filter_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from._internal_has_params()) {
    params_ = new ::olama::SearchParams(*from.params_);
  } else {
    params_ = nullptr;
  }
  ::memcpy(&retrievevector_, &from.retrievevector_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&retrievevector_)) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:olama.SearchCond)
}

void SearchCond::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SearchCond_olama_2eproto.base);
  filter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&params_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&params_)) + sizeof(limit_));
}

SearchCond::~SearchCond() {
  // @@protoc_insertion_point(destructor:olama.SearchCond)
  SharedDtor();
}

void SearchCond::SharedDtor() {
  filter_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete params_;
}

void SearchCond::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SearchCond& SearchCond::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SearchCond_olama_2eproto.base);
  return *internal_default_instance();
}


void SearchCond::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.SearchCond)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vectors_.Clear();
  documentids_.Clear();
  outputfields_.Clear();
  embeddingitems_.Clear();
  filter_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && params_ != nullptr) {
    delete params_;
  }
  params_ = nullptr;
  ::memset(&retrievevector_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&retrievevector_)) + sizeof(limit_));
  _internal_metadata_.Clear();
}

const char* SearchCond::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .olama.VectorArray vectors = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_vectors(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string documentIds = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_documentids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.SearchCond.documentIds"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // .olama.SearchParams params = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string filter = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_filter();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.SearchCond.filter"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool retrieveVector = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          retrievevector_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 limit = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string outputfields = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_outputfields();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.SearchCond.outputfields"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string embeddingItems = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_embeddingitems();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.SearchCond.embeddingItems"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SearchCond::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.SearchCond)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .olama.VectorArray vectors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_vectors_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_vectors(i), target, stream);
  }

  // repeated string documentIds = 2;
  for (int i = 0, n = this->_internal_documentids_size(); i < n; i++) {
    const auto& s = this->_internal_documentids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.SearchCond.documentIds");
    target = stream->WriteString(2, s, target);
  }

  // .olama.SearchParams params = 3;
  if (this->has_params()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::params(this), target, stream);
  }

  // string filter = 4;
  if (this->filter().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filter().data(), static_cast<int>(this->_internal_filter().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.SearchCond.filter");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_filter(), target);
  }

  // bool retrieveVector = 5;
  if (this->retrievevector() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_retrievevector(), target);
  }

  // uint32 limit = 6;
  if (this->limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_limit(), target);
  }

  // repeated string outputfields = 7;
  for (int i = 0, n = this->_internal_outputfields_size(); i < n; i++) {
    const auto& s = this->_internal_outputfields(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.SearchCond.outputfields");
    target = stream->WriteString(7, s, target);
  }

  // repeated string embeddingItems = 8;
  for (int i = 0, n = this->_internal_embeddingitems_size(); i < n; i++) {
    const auto& s = this->_internal_embeddingitems(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.SearchCond.embeddingItems");
    target = stream->WriteString(8, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.SearchCond)
  return target;
}

size_t SearchCond::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.SearchCond)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .olama.VectorArray vectors = 1;
  total_size += 1UL * this->_internal_vectors_size();
  for (const auto& msg : this->vectors_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string documentIds = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(documentids_.size());
  for (int i = 0, n = documentids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      documentids_.Get(i));
  }

  // repeated string outputfields = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(outputfields_.size());
  for (int i = 0, n = outputfields_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      outputfields_.Get(i));
  }

  // repeated string embeddingItems = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(embeddingitems_.size());
  for (int i = 0, n = embeddingitems_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      embeddingitems_.Get(i));
  }

  // string filter = 4;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filter());
  }

  // .olama.SearchParams params = 3;
  if (this->has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *params_);
  }

  // bool retrieveVector = 5;
  if (this->retrievevector() != 0) {
    total_size += 1 + 1;
  }

  // uint32 limit = 6;
  if (this->limit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_limit());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchCond::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.SearchCond)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchCond* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SearchCond>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.SearchCond)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.SearchCond)
    MergeFrom(*source);
  }
}

void SearchCond::MergeFrom(const SearchCond& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.SearchCond)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vectors_.MergeFrom(from.vectors_);
  documentids_.MergeFrom(from.documentids_);
  outputfields_.MergeFrom(from.outputfields_);
  embeddingitems_.MergeFrom(from.embeddingitems_);
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.has_params()) {
    _internal_mutable_params()->::olama::SearchParams::MergeFrom(from._internal_params());
  }
  if (from.retrievevector() != 0) {
    _internal_set_retrievevector(from._internal_retrievevector());
  }
  if (from.limit() != 0) {
    _internal_set_limit(from._internal_limit());
  }
}

void SearchCond::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.SearchCond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchCond::CopyFrom(const SearchCond& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.SearchCond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchCond::IsInitialized() const {
  return true;
}

void SearchCond::InternalSwap(SearchCond* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  vectors_.InternalSwap(&other->vectors_);
  documentids_.InternalSwap(&other->documentids_);
  outputfields_.InternalSwap(&other->outputfields_);
  embeddingitems_.InternalSwap(&other->embeddingitems_);
  filter_.Swap(&other->filter_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(params_, other->params_);
  swap(retrievevector_, other->retrievevector_);
  swap(limit_, other->limit_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SearchCond::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SearchRequest::InitAsDefaultInstance() {
  ::olama::_SearchRequest_default_instance_._instance.get_mutable()->search_ = const_cast< ::olama::SearchCond*>(
      ::olama::SearchCond::internal_default_instance());
}
class SearchRequest::_Internal {
 public:
  static const ::olama::SearchCond& search(const SearchRequest* msg);
};

const ::olama::SearchCond&
SearchRequest::_Internal::search(const SearchRequest* msg) {
  return *msg->search_;
}
SearchRequest::SearchRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.SearchRequest)
}
SearchRequest::SearchRequest(const SearchRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_database().empty()) {
    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_collection().empty()) {
    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  readconsistency_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_readconsistency().empty()) {
    readconsistency_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.readconsistency_);
  }
  if (from._internal_has_search()) {
    search_ = new ::olama::SearchCond(*from.search_);
  } else {
    search_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:olama.SearchRequest)
}

void SearchRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SearchRequest_olama_2eproto.base);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  readconsistency_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  search_ = nullptr;
}

SearchRequest::~SearchRequest() {
  // @@protoc_insertion_point(destructor:olama.SearchRequest)
  SharedDtor();
}

void SearchRequest::SharedDtor() {
  database_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  readconsistency_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete search_;
}

void SearchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SearchRequest& SearchRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SearchRequest_olama_2eproto.base);
  return *internal_default_instance();
}


void SearchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.SearchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  database_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collection_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  readconsistency_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && search_ != nullptr) {
    delete search_;
  }
  search_ = nullptr;
  _internal_metadata_.Clear();
}

const char* SearchRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string database = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_database();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.SearchRequest.database"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string collection = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_collection();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.SearchRequest.collection"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .olama.SearchCond search = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_search(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string readConsistency = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_readconsistency();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.SearchRequest.readConsistency"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SearchRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.SearchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string database = 1;
  if (this->database().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_database().data(), static_cast<int>(this->_internal_database().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.SearchRequest.database");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_database(), target);
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_collection().data(), static_cast<int>(this->_internal_collection().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.SearchRequest.collection");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_collection(), target);
  }

  // .olama.SearchCond search = 3;
  if (this->has_search()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::search(this), target, stream);
  }

  // string readConsistency = 4;
  if (this->readconsistency().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_readconsistency().data(), static_cast<int>(this->_internal_readconsistency().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.SearchRequest.readConsistency");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_readconsistency(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.SearchRequest)
  return target;
}

size_t SearchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.SearchRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string database = 1;
  if (this->database().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_database());
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_collection());
  }

  // string readConsistency = 4;
  if (this->readconsistency().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_readconsistency());
  }

  // .olama.SearchCond search = 3;
  if (this->has_search()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *search_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.SearchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SearchRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.SearchRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.SearchRequest)
    MergeFrom(*source);
  }
}

void SearchRequest::MergeFrom(const SearchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.SearchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.database().size() > 0) {

    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  if (from.collection().size() > 0) {

    collection_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  if (from.readconsistency().size() > 0) {

    readconsistency_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.readconsistency_);
  }
  if (from.has_search()) {
    _internal_mutable_search()->::olama::SearchCond::MergeFrom(from._internal_search());
  }
}

void SearchRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.SearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchRequest::CopyFrom(const SearchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.SearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchRequest::IsInitialized() const {
  return true;
}

void SearchRequest::InternalSwap(SearchRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  database_.Swap(&other->database_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  collection_.Swap(&other->collection_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  readconsistency_.Swap(&other->readconsistency_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(search_, other->search_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SearchRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Filter::InitAsDefaultInstance() {
}
class Filter::_Internal {
 public:
};

Filter::Filter()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.Filter)
}
Filter::Filter(const Filter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  expr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_expr().empty()) {
    expr_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.expr_);
  }
  ::memcpy(&radius_, &from.radius_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&radius_)) + sizeof(size_));
  // @@protoc_insertion_point(copy_constructor:olama.Filter)
}

void Filter::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Filter_olama_2eproto.base);
  expr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&radius_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&radius_)) + sizeof(size_));
}

Filter::~Filter() {
  // @@protoc_insertion_point(destructor:olama.Filter)
  SharedDtor();
}

void Filter::SharedDtor() {
  expr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Filter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Filter& Filter::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Filter_olama_2eproto.base);
  return *internal_default_instance();
}


void Filter::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.Filter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  expr_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&radius_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&radius_)) + sizeof(size_));
  _internal_metadata_.Clear();
}

const char* Filter::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string expr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_expr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.Filter.expr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float radius = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          radius_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // uint32 size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Filter::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.Filter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string expr = 1;
  if (this->expr().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_expr().data(), static_cast<int>(this->_internal_expr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.Filter.expr");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_expr(), target);
  }

  // float radius = 2;
  if (!(this->radius() <= 0 && this->radius() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_radius(), target);
  }

  // uint32 size = 3;
  if (this->size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.Filter)
  return target;
}

size_t Filter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.Filter)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string expr = 1;
  if (this->expr().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_expr());
  }

  // float radius = 2;
  if (!(this->radius() <= 0 && this->radius() >= 0)) {
    total_size += 1 + 4;
  }

  // uint32 size = 3;
  if (this->size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Filter::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.Filter)
  GOOGLE_DCHECK_NE(&from, this);
  const Filter* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Filter>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.Filter)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.Filter)
    MergeFrom(*source);
  }
}

void Filter::MergeFrom(const Filter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.Filter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.expr().size() > 0) {

    expr_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.expr_);
  }
  if (!(from.radius() <= 0 && from.radius() >= 0)) {
    _internal_set_radius(from._internal_radius());
  }
  if (from.size() != 0) {
    _internal_set_size(from._internal_size());
  }
}

void Filter::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.Filter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Filter::CopyFrom(const Filter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.Filter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Filter::IsInitialized() const {
  return true;
}

void Filter::InternalSwap(Filter* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  expr_.Swap(&other->expr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(radius_, other->radius_);
  swap(size_, other->size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Filter::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SearchResponse::InitAsDefaultInstance() {
  ::olama::_SearchResponse_default_instance_._instance.get_mutable()->embedding_extra_info_ = const_cast< ::olama::EmbeddingExtraInfo*>(
      ::olama::EmbeddingExtraInfo::internal_default_instance());
}
class SearchResponse::_Internal {
 public:
  static const ::olama::EmbeddingExtraInfo& embedding_extra_info(const SearchResponse* msg);
};

const ::olama::EmbeddingExtraInfo&
SearchResponse::_Internal::embedding_extra_info(const SearchResponse* msg) {
  return *msg->embedding_extra_info_;
}
SearchResponse::SearchResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.SearchResponse)
}
SearchResponse::SearchResponse(const SearchResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      results_(from.results_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  redirect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_redirect().empty()) {
    redirect_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  warning_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_warning().empty()) {
    warning_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.warning_);
  }
  if (from._internal_has_embedding_extra_info()) {
    embedding_extra_info_ = new ::olama::EmbeddingExtraInfo(*from.embedding_extra_info_);
  } else {
    embedding_extra_info_ = nullptr;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:olama.SearchResponse)
}

void SearchResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SearchResponse_olama_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  warning_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&embedding_extra_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&embedding_extra_info_)) + sizeof(code_));
}

SearchResponse::~SearchResponse() {
  // @@protoc_insertion_point(destructor:olama.SearchResponse)
  SharedDtor();
}

void SearchResponse::SharedDtor() {
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  warning_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete embedding_extra_info_;
}

void SearchResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SearchResponse& SearchResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SearchResponse_olama_2eproto.base);
  return *internal_default_instance();
}


void SearchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.SearchResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  warning_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && embedding_extra_info_ != nullptr) {
    delete embedding_extra_info_;
  }
  embedding_extra_info_ = nullptr;
  code_ = 0;
  _internal_metadata_.Clear();
}

const char* SearchResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.SearchResponse.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string redirect = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_redirect();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.SearchResponse.redirect"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .olama.SearchResult results = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // string warning = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_warning();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.SearchResponse.warning"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .olama.EmbeddingExtraInfo embedding_extra_info = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_embedding_extra_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SearchResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.SearchResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.SearchResponse.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  // string redirect = 3;
  if (this->redirect().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_redirect().data(), static_cast<int>(this->_internal_redirect().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.SearchResponse.redirect");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_redirect(), target);
  }

  // repeated .olama.SearchResult results = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_results_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_results(i), target, stream);
  }

  // string warning = 5;
  if (this->warning().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_warning().data(), static_cast<int>(this->_internal_warning().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.SearchResponse.warning");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_warning(), target);
  }

  // .olama.EmbeddingExtraInfo embedding_extra_info = 6;
  if (this->has_embedding_extra_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::embedding_extra_info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.SearchResponse)
  return target;
}

size_t SearchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.SearchResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .olama.SearchResult results = 4;
  total_size += 1UL * this->_internal_results_size();
  for (const auto& msg : this->results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // string redirect = 3;
  if (this->redirect().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_redirect());
  }

  // string warning = 5;
  if (this->warning().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_warning());
  }

  // .olama.EmbeddingExtraInfo embedding_extra_info = 6;
  if (this->has_embedding_extra_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *embedding_extra_info_);
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.SearchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SearchResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.SearchResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.SearchResponse)
    MergeFrom(*source);
  }
}

void SearchResponse::MergeFrom(const SearchResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.SearchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.redirect().size() > 0) {

    redirect_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  if (from.warning().size() > 0) {

    warning_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.warning_);
  }
  if (from.has_embedding_extra_info()) {
    _internal_mutable_embedding_extra_info()->::olama::EmbeddingExtraInfo::MergeFrom(from._internal_embedding_extra_info());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void SearchResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.SearchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchResponse::CopyFrom(const SearchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.SearchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchResponse::IsInitialized() const {
  return true;
}

void SearchResponse::InternalSwap(SearchResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  results_.InternalSwap(&other->results_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  redirect_.Swap(&other->redirect_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  warning_.Swap(&other->warning_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(embedding_extra_info_, other->embedding_extra_info_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SearchResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DatabaseRequest::InitAsDefaultInstance() {
}
class DatabaseRequest::_Internal {
 public:
};

DatabaseRequest::DatabaseRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.DatabaseRequest)
}
DatabaseRequest::DatabaseRequest(const DatabaseRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_database().empty()) {
    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  dbtype_ = from.dbtype_;
  // @@protoc_insertion_point(copy_constructor:olama.DatabaseRequest)
}

void DatabaseRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DatabaseRequest_olama_2eproto.base);
  database_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dbtype_ = 0;
}

DatabaseRequest::~DatabaseRequest() {
  // @@protoc_insertion_point(destructor:olama.DatabaseRequest)
  SharedDtor();
}

void DatabaseRequest::SharedDtor() {
  database_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DatabaseRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DatabaseRequest& DatabaseRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DatabaseRequest_olama_2eproto.base);
  return *internal_default_instance();
}


void DatabaseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.DatabaseRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  database_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dbtype_ = 0;
  _internal_metadata_.Clear();
}

const char* DatabaseRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string database = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_database();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.DatabaseRequest.database"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .olama.DataType dbType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_dbtype(static_cast<::olama::DataType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DatabaseRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.DatabaseRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string database = 1;
  if (this->database().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_database().data(), static_cast<int>(this->_internal_database().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.DatabaseRequest.database");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_database(), target);
  }

  // .olama.DataType dbType = 2;
  if (this->dbtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_dbtype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.DatabaseRequest)
  return target;
}

size_t DatabaseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.DatabaseRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string database = 1;
  if (this->database().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_database());
  }

  // .olama.DataType dbType = 2;
  if (this->dbtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_dbtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DatabaseRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.DatabaseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DatabaseRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DatabaseRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.DatabaseRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.DatabaseRequest)
    MergeFrom(*source);
  }
}

void DatabaseRequest::MergeFrom(const DatabaseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.DatabaseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.database().size() > 0) {

    database_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  if (from.dbtype() != 0) {
    _internal_set_dbtype(from._internal_dbtype());
  }
}

void DatabaseRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.DatabaseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DatabaseRequest::CopyFrom(const DatabaseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.DatabaseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DatabaseRequest::IsInitialized() const {
  return true;
}

void DatabaseRequest::InternalSwap(DatabaseRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  database_.Swap(&other->database_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(dbtype_, other->dbtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DatabaseRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

DatabaseResponse_InfoEntry_DoNotUse::DatabaseResponse_InfoEntry_DoNotUse() {}
DatabaseResponse_InfoEntry_DoNotUse::DatabaseResponse_InfoEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DatabaseResponse_InfoEntry_DoNotUse::MergeFrom(const DatabaseResponse_InfoEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DatabaseResponse_InfoEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void DatabaseResponse_InfoEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void DatabaseResponse::InitAsDefaultInstance() {
}
class DatabaseResponse::_Internal {
 public:
};

DatabaseResponse::DatabaseResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:olama.DatabaseResponse)
}
DatabaseResponse::DatabaseResponse(const DatabaseResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      databases_(from.databases_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  info_.MergeFrom(from.info_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  redirect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_redirect().empty()) {
    redirect_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  ::memcpy(&affectedcount_, &from.affectedcount_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&affectedcount_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:olama.DatabaseResponse)
}

void DatabaseResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DatabaseResponse_olama_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&affectedcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&affectedcount_)) + sizeof(code_));
}

DatabaseResponse::~DatabaseResponse() {
  // @@protoc_insertion_point(destructor:olama.DatabaseResponse)
  SharedDtor();
}

void DatabaseResponse::SharedDtor() {
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DatabaseResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DatabaseResponse& DatabaseResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DatabaseResponse_olama_2eproto.base);
  return *internal_default_instance();
}


void DatabaseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:olama.DatabaseResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  databases_.Clear();
  info_.Clear();
  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&affectedcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&affectedcount_)) + sizeof(code_));
  _internal_metadata_.Clear();
}

const char* DatabaseResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.DatabaseResponse.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string redirect = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_redirect();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.DatabaseResponse.redirect"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string databases = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_databases();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "olama.DatabaseResponse.databases"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // uint64 affectedCount = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          affectedcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .olama.DatabaseItem> info = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&info_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DatabaseResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:olama.DatabaseResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.DatabaseResponse.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  // string redirect = 3;
  if (this->redirect().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_redirect().data(), static_cast<int>(this->_internal_redirect().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.DatabaseResponse.redirect");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_redirect(), target);
  }

  // repeated string databases = 4;
  for (int i = 0, n = this->_internal_databases_size(); i < n; i++) {
    const auto& s = this->_internal_databases(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "olama.DatabaseResponse.databases");
    target = stream->WriteString(4, s, target);
  }

  // uint64 affectedCount = 5;
  if (this->affectedcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_affectedcount(), target);
  }

  // map<string, .olama.DatabaseItem> info = 6;
  if (!this->_internal_info().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::olama::DatabaseItem >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "olama.DatabaseResponse.InfoEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_info().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_info().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::olama::DatabaseItem >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::olama::DatabaseItem >::const_iterator
          it = this->_internal_info().begin();
          it != this->_internal_info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = DatabaseResponse_InfoEntry_DoNotUse::Funcs::InternalSerialize(6, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::olama::DatabaseItem >::const_iterator
          it = this->_internal_info().begin();
          it != this->_internal_info().end(); ++it) {
        target = DatabaseResponse_InfoEntry_DoNotUse::Funcs::InternalSerialize(6, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:olama.DatabaseResponse)
  return target;
}

size_t DatabaseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:olama.DatabaseResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string databases = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(databases_.size());
  for (int i = 0, n = databases_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      databases_.Get(i));
  }

  // map<string, .olama.DatabaseItem> info = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_info_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::olama::DatabaseItem >::const_iterator
      it = this->_internal_info().begin();
      it != this->_internal_info().end(); ++it) {
    total_size += DatabaseResponse_InfoEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // string redirect = 3;
  if (this->redirect().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_redirect());
  }

  // uint64 affectedCount = 5;
  if (this->affectedcount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_affectedcount());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DatabaseResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:olama.DatabaseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DatabaseResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DatabaseResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:olama.DatabaseResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:olama.DatabaseResponse)
    MergeFrom(*source);
  }
}

void DatabaseResponse::MergeFrom(const DatabaseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:olama.DatabaseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  databases_.MergeFrom(from.databases_);
  info_.MergeFrom(from.info_);
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.redirect().size() > 0) {

    redirect_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  if (from.affectedcount() != 0) {
    _internal_set_affectedcount(from._internal_affectedcount());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void DatabaseResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:olama.DatabaseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DatabaseResponse::CopyFrom(const DatabaseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:olama.DatabaseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DatabaseResponse::IsInitialized() const {
  return true;
}

void DatabaseResponse::InternalSwap(DatabaseResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  databases_.InternalSwap(&other->databases_);
  info_.Swap(&other->info_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  redirect_.Swap(&other->redirect_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(affectedcount_, other->affectedcount_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DatabaseResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace olama
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::olama::Document_FieldsEntry_DoNotUse* Arena::CreateMaybeMessage< ::olama::Document_FieldsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::olama::Document_FieldsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::Document* Arena::CreateMaybeMessage< ::olama::Document >(Arena* arena) {
  return Arena::CreateInternal< ::olama::Document >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::Field_StringArray* Arena::CreateMaybeMessage< ::olama::Field_StringArray >(Arena* arena) {
  return Arena::CreateInternal< ::olama::Field_StringArray >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::Field* Arena::CreateMaybeMessage< ::olama::Field >(Arena* arena) {
  return Arena::CreateInternal< ::olama::Field >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::ShardState* Arena::CreateMaybeMessage< ::olama::ShardState >(Arena* arena) {
  return Arena::CreateInternal< ::olama::ShardState >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::Shard* Arena::CreateMaybeMessage< ::olama::Shard >(Arena* arena) {
  return Arena::CreateInternal< ::olama::Shard >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::AliasItem* Arena::CreateMaybeMessage< ::olama::AliasItem >(Arena* arena) {
  return Arena::CreateInternal< ::olama::AliasItem >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::DatabaseItem* Arena::CreateMaybeMessage< ::olama::DatabaseItem >(Arena* arena) {
  return Arena::CreateInternal< ::olama::DatabaseItem >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::EmbeddingParams* Arena::CreateMaybeMessage< ::olama::EmbeddingParams >(Arena* arena) {
  return Arena::CreateInternal< ::olama::EmbeddingParams >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::CollectionConf_FieldMetasEntry_DoNotUse* Arena::CreateMaybeMessage< ::olama::CollectionConf_FieldMetasEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::olama::CollectionConf_FieldMetasEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::CollectionConf_OptionsEntry_DoNotUse* Arena::CreateMaybeMessage< ::olama::CollectionConf_OptionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::olama::CollectionConf_OptionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::CollectionConf* Arena::CreateMaybeMessage< ::olama::CollectionConf >(Arena* arena) {
  return Arena::CreateInternal< ::olama::CollectionConf >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::FieldMeta* Arena::CreateMaybeMessage< ::olama::FieldMeta >(Arena* arena) {
  return Arena::CreateInternal< ::olama::FieldMeta >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::ShardConf* Arena::CreateMaybeMessage< ::olama::ShardConf >(Arena* arena) {
  return Arena::CreateInternal< ::olama::ShardConf >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::TTLConfig* Arena::CreateMaybeMessage< ::olama::TTLConfig >(Arena* arena) {
  return Arena::CreateInternal< ::olama::TTLConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::ShardCollectionState* Arena::CreateMaybeMessage< ::olama::ShardCollectionState >(Arena* arena) {
  return Arena::CreateInternal< ::olama::ShardCollectionState >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::CollectionState* Arena::CreateMaybeMessage< ::olama::CollectionState >(Arena* arena) {
  return Arena::CreateInternal< ::olama::CollectionState >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::AddAliasRequest* Arena::CreateMaybeMessage< ::olama::AddAliasRequest >(Arena* arena) {
  return Arena::CreateInternal< ::olama::AddAliasRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::RemoveAliasRequest* Arena::CreateMaybeMessage< ::olama::RemoveAliasRequest >(Arena* arena) {
  return Arena::CreateInternal< ::olama::RemoveAliasRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::UpdateAliasResponse* Arena::CreateMaybeMessage< ::olama::UpdateAliasResponse >(Arena* arena) {
  return Arena::CreateInternal< ::olama::UpdateAliasResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::GetAliasRequest* Arena::CreateMaybeMessage< ::olama::GetAliasRequest >(Arena* arena) {
  return Arena::CreateInternal< ::olama::GetAliasRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::GetAliasResponse* Arena::CreateMaybeMessage< ::olama::GetAliasResponse >(Arena* arena) {
  return Arena::CreateInternal< ::olama::GetAliasResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::DescribeCollectionRequest* Arena::CreateMaybeMessage< ::olama::DescribeCollectionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::olama::DescribeCollectionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::DescribeCollectionResponse* Arena::CreateMaybeMessage< ::olama::DescribeCollectionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::olama::DescribeCollectionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::ListCollectionsRequest* Arena::CreateMaybeMessage< ::olama::ListCollectionsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::olama::ListCollectionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::ListCollectionsResponse* Arena::CreateMaybeMessage< ::olama::ListCollectionsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::olama::ListCollectionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::IndexParams* Arena::CreateMaybeMessage< ::olama::IndexParams >(Arena* arena) {
  return Arena::CreateInternal< ::olama::IndexParams >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::IndexColumn* Arena::CreateMaybeMessage< ::olama::IndexColumn >(Arena* arena) {
  return Arena::CreateInternal< ::olama::IndexColumn >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::IndexStatus* Arena::CreateMaybeMessage< ::olama::IndexStatus >(Arena* arena) {
  return Arena::CreateInternal< ::olama::IndexStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::CreateCollectionRequest_IndexesEntry_DoNotUse* Arena::CreateMaybeMessage< ::olama::CreateCollectionRequest_IndexesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::olama::CreateCollectionRequest_IndexesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::CreateCollectionRequest* Arena::CreateMaybeMessage< ::olama::CreateCollectionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::olama::CreateCollectionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::CreateCollectionResponse* Arena::CreateMaybeMessage< ::olama::CreateCollectionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::olama::CreateCollectionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::DropCollectionRequest* Arena::CreateMaybeMessage< ::olama::DropCollectionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::olama::DropCollectionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::DropCollectionResponse* Arena::CreateMaybeMessage< ::olama::DropCollectionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::olama::DropCollectionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::TruncateCollectionRequest* Arena::CreateMaybeMessage< ::olama::TruncateCollectionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::olama::TruncateCollectionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::TruncateCollectionResponse* Arena::CreateMaybeMessage< ::olama::TruncateCollectionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::olama::TruncateCollectionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::RebuildIndexRequest* Arena::CreateMaybeMessage< ::olama::RebuildIndexRequest >(Arena* arena) {
  return Arena::CreateInternal< ::olama::RebuildIndexRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::RebuildIndexResponse* Arena::CreateMaybeMessage< ::olama::RebuildIndexResponse >(Arena* arena) {
  return Arena::CreateInternal< ::olama::RebuildIndexResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::UpsertRequest* Arena::CreateMaybeMessage< ::olama::UpsertRequest >(Arena* arena) {
  return Arena::CreateInternal< ::olama::UpsertRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::EmbeddingExtraInfo* Arena::CreateMaybeMessage< ::olama::EmbeddingExtraInfo >(Arena* arena) {
  return Arena::CreateInternal< ::olama::EmbeddingExtraInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::UpsertResponse* Arena::CreateMaybeMessage< ::olama::UpsertResponse >(Arena* arena) {
  return Arena::CreateInternal< ::olama::UpsertResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::UpdateRequest* Arena::CreateMaybeMessage< ::olama::UpdateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::olama::UpdateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::UpdateResponse* Arena::CreateMaybeMessage< ::olama::UpdateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::olama::UpdateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::DeleteRequest* Arena::CreateMaybeMessage< ::olama::DeleteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::olama::DeleteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::DeleteResponse* Arena::CreateMaybeMessage< ::olama::DeleteResponse >(Arena* arena) {
  return Arena::CreateInternal< ::olama::DeleteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::QueryCond* Arena::CreateMaybeMessage< ::olama::QueryCond >(Arena* arena) {
  return Arena::CreateInternal< ::olama::QueryCond >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::QueryRequest* Arena::CreateMaybeMessage< ::olama::QueryRequest >(Arena* arena) {
  return Arena::CreateInternal< ::olama::QueryRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::QueryResponse* Arena::CreateMaybeMessage< ::olama::QueryResponse >(Arena* arena) {
  return Arena::CreateInternal< ::olama::QueryResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::SearchResult* Arena::CreateMaybeMessage< ::olama::SearchResult >(Arena* arena) {
  return Arena::CreateInternal< ::olama::SearchResult >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::SearchParams* Arena::CreateMaybeMessage< ::olama::SearchParams >(Arena* arena) {
  return Arena::CreateInternal< ::olama::SearchParams >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::VectorArray* Arena::CreateMaybeMessage< ::olama::VectorArray >(Arena* arena) {
  return Arena::CreateInternal< ::olama::VectorArray >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::SearchCond* Arena::CreateMaybeMessage< ::olama::SearchCond >(Arena* arena) {
  return Arena::CreateInternal< ::olama::SearchCond >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::SearchRequest* Arena::CreateMaybeMessage< ::olama::SearchRequest >(Arena* arena) {
  return Arena::CreateInternal< ::olama::SearchRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::Filter* Arena::CreateMaybeMessage< ::olama::Filter >(Arena* arena) {
  return Arena::CreateInternal< ::olama::Filter >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::SearchResponse* Arena::CreateMaybeMessage< ::olama::SearchResponse >(Arena* arena) {
  return Arena::CreateInternal< ::olama::SearchResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::DatabaseRequest* Arena::CreateMaybeMessage< ::olama::DatabaseRequest >(Arena* arena) {
  return Arena::CreateInternal< ::olama::DatabaseRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::DatabaseResponse_InfoEntry_DoNotUse* Arena::CreateMaybeMessage< ::olama::DatabaseResponse_InfoEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::olama::DatabaseResponse_InfoEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::olama::DatabaseResponse* Arena::CreateMaybeMessage< ::olama::DatabaseResponse >(Arena* arena) {
  return Arena::CreateInternal< ::olama::DatabaseResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
